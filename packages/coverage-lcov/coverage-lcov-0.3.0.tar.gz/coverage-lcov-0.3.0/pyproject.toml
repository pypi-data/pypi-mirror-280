[tool.coverage.run]
omit = [".venv"]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 140

[tool.mypy]
# Display options
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

# Dynamic/generics rules
disallow_any_generics = true
disallow_subclassing_any = true

# Untyped rules
check_untyped_defs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

# None/Optional rules
no_implicit_optional = true
strict_optional = true

# Warnings
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

# Strict rules
ignore_missing_imports = true
strict_equality = true

[tool.poetry]
name = "coverage-lcov"
version = "0.3.0"
description = "A simple .coverage to LCOV converter"
authors = [
    "Adam Weeden <adamweeden@gmail.com>",
    "Chay Choong <chaychoong@gmail.com>",
]
repository = "https://github.com/TheCleric/coverage-lcov"
readme = "README.md"
keywords = ["coverage"]

[tool.poetry.scripts]
coverage-lcov = "coverage_lcov.cli:main"

[tool.poetry.dependencies]
python = "^3.6.3"
coverage = [
    { extras = ["toml"], version = ">=5.5", python = "<3.8.0" },
    { extras = ["toml"], version = ">=7.0", python = ">=3.8.0" }
]
click = ">=7.1.2"

[tool.poetry.dev-dependencies]
black = "^21.5b0"
isort = "^5.8.0"
mypy = "^0.910"
pytest = [
    { version = "^5.2", python = "<3.10.0" },
    { version = "^6.2", python = ">=3.10.0" },
]
types-click = ">=7.1.5"
pylint = [
    { version = ">=2.10.2,<2.14.0", python = "<3.8.0" },
    { version = ">=2.14.0", python = ">=3.8.0,<4.0.0" }
]
tomlkit = { version = "^0.11.6", python = "<3.8.0" }

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pylint.pep8]
'max-line-length' = 140

[tool.pylint.SIMILARITIES]
min-similarity-lines = 8

[tool.pylint.MASTER]
ignore = '**/site-packages'
# init-hook = "import os, sys; workspace_root=os.path.realpath(os.path.join(os.path.dirname(__file__), '..', '..', '..', '..', '..', '..')); sys.path.append(workspace_root)"

[tool.pylint.'MESSAGES CONTROL']
enable = ['errors', 'warnings', 'all']
disable = [
    'locally-disabled',
    'missing-class-docstring',
    'missing-function-docstring',
    'missing-module-docstring',
    'no-member',
    'suppressed-message',
    'unknown-option-value'
]
