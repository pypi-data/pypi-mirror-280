import{d as h,V as x,W as y,K as b,f as g,c as w,g as o,h as V,i as k,o as v,j as u,k as a,E as B,G as r,B as C,U,L as d,M as E}from"./index-BMRLX027.js";import{_ as I}from"./AutomationWizard.vue_vue_type_script_setup_true_lang-CXxeaaPQ.js";import{u as N}from"./usePageTitle-C6TtrEA6.js";import{u as P}from"./usePrefectApi-BQCsh4hu.js";const G=h({__name:"AutomationEdit",async setup(T){let t,m;const i=P(),c=x(),l=k(),p=y("automationId"),e=([t,m]=b(()=>i.automations.getAutomation(p.value)),t=await t,m(),t);N(`Edit Automation: ${e.name}`);const f=g(()=>[{text:"Automations",to:c.automations()},{text:e.name}]);async function A(_){try{await i.automations.updateAutomation(p.value,_),d(r.success.automationUpdate),l.push(c.automations())}catch(s){console.error(s);const n=E(s,r.error.automationUpdate);d(n,"error",{timeout:!1})}}return(_,s)=>{const n=V("p-layout-default");return v(),w(n,{class:"workspace-automation-create"},{header:o(()=>[u(a(U),{crumbs:f.value},{actions:o(()=>[u(a(B),{to:a(r).docs.automations},{default:o(()=>[C(" Documentation ")]),_:1},8,["to"])]),_:1},8,["crumbs"])]),default:o(()=>[u(I,{automation:a(e),editing:"",onSubmit:A},null,8,["automation"])]),_:1})}}});export{G as default};
//# sourceMappingURL=AutomationEdit-BdV2F3PA.js.map
