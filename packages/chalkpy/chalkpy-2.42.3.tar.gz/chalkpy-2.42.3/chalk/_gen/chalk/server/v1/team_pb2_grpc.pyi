"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
from abc import (
    ABCMeta,
    abstractmethod,
)
from chalk._gen.chalk.server.v1.team_pb2 import (
    CreateEnvironmentRequest,
    CreateEnvironmentResponse,
    CreateProjectRequest,
    CreateProjectResponse,
    CreateServiceTokenRequest,
    CreateServiceTokenResponse,
    CreateTeamRequest,
    CreateTeamResponse,
    DeleteServiceTokenRequest,
    DeleteServiceTokenResponse,
    GetAgentRequest,
    GetAgentResponse,
    GetAvailablePermissionsRequest,
    GetAvailablePermissionsResponse,
    GetDisplayAgentRequest,
    GetDisplayAgentResponse,
    GetEnvRequest,
    GetEnvResponse,
    GetEnvironmentsRequest,
    GetEnvironmentsResponse,
    GetTeamRequest,
    GetTeamResponse,
    ListServiceTokensRequest,
    ListServiceTokensResponse,
    UpdateServiceTokenRequest,
    UpdateServiceTokenResponse,
    UpsertFeaturePermissionsRequest,
    UpsertFeaturePermissionsResponse,
)
from collections.abc import (
    AsyncIterator,
    Awaitable,
    Iterator,
)
from grpc import (
    Channel,
    Server,
    ServicerContext,
    UnaryUnaryMultiCallable,
)
from grpc.aio import (
    Channel,
    Server,
    ServicerContext,
    UnaryUnaryMultiCallable,
)
from typing import (
    TypeVar,
    Union,
)

_T = TypeVar("_T")

class _MaybeAsyncIterator(AsyncIterator[_T], Iterator[_T], metaclass=ABCMeta): ...
class _ServicerContext(ServicerContext, ServicerContext):  # type: ignore
    ...

class TeamServiceStub:
    def __init__(self, channel: Union[Channel, Channel]) -> None: ...
    GetEnv: UnaryUnaryMultiCallable[
        GetEnvRequest,
        GetEnvResponse,
    ]
    GetEnvironments: UnaryUnaryMultiCallable[
        GetEnvironmentsRequest,
        GetEnvironmentsResponse,
    ]
    GetAgent: UnaryUnaryMultiCallable[
        GetAgentRequest,
        GetAgentResponse,
    ]
    GetDisplayAgent: UnaryUnaryMultiCallable[
        GetDisplayAgentRequest,
        GetDisplayAgentResponse,
    ]
    GetTeam: UnaryUnaryMultiCallable[
        GetTeamRequest,
        GetTeamResponse,
    ]
    CreateTeam: UnaryUnaryMultiCallable[
        CreateTeamRequest,
        CreateTeamResponse,
    ]
    CreateProject: UnaryUnaryMultiCallable[
        CreateProjectRequest,
        CreateProjectResponse,
    ]
    CreateEnvironment: UnaryUnaryMultiCallable[
        CreateEnvironmentRequest,
        CreateEnvironmentResponse,
    ]
    GetAvailablePermissions: UnaryUnaryMultiCallable[
        GetAvailablePermissionsRequest,
        GetAvailablePermissionsResponse,
    ]
    CreateServiceToken: UnaryUnaryMultiCallable[
        CreateServiceTokenRequest,
        CreateServiceTokenResponse,
    ]
    DeleteServiceToken: UnaryUnaryMultiCallable[
        DeleteServiceTokenRequest,
        DeleteServiceTokenResponse,
    ]
    ListServiceTokens: UnaryUnaryMultiCallable[
        ListServiceTokensRequest,
        ListServiceTokensResponse,
    ]
    UpdateServiceToken: UnaryUnaryMultiCallable[
        UpdateServiceTokenRequest,
        UpdateServiceTokenResponse,
    ]
    UpsertFeaturePermissions: UnaryUnaryMultiCallable[
        UpsertFeaturePermissionsRequest,
        UpsertFeaturePermissionsResponse,
    ]

class TeamServiceAsyncStub:
    GetEnv: UnaryUnaryMultiCallable[
        GetEnvRequest,
        GetEnvResponse,
    ]
    GetEnvironments: UnaryUnaryMultiCallable[
        GetEnvironmentsRequest,
        GetEnvironmentsResponse,
    ]
    GetAgent: UnaryUnaryMultiCallable[
        GetAgentRequest,
        GetAgentResponse,
    ]
    GetDisplayAgent: UnaryUnaryMultiCallable[
        GetDisplayAgentRequest,
        GetDisplayAgentResponse,
    ]
    GetTeam: UnaryUnaryMultiCallable[
        GetTeamRequest,
        GetTeamResponse,
    ]
    CreateTeam: UnaryUnaryMultiCallable[
        CreateTeamRequest,
        CreateTeamResponse,
    ]
    CreateProject: UnaryUnaryMultiCallable[
        CreateProjectRequest,
        CreateProjectResponse,
    ]
    CreateEnvironment: UnaryUnaryMultiCallable[
        CreateEnvironmentRequest,
        CreateEnvironmentResponse,
    ]
    GetAvailablePermissions: UnaryUnaryMultiCallable[
        GetAvailablePermissionsRequest,
        GetAvailablePermissionsResponse,
    ]
    CreateServiceToken: UnaryUnaryMultiCallable[
        CreateServiceTokenRequest,
        CreateServiceTokenResponse,
    ]
    DeleteServiceToken: UnaryUnaryMultiCallable[
        DeleteServiceTokenRequest,
        DeleteServiceTokenResponse,
    ]
    ListServiceTokens: UnaryUnaryMultiCallable[
        ListServiceTokensRequest,
        ListServiceTokensResponse,
    ]
    UpdateServiceToken: UnaryUnaryMultiCallable[
        UpdateServiceTokenRequest,
        UpdateServiceTokenResponse,
    ]
    UpsertFeaturePermissions: UnaryUnaryMultiCallable[
        UpsertFeaturePermissionsRequest,
        UpsertFeaturePermissionsResponse,
    ]

class TeamServiceServicer(metaclass=ABCMeta):
    @abstractmethod
    def GetEnv(
        self,
        request: GetEnvRequest,
        context: _ServicerContext,
    ) -> Union[GetEnvResponse, Awaitable[GetEnvResponse]]: ...
    @abstractmethod
    def GetEnvironments(
        self,
        request: GetEnvironmentsRequest,
        context: _ServicerContext,
    ) -> Union[GetEnvironmentsResponse, Awaitable[GetEnvironmentsResponse]]: ...
    @abstractmethod
    def GetAgent(
        self,
        request: GetAgentRequest,
        context: _ServicerContext,
    ) -> Union[GetAgentResponse, Awaitable[GetAgentResponse]]: ...
    @abstractmethod
    def GetDisplayAgent(
        self,
        request: GetDisplayAgentRequest,
        context: _ServicerContext,
    ) -> Union[GetDisplayAgentResponse, Awaitable[GetDisplayAgentResponse]]: ...
    @abstractmethod
    def GetTeam(
        self,
        request: GetTeamRequest,
        context: _ServicerContext,
    ) -> Union[GetTeamResponse, Awaitable[GetTeamResponse]]: ...
    @abstractmethod
    def CreateTeam(
        self,
        request: CreateTeamRequest,
        context: _ServicerContext,
    ) -> Union[CreateTeamResponse, Awaitable[CreateTeamResponse]]: ...
    @abstractmethod
    def CreateProject(
        self,
        request: CreateProjectRequest,
        context: _ServicerContext,
    ) -> Union[CreateProjectResponse, Awaitable[CreateProjectResponse]]: ...
    @abstractmethod
    def CreateEnvironment(
        self,
        request: CreateEnvironmentRequest,
        context: _ServicerContext,
    ) -> Union[CreateEnvironmentResponse, Awaitable[CreateEnvironmentResponse]]: ...
    @abstractmethod
    def GetAvailablePermissions(
        self,
        request: GetAvailablePermissionsRequest,
        context: _ServicerContext,
    ) -> Union[GetAvailablePermissionsResponse, Awaitable[GetAvailablePermissionsResponse]]: ...
    @abstractmethod
    def CreateServiceToken(
        self,
        request: CreateServiceTokenRequest,
        context: _ServicerContext,
    ) -> Union[CreateServiceTokenResponse, Awaitable[CreateServiceTokenResponse]]: ...
    @abstractmethod
    def DeleteServiceToken(
        self,
        request: DeleteServiceTokenRequest,
        context: _ServicerContext,
    ) -> Union[DeleteServiceTokenResponse, Awaitable[DeleteServiceTokenResponse]]: ...
    @abstractmethod
    def ListServiceTokens(
        self,
        request: ListServiceTokensRequest,
        context: _ServicerContext,
    ) -> Union[ListServiceTokensResponse, Awaitable[ListServiceTokensResponse]]: ...
    @abstractmethod
    def UpdateServiceToken(
        self,
        request: UpdateServiceTokenRequest,
        context: _ServicerContext,
    ) -> Union[UpdateServiceTokenResponse, Awaitable[UpdateServiceTokenResponse]]: ...
    @abstractmethod
    def UpsertFeaturePermissions(
        self,
        request: UpsertFeaturePermissionsRequest,
        context: _ServicerContext,
    ) -> Union[UpsertFeaturePermissionsResponse, Awaitable[UpsertFeaturePermissionsResponse]]: ...

def add_TeamServiceServicer_to_server(servicer: TeamServiceServicer, server: Union[Server, Server]) -> None: ...
