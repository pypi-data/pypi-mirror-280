"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
from abc import (
    ABCMeta,
    abstractmethod,
)
from chalk._gen.chalk.server.v1.monitoring_pb2 import (
    AddPagerDutyIntegrationRequest,
    AddPagerDutyIntegrationResponse,
    DeletePagerDutyIntegrationRequest,
    DeletePagerDutyIntegrationResponse,
    GetAllPagerDutyIntegrationsRequest,
    GetAllPagerDutyIntegrationsResponse,
    GetPagerDutyIntegrationRequest,
    GetPagerDutyIntegrationResponse,
    SetDefaultPagerDutyIntegrationRequest,
    SetDefaultPagerDutyIntegrationResponse,
    TestPagerDutyIntegrationRequest,
    TestPagerDutyIntegrationResponse,
    UpdatePagerDutyIntegrationRequest,
    UpdatePagerDutyIntegrationResponse,
)
from collections.abc import (
    AsyncIterator,
    Awaitable,
    Iterator,
)
from grpc import (
    Channel,
    Server,
    ServicerContext,
    UnaryUnaryMultiCallable,
)
from grpc.aio import (
    Channel,
    Server,
    ServicerContext,
    UnaryUnaryMultiCallable,
)
from typing import (
    TypeVar,
    Union,
)

_T = TypeVar("_T")

class _MaybeAsyncIterator(AsyncIterator[_T], Iterator[_T], metaclass=ABCMeta): ...
class _ServicerContext(ServicerContext, ServicerContext):  # type: ignore
    ...

class MonitoringServiceStub:
    def __init__(self, channel: Union[Channel, Channel]) -> None: ...
    TestPagerDutyIntegration: UnaryUnaryMultiCallable[
        TestPagerDutyIntegrationRequest,
        TestPagerDutyIntegrationResponse,
    ]
    AddPagerDutyIntegration: UnaryUnaryMultiCallable[
        AddPagerDutyIntegrationRequest,
        AddPagerDutyIntegrationResponse,
    ]
    DeletePagerDutyIntegration: UnaryUnaryMultiCallable[
        DeletePagerDutyIntegrationRequest,
        DeletePagerDutyIntegrationResponse,
    ]
    SetDefaultPagerDutyIntegration: UnaryUnaryMultiCallable[
        SetDefaultPagerDutyIntegrationRequest,
        SetDefaultPagerDutyIntegrationResponse,
    ]
    UpdatePagerDutyIntegration: UnaryUnaryMultiCallable[
        UpdatePagerDutyIntegrationRequest,
        UpdatePagerDutyIntegrationResponse,
    ]
    GetAllPagerDutyIntegrations: UnaryUnaryMultiCallable[
        GetAllPagerDutyIntegrationsRequest,
        GetAllPagerDutyIntegrationsResponse,
    ]
    GetPagerDutyIntegration: UnaryUnaryMultiCallable[
        GetPagerDutyIntegrationRequest,
        GetPagerDutyIntegrationResponse,
    ]

class MonitoringServiceAsyncStub:
    TestPagerDutyIntegration: UnaryUnaryMultiCallable[
        TestPagerDutyIntegrationRequest,
        TestPagerDutyIntegrationResponse,
    ]
    AddPagerDutyIntegration: UnaryUnaryMultiCallable[
        AddPagerDutyIntegrationRequest,
        AddPagerDutyIntegrationResponse,
    ]
    DeletePagerDutyIntegration: UnaryUnaryMultiCallable[
        DeletePagerDutyIntegrationRequest,
        DeletePagerDutyIntegrationResponse,
    ]
    SetDefaultPagerDutyIntegration: UnaryUnaryMultiCallable[
        SetDefaultPagerDutyIntegrationRequest,
        SetDefaultPagerDutyIntegrationResponse,
    ]
    UpdatePagerDutyIntegration: UnaryUnaryMultiCallable[
        UpdatePagerDutyIntegrationRequest,
        UpdatePagerDutyIntegrationResponse,
    ]
    GetAllPagerDutyIntegrations: UnaryUnaryMultiCallable[
        GetAllPagerDutyIntegrationsRequest,
        GetAllPagerDutyIntegrationsResponse,
    ]
    GetPagerDutyIntegration: UnaryUnaryMultiCallable[
        GetPagerDutyIntegrationRequest,
        GetPagerDutyIntegrationResponse,
    ]

class MonitoringServiceServicer(metaclass=ABCMeta):
    @abstractmethod
    def TestPagerDutyIntegration(
        self,
        request: TestPagerDutyIntegrationRequest,
        context: _ServicerContext,
    ) -> Union[TestPagerDutyIntegrationResponse, Awaitable[TestPagerDutyIntegrationResponse]]: ...
    @abstractmethod
    def AddPagerDutyIntegration(
        self,
        request: AddPagerDutyIntegrationRequest,
        context: _ServicerContext,
    ) -> Union[AddPagerDutyIntegrationResponse, Awaitable[AddPagerDutyIntegrationResponse]]: ...
    @abstractmethod
    def DeletePagerDutyIntegration(
        self,
        request: DeletePagerDutyIntegrationRequest,
        context: _ServicerContext,
    ) -> Union[DeletePagerDutyIntegrationResponse, Awaitable[DeletePagerDutyIntegrationResponse]]: ...
    @abstractmethod
    def SetDefaultPagerDutyIntegration(
        self,
        request: SetDefaultPagerDutyIntegrationRequest,
        context: _ServicerContext,
    ) -> Union[SetDefaultPagerDutyIntegrationResponse, Awaitable[SetDefaultPagerDutyIntegrationResponse]]: ...
    @abstractmethod
    def UpdatePagerDutyIntegration(
        self,
        request: UpdatePagerDutyIntegrationRequest,
        context: _ServicerContext,
    ) -> Union[UpdatePagerDutyIntegrationResponse, Awaitable[UpdatePagerDutyIntegrationResponse]]: ...
    @abstractmethod
    def GetAllPagerDutyIntegrations(
        self,
        request: GetAllPagerDutyIntegrationsRequest,
        context: _ServicerContext,
    ) -> Union[GetAllPagerDutyIntegrationsResponse, Awaitable[GetAllPagerDutyIntegrationsResponse]]: ...
    @abstractmethod
    def GetPagerDutyIntegration(
        self,
        request: GetPagerDutyIntegrationRequest,
        context: _ServicerContext,
    ) -> Union[GetPagerDutyIntegrationResponse, Awaitable[GetPagerDutyIntegrationResponse]]: ...

def add_MonitoringServiceServicer_to_server(
    servicer: MonitoringServiceServicer, server: Union[Server, Server]
) -> None: ...
