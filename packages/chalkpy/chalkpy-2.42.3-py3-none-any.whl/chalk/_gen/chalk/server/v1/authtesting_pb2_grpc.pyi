"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
from abc import (
    ABCMeta,
    abstractmethod,
)
from chalk._gen.chalk.server.v1.authtesting_pb2 import (
    GetAdminTestEndpointRequest,
    GetAdminTestEndpointResponse,
    GetAuthedTestEndpointRequest,
    GetAuthedTestEndpointResponse,
    GetDataScientistTestEndpointRequest,
    GetDataScientistTestEndpointResponse,
    GetDeveloperTestEndpointRequest,
    GetDeveloperTestEndpointResponse,
    GetOwnerTestEndpointRequest,
    GetOwnerTestEndpointResponse,
    GetUnauthedTestEndpointRequest,
    GetUnauthedTestEndpointResponse,
    GetViewerTestEndpointRequest,
    GetViewerTestEndpointResponse,
)
from collections.abc import (
    AsyncIterator,
    Awaitable,
    Iterator,
)
from grpc import (
    Channel,
    Server,
    ServicerContext,
    UnaryUnaryMultiCallable,
)
from grpc.aio import (
    Channel,
    Server,
    ServicerContext,
    UnaryUnaryMultiCallable,
)
from typing import (
    TypeVar,
    Union,
)

_T = TypeVar("_T")

class _MaybeAsyncIterator(AsyncIterator[_T], Iterator[_T], metaclass=ABCMeta): ...
class _ServicerContext(ServicerContext, ServicerContext):  # type: ignore
    ...

class AuthTestingServiceStub:
    def __init__(self, channel: Union[Channel, Channel]) -> None: ...
    GetUnauthedTestEndpoint: UnaryUnaryMultiCallable[
        GetUnauthedTestEndpointRequest,
        GetUnauthedTestEndpointResponse,
    ]
    GetAuthedTestEndpoint: UnaryUnaryMultiCallable[
        GetAuthedTestEndpointRequest,
        GetAuthedTestEndpointResponse,
    ]
    GetViewerTestEndpoint: UnaryUnaryMultiCallable[
        GetViewerTestEndpointRequest,
        GetViewerTestEndpointResponse,
    ]
    GetDataScientistTestEndpoint: UnaryUnaryMultiCallable[
        GetDataScientistTestEndpointRequest,
        GetDataScientistTestEndpointResponse,
    ]
    GetDeveloperTestEndpoint: UnaryUnaryMultiCallable[
        GetDeveloperTestEndpointRequest,
        GetDeveloperTestEndpointResponse,
    ]
    GetAdminTestEndpoint: UnaryUnaryMultiCallable[
        GetAdminTestEndpointRequest,
        GetAdminTestEndpointResponse,
    ]
    GetOwnerTestEndpoint: UnaryUnaryMultiCallable[
        GetOwnerTestEndpointRequest,
        GetOwnerTestEndpointResponse,
    ]

class AuthTestingServiceAsyncStub:
    GetUnauthedTestEndpoint: UnaryUnaryMultiCallable[
        GetUnauthedTestEndpointRequest,
        GetUnauthedTestEndpointResponse,
    ]
    GetAuthedTestEndpoint: UnaryUnaryMultiCallable[
        GetAuthedTestEndpointRequest,
        GetAuthedTestEndpointResponse,
    ]
    GetViewerTestEndpoint: UnaryUnaryMultiCallable[
        GetViewerTestEndpointRequest,
        GetViewerTestEndpointResponse,
    ]
    GetDataScientistTestEndpoint: UnaryUnaryMultiCallable[
        GetDataScientistTestEndpointRequest,
        GetDataScientistTestEndpointResponse,
    ]
    GetDeveloperTestEndpoint: UnaryUnaryMultiCallable[
        GetDeveloperTestEndpointRequest,
        GetDeveloperTestEndpointResponse,
    ]
    GetAdminTestEndpoint: UnaryUnaryMultiCallable[
        GetAdminTestEndpointRequest,
        GetAdminTestEndpointResponse,
    ]
    GetOwnerTestEndpoint: UnaryUnaryMultiCallable[
        GetOwnerTestEndpointRequest,
        GetOwnerTestEndpointResponse,
    ]

class AuthTestingServiceServicer(metaclass=ABCMeta):
    @abstractmethod
    def GetUnauthedTestEndpoint(
        self,
        request: GetUnauthedTestEndpointRequest,
        context: _ServicerContext,
    ) -> Union[GetUnauthedTestEndpointResponse, Awaitable[GetUnauthedTestEndpointResponse]]: ...
    @abstractmethod
    def GetAuthedTestEndpoint(
        self,
        request: GetAuthedTestEndpointRequest,
        context: _ServicerContext,
    ) -> Union[GetAuthedTestEndpointResponse, Awaitable[GetAuthedTestEndpointResponse]]: ...
    @abstractmethod
    def GetViewerTestEndpoint(
        self,
        request: GetViewerTestEndpointRequest,
        context: _ServicerContext,
    ) -> Union[GetViewerTestEndpointResponse, Awaitable[GetViewerTestEndpointResponse]]: ...
    @abstractmethod
    def GetDataScientistTestEndpoint(
        self,
        request: GetDataScientistTestEndpointRequest,
        context: _ServicerContext,
    ) -> Union[GetDataScientistTestEndpointResponse, Awaitable[GetDataScientistTestEndpointResponse]]: ...
    @abstractmethod
    def GetDeveloperTestEndpoint(
        self,
        request: GetDeveloperTestEndpointRequest,
        context: _ServicerContext,
    ) -> Union[GetDeveloperTestEndpointResponse, Awaitable[GetDeveloperTestEndpointResponse]]: ...
    @abstractmethod
    def GetAdminTestEndpoint(
        self,
        request: GetAdminTestEndpointRequest,
        context: _ServicerContext,
    ) -> Union[GetAdminTestEndpointResponse, Awaitable[GetAdminTestEndpointResponse]]: ...
    @abstractmethod
    def GetOwnerTestEndpoint(
        self,
        request: GetOwnerTestEndpointRequest,
        context: _ServicerContext,
    ) -> Union[GetOwnerTestEndpointResponse, Awaitable[GetOwnerTestEndpointResponse]]: ...

def add_AuthTestingServiceServicer_to_server(
    servicer: AuthTestingServiceServicer, server: Union[Server, Server]
) -> None: ...
