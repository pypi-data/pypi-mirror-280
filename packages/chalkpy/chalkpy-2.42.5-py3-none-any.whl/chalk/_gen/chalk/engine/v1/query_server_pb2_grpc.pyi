"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

from abc import (
    ABCMeta,
    abstractmethod,
)
from chalk._gen.chalk.common.v1.online_query_pb2 import (
    OnlineQueryBulkRequest,
    OnlineQueryBulkResponse,
    OnlineQueryMultiRequest,
    OnlineQueryMultiResponse,
    OnlineQueryRequest,
    OnlineQueryResponse,
)
from chalk._gen.chalk.engine.v1.query_server_pb2 import (
    PingRequest,
    PingResponse,
)
from collections.abc import (
    AsyncIterator,
    Awaitable,
    Iterator,
)
from grpc import (
    Channel,
    Server,
    ServicerContext,
    UnaryUnaryMultiCallable,
)
from grpc.aio import (
    Channel,
    Server,
    ServicerContext,
    UnaryUnaryMultiCallable,
)
from typing import (
    TypeVar,
    Union,
)

_T = TypeVar("_T")

class _MaybeAsyncIterator(AsyncIterator[_T], Iterator[_T], metaclass=ABCMeta): ...
class _ServicerContext(ServicerContext, ServicerContext):  # type: ignore
    ...

class QueryServiceStub:
    def __init__(self, channel: Union[Channel, Channel]) -> None: ...
    Ping: UnaryUnaryMultiCallable[
        PingRequest,
        PingResponse,
    ]
    OnlineQuery: UnaryUnaryMultiCallable[
        OnlineQueryRequest,
        OnlineQueryResponse,
    ]
    OnlineQueryBulk: UnaryUnaryMultiCallable[
        OnlineQueryBulkRequest,
        OnlineQueryBulkResponse,
    ]
    OnlineQueryMulti: UnaryUnaryMultiCallable[
        OnlineQueryMultiRequest,
        OnlineQueryMultiResponse,
    ]

class QueryServiceAsyncStub:
    Ping: UnaryUnaryMultiCallable[
        PingRequest,
        PingResponse,
    ]
    OnlineQuery: UnaryUnaryMultiCallable[
        OnlineQueryRequest,
        OnlineQueryResponse,
    ]
    OnlineQueryBulk: UnaryUnaryMultiCallable[
        OnlineQueryBulkRequest,
        OnlineQueryBulkResponse,
    ]
    OnlineQueryMulti: UnaryUnaryMultiCallable[
        OnlineQueryMultiRequest,
        OnlineQueryMultiResponse,
    ]

class QueryServiceServicer(metaclass=ABCMeta):
    @abstractmethod
    def Ping(
        self,
        request: PingRequest,
        context: _ServicerContext,
    ) -> Union[PingResponse, Awaitable[PingResponse]]: ...
    @abstractmethod
    def OnlineQuery(
        self,
        request: OnlineQueryRequest,
        context: _ServicerContext,
    ) -> Union[OnlineQueryResponse, Awaitable[OnlineQueryResponse]]: ...
    @abstractmethod
    def OnlineQueryBulk(
        self,
        request: OnlineQueryBulkRequest,
        context: _ServicerContext,
    ) -> Union[OnlineQueryBulkResponse, Awaitable[OnlineQueryBulkResponse]]: ...
    @abstractmethod
    def OnlineQueryMulti(
        self,
        request: OnlineQueryMultiRequest,
        context: _ServicerContext,
    ) -> Union[OnlineQueryMultiResponse, Awaitable[OnlineQueryMultiResponse]]: ...

def add_QueryServiceServicer_to_server(servicer: QueryServiceServicer, server: Union[Server, Server]) -> None: ...
