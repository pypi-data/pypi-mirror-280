"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

from abc import (
    ABCMeta,
    abstractmethod,
)
from chalk._gen.chalk.common.v1.query_log_pb2 import (
    GetQueryLogEntriesRequest,
    GetQueryLogEntriesResponse,
)
from chalk._gen.chalk.common.v1.query_values_pb2 import (
    GetQueryValuesRequest,
    GetQueryValuesResponse,
)
from collections.abc import (
    AsyncIterator,
    Awaitable,
    Iterator,
)
from grpc import (
    Channel,
    Server,
    ServicerContext,
    UnaryUnaryMultiCallable,
)
from grpc.aio import (
    Channel,
    Server,
    ServicerContext,
    UnaryUnaryMultiCallable,
)
from typing import (
    TypeVar,
    Union,
)

_T = TypeVar("_T")

class _MaybeAsyncIterator(AsyncIterator[_T], Iterator[_T], metaclass=ABCMeta): ...
class _ServicerContext(ServicerContext, ServicerContext):  # type: ignore
    ...

class OfflineStoreServiceStub:
    """This service exposes endpoints for dealing with the offline store. It should never depend on the python graph."""

    def __init__(self, channel: Union[Channel, Channel]) -> None: ...
    GetQueryLogEntries: UnaryUnaryMultiCallable[
        GetQueryLogEntriesRequest,
        GetQueryLogEntriesResponse,
    ]
    GetQueryValues: UnaryUnaryMultiCallable[
        GetQueryValuesRequest,
        GetQueryValuesResponse,
    ]

class OfflineStoreServiceAsyncStub:
    """This service exposes endpoints for dealing with the offline store. It should never depend on the python graph."""

    GetQueryLogEntries: UnaryUnaryMultiCallable[
        GetQueryLogEntriesRequest,
        GetQueryLogEntriesResponse,
    ]
    GetQueryValues: UnaryUnaryMultiCallable[
        GetQueryValuesRequest,
        GetQueryValuesResponse,
    ]

class OfflineStoreServiceServicer(metaclass=ABCMeta):
    """This service exposes endpoints for dealing with the offline store. It should never depend on the python graph."""

    @abstractmethod
    def GetQueryLogEntries(
        self,
        request: GetQueryLogEntriesRequest,
        context: _ServicerContext,
    ) -> Union[GetQueryLogEntriesResponse, Awaitable[GetQueryLogEntriesResponse]]: ...
    @abstractmethod
    def GetQueryValues(
        self,
        request: GetQueryValuesRequest,
        context: _ServicerContext,
    ) -> Union[GetQueryValuesResponse, Awaitable[GetQueryValuesResponse]]: ...

def add_OfflineStoreServiceServicer_to_server(
    servicer: OfflineStoreServiceServicer, server: Union[Server, Server]
) -> None: ...
