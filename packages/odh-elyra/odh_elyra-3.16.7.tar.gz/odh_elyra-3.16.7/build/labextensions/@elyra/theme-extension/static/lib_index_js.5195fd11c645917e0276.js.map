{"version":3,"file":"lib_index_js.5195fd11c645917e0276.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AAC4H;AAC7B;AAC/F,8BAA8B,mFAA2B,CAAC,wGAAqC;AAC/F;AACA,4JAA4J,ugBAAugB,wCAAwC,GAAG,SAAS,+FAA+F,MAAM,KAAK,YAAY,4IAA4I,ugBAAugB,wCAAwC,GAAG,qBAAqB;AAChiD;AACA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;;;ACPwD;AAC/F,YAA6F;;AAE7F;;AAEA;AACA;;AAEA,aAAa,0GAAG,CAAC,sFAAO;;;;AAIxB,iEAAe,6FAAc,MAAM;;;;;;;;;;ACZtB;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB,mBAAO,CAAC,uGAAsB;AACtD,sBAAsB,mBAAO,CAAC,wFAAyB;AACvD,mBAAmB,mBAAO,CAAC,kFAAsB;AACjD,mBAAmB,mBAAO,CAAC,kFAAsB;AACjD,mBAAmB,mBAAO,CAAC,kFAAsB;AACjD,sBAAsB,mBAAO,CAAC,wFAAyB;AACvD,wBAAwB,mBAAO,CAAC,4FAA2B;AAC3D,oBAAoB,mBAAO,CAAC,4EAAmB;AAC/C,mBAAmB,mBAAO,CAAC,qCAAY;AACvC,mBAAO,CAAC,6CAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,aAAa;AACpD;AACA,iDAAiD,SAAS;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,6DAA6D,mBAAmB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,6DAA6D,KAAK;AAClE,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0BAA0B;AAC3B,kBAAe;AACf;;;;;;;;;;AClKa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oCAAoC,gBAAgB;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,0CAA0C,4BAA4B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB,GAAG,qBAAqB;AACxC,wBAAwB,mBAAO,CAAC,uGAAsB;AACtD,mBAAmB,mBAAO,CAAC,kFAAsB;AACjD,oBAAoB,mBAAO,CAAC,4EAAmB;AAC/C,2BAA2B,mBAAO,CAAC,oDAAO;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,+BAA+B;AAChG;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,6CAA6C,+BAA+B;AAC5E,yCAAyC,kCAAkC;AAC3E,6CAA6C,8BAA8B;AAC3E;AACA;AACA;AACA;AACA,gBAAgB;AAChB","sources":["webpack://@elyra/theme-extension/./style/index.css","webpack://@elyra/theme-extension/./style/index.css?f019","webpack://@elyra/theme-extension/./lib/index.js","webpack://@elyra/theme-extension/./lib/launcher.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*\\n * Copyright 2018-2023 Elyra Authors\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\n.jp-LabShell {\\n  background: var(--jp-layout-color3);\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./style/index.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;EAcE;;AAEF;EACE,mCAAmC;AACrC\",\"sourcesContent\":[\"/*\\n * Copyright 2018-2023 Elyra Authors\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n */\\n\\n.jp-LabShell {\\n  background: var(--jp-layout-color3);\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!./index.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","\"use strict\";\n/*\n * Copyright 2018-2023 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ui_components_1 = require(\"@elyra/ui-components\");\nconst application_1 = require(\"@jupyterlab/application\");\nconst apputils_1 = require(\"@jupyterlab/apputils\");\nconst launcher_1 = require(\"@jupyterlab/launcher\");\nconst mainmenu_1 = require(\"@jupyterlab/mainmenu\");\nconst translation_1 = require(\"@jupyterlab/translation\");\nconst ui_components_2 = require(\"@jupyterlab/ui-components\");\nconst algorithm_1 = require(\"@lumino/algorithm\");\nconst launcher_2 = require(\"./launcher\");\nrequire(\"../style/index.css\");\nconst ELYRA_THEME_NAMESPACE = 'elyra-theme-extension';\n/**\n * The command IDs used by the launcher plugin.\n */\nconst CommandIDs = {\n    create: 'launcher:create',\n    openHelp: 'elyra:open-help',\n    releases: 'elyra:releases'\n};\n/**\n * Initialization data for the theme extension.\n */\nconst extension = {\n    id: ELYRA_THEME_NAMESPACE,\n    autoStart: true,\n    requires: [translation_1.ITranslator, application_1.ILabShell, mainmenu_1.IMainMenu],\n    optional: [apputils_1.ICommandPalette],\n    provides: launcher_1.ILauncher,\n    activate: (app, translator, labShell, mainMenu, palette) => {\n        console.log('Elyra - theme extension is activated!');\n        // Find the MainLogo widget in the shell and replace it with the Elyra Logo\n        const widgets = app.shell.widgets('top');\n        let widget = widgets.next();\n        while (widget !== undefined) {\n            if (widget.id === 'jp-MainLogo') {\n                ui_components_1.elyraIcon.element({\n                    container: widget.node,\n                    justify: 'center',\n                    margin: '2px 5px 2px 5px',\n                    height: 'auto',\n                    width: '20px'\n                });\n                break;\n            }\n            widget = widgets.next();\n        }\n        // Use custom Elyra launcher\n        const { commands, shell } = app;\n        const trans = translator.load('jupyterlab');\n        const model = new launcher_2.LauncherModel();\n        commands.addCommand(CommandIDs.create, {\n            label: trans.__('New Launcher'),\n            execute: (args) => {\n                const cwd = args['cwd'] ? String(args['cwd']) : '';\n                const id = `launcher-${Private.id++}`;\n                const callback = (item) => {\n                    labShell.add(item, 'main', { ref: id });\n                };\n                const launcher = new launcher_2.Launcher({\n                    model,\n                    cwd,\n                    callback,\n                    commands,\n                    translator\n                });\n                launcher.model = model;\n                launcher.title.icon = ui_components_2.launcherIcon;\n                launcher.title.label = trans.__('Launcher');\n                const main = new apputils_1.MainAreaWidget({ content: launcher });\n                // If there are any other widgets open, remove the launcher close icon.\n                main.title.closable = !!algorithm_1.toArray(labShell.widgets('main')).length;\n                main.id = id;\n                shell.add(main, 'main', {\n                    activate: args['activate'],\n                    ref: args['ref']\n                });\n                labShell.layoutModified.connect(() => {\n                    // If there is only a launcher open, remove the close icon.\n                    main.title.closable = algorithm_1.toArray(labShell.widgets('main')).length > 1;\n                }, main);\n                return main;\n            }\n        });\n        if (palette) {\n            palette.addItem({\n                command: CommandIDs.create,\n                category: trans.__('Launcher')\n            });\n        }\n        if (labShell) {\n            labShell.addButtonEnabled = true;\n            labShell.addRequested.connect((sender, arg) => {\n                var _a;\n                // Get the ref for the current tab of the tabbar which the add button was clicked\n                const ref = ((_a = arg.currentTitle) === null || _a === void 0 ? void 0 : _a.owner.id) ||\n                    arg.titles[arg.titles.length - 1].owner.id;\n                if (commands.hasCommand('filebrowser:create-main-launcher')) {\n                    // If a file browser is defined connect the launcher to it\n                    return commands.execute('filebrowser:create-main-launcher', {\n                        ref\n                    });\n                }\n                return commands.execute(CommandIDs.create, { ref });\n            });\n        }\n        commands.addCommand(CommandIDs.openHelp, {\n            label: 'Documentation',\n            icon: ui_components_1.helpIcon,\n            execute: (args) => {\n                window.open('https://elyra.readthedocs.io/en/latest/', '_blank');\n            }\n        });\n        commands.addCommand(CommandIDs.releases, {\n            label: \"What's new in latest\",\n            caption: \"What's new in this release\",\n            icon: ui_components_1.whatsNewIcon,\n            execute: (args) => {\n                window.open('https://github.com/elyra-ai/elyra/releases/latest/', '_blank');\n            }\n        });\n        model.add({\n            command: CommandIDs.openHelp,\n            category: 'Elyra',\n            rank: 10\n        });\n        model.add({\n            command: CommandIDs.releases,\n            category: 'Elyra',\n            rank: 11\n        });\n        return model;\n    }\n};\n/**\n * The namespace for module private data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * The incrementing id used for launcher widgets.\n     */\n    // eslint-disable-next-line\n    Private.id = 0;\n})(Private || (Private = {}));\nexports.default = extension;\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*\n * Copyright 2018-2023 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Launcher = exports.LauncherModel = void 0;\nconst ui_components_1 = require(\"@elyra/ui-components\");\nconst launcher_1 = require(\"@jupyterlab/launcher\");\nconst algorithm_1 = require(\"@lumino/algorithm\");\nconst React = __importStar(require(\"react\"));\n/**\n * The known categories of launcher items and their default ordering.\n */\nconst ELYRA_CATEGORY = 'Elyra';\nconst CommandIDs = {\n    newFile: 'fileeditor:create-new',\n    createNewPythonEditor: 'script-editor:create-new-python-editor',\n    createNewREditor: 'script-editor:create-new-r-editor'\n};\nclass LauncherModel extends launcher_1.LauncherModel {\n    /**\n     * Return an iterator of launcher items, but remove unnecessary items.\n     */\n    items() {\n        const items = [];\n        let pyEditorInstalled = false;\n        let rEditorInstalled = false;\n        this.itemsList.forEach(item => {\n            if (item.command === CommandIDs.createNewPythonEditor) {\n                pyEditorInstalled = true;\n            }\n            else if (item.command === CommandIDs.createNewREditor) {\n                rEditorInstalled = true;\n            }\n        });\n        if (!pyEditorInstalled && !rEditorInstalled) {\n            return new algorithm_1.ArrayIterator(this.itemsList);\n        }\n        // Dont add tiles for new py and r files if their script editor is installed\n        this.itemsList.forEach(item => {\n            var _a, _b;\n            if (!(item.command === CommandIDs.newFile &&\n                ((pyEditorInstalled && ((_a = item.args) === null || _a === void 0 ? void 0 : _a.fileExt) === 'py') ||\n                    (rEditorInstalled && ((_b = item.args) === null || _b === void 0 ? void 0 : _b.fileExt) === 'r')))) {\n                items.push(item);\n            }\n        });\n        return new algorithm_1.ArrayIterator(items);\n    }\n}\nexports.LauncherModel = LauncherModel;\nclass Launcher extends launcher_1.Launcher {\n    /**\n     * Construct a new launcher widget.\n     */\n    constructor(options) {\n        super(options);\n        this._translator = this.translator.load('jupyterlab');\n    }\n    replaceCategoryIcon(category, icon) {\n        const children = React.Children.map(category.props.children, child => {\n            if (child.props.className === 'jp-Launcher-sectionHeader') {\n                const grandchildren = React.Children.map(child.props.children, grandchild => {\n                    if (grandchild.props.className !== 'jp-Launcher-sectionTitle') {\n                        return React.createElement(icon.react, { stylesheet: \"launcherSection\" });\n                    }\n                    else {\n                        return grandchild;\n                    }\n                });\n                return React.cloneElement(child, child.props, grandchildren);\n            }\n            else {\n                return child;\n            }\n        });\n        return React.cloneElement(category, category.props, children);\n    }\n    /**\n     * Render the launcher to virtual DOM nodes.\n     */\n    render() {\n        // Bail if there is no model.\n        if (!this.model) {\n            return null;\n        }\n        // get the rendering from JupyterLab Launcher\n        // and resort the categories\n        const launcherBody = super.render();\n        const launcherContent = launcherBody === null || launcherBody === void 0 ? void 0 : launcherBody.props.children;\n        const launcherCategories = launcherContent.props.children;\n        const categories = [];\n        const knownCategories = [\n            this._translator.__('Notebook'),\n            this._translator.__('Console'),\n            ELYRA_CATEGORY,\n            this._translator.__('Other')\n        ];\n        // Assemble the final ordered list of categories\n        // based on knownCategories.\n        algorithm_1.each(knownCategories, (category, index) => {\n            React.Children.forEach(launcherCategories, cat => {\n                if (cat.key === category) {\n                    if (cat.key === ELYRA_CATEGORY) {\n                        cat = this.replaceCategoryIcon(cat, ui_components_1.elyraIcon);\n                    }\n                    categories.push(cat);\n                }\n            });\n        });\n        // Wrap the sections in body and content divs.\n        return (React.createElement(\"div\", { className: \"jp-Launcher-body\" },\n            React.createElement(\"div\", { className: \"jp-Launcher-content\" },\n                React.createElement(\"div\", { className: \"jp-Launcher-cwd\" },\n                    React.createElement(\"h3\", null, this.cwd)),\n                categories)));\n    }\n}\nexports.Launcher = Launcher;\n//# sourceMappingURL=launcher.js.map"],"names":[],"sourceRoot":""}