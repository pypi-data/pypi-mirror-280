[build-system]
requires = ["setuptools>=61.0", "packaging", "torch", "pybind11>=2.10.0", "build>=1.2.1"]
build-backend = "setuptools.build_meta"

[project]
name = "realhf"
description = "ReaL: Efficient RLHF Training of Large Language Models with Parameter Reallocation"
readme = "README.md"
requires-python = ">=3.10,<3.12"
dynamic = ["version"]
authors = [
    { name = "Zhiyu Mei", email = "meizy20@mails.tsinghua.edu.cn" },
    { name = "Wei Fu", email = "fuwth17@gmail.com" },
]
maintainers = [
    { name = "Zhiyu Mei", email = "meizy20@mails.tsinghua.edu.cn" },
    { name = "Wei Fu", email = "fuwth17@gmail.com" },
]
keywords = [
    "distributed-systems",
    "reinforcement-learning-from-human-feedback",
    "large-language-models",
    "llm-training",
]
classifiers = [
    #   3 - Alpha
    #   4 - Beta
    #   5 - Production/Stable
    "Development Status :: 2 - Pre-Alpha",
    "Environment :: GPU :: NVIDIA CUDA :: 12 :: 12.2",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
]

[project.urls]
Homepage = "https://github.com/openpsi-project/ReaLHF"
Issues = "https://github.com/openpsi-project/ReaLHF/issues"
Documentation = "https://openpsi-project.github.io/ReaLHF/"
Repository = "https://github.com/openpsi-project/ReaLHF"

[tool.setuptools.dynamic]
version = {attr = "realhf.__version__"}

[tool.setuptools.packages.find]
where = ["."] # ["."] by default
# include = ["csrc/*", "realhf/*"] # ["*"] by default
# exclude = ["tests", "docker"]    # empty by default
# namespaces = false               # true by default

[tool.isort]
from_first = true
force_alphabetical_sort_within_sections = true
lexicographical = true
src_paths = ["."]
line_length = 80

[tool.yapf]
based_on_style = "pep8"
column_limit = 80
split_before_named_assigns = true
split_before_first_argument = false
blank_line_before_nested_class_or_def = true
# split_all_comma_separated_values = true
space_between_ending_comma_and_closing_bracket = false
allow_split_before_dict_value = false

[tool.pytest.ini_options]
pythonpath = ["."]

[tool.black]
line-length = 80
target-version = ['py37', 'py38', 'py39', 'py310', 'py311']
skip-string-normalization = true
include = '\.pyi?$'
exclude = '''
/(
    \.eggs|
    \.git|
    \.hg|
    \.mypy_cache|
    \.nox|
    \.tox|
    \.venv|
    _build|
    buck-out|
    build|
    dist
)/
'''
