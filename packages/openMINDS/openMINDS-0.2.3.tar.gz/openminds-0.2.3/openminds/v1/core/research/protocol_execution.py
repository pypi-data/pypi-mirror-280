"""
Structured information on a protocol execution.
"""

# this file was auto-generated!


from openminds.base import LinkedMetadata
from openminds.properties import Property


class ProtocolExecution(LinkedMetadata):
    """
    Structured information on a protocol execution.
    """

    type_ = "https://openminds.ebrains.eu/core/ProtocolExecution"
    context = {"@vocab": "https://openminds.ebrains.eu/vocab/"}
    schema_version = "v1.0"

    properties = [
        Property(
            "description",
            str,
            "description",
            formatting="text/markdown",
            multiline=True,
            description="Longer statement or account giving the characteristics of the protocol execution.",
            instructions="Enter a description of this protocol execution.",
        ),
        Property(
            "inputs",
            [
                "openminds.v1.core.FileBundle",
                "openminds.v1.core.FileInstance",
                "openminds.v1.core.SubjectGroupState",
                "openminds.v1.core.SubjectState",
                "openminds.v1.core.TissueSampleCollectionState",
                "openminds.v1.core.TissueSampleState",
            ],
            "input",
            multiple=True,
            unique_items=True,
            min_items=1,
            required=True,
            description="Something or someone that is put into or participates in a process or machine.",
            instructions="Add all inputs (subject state, tissue sample state, file instance or file bundle) used by this protocol execution.",
        ),
        Property(
            "outputs",
            [
                "openminds.v1.core.FileBundle",
                "openminds.v1.core.FileInstance",
                "openminds.v1.core.SubjectGroupState",
                "openminds.v1.core.SubjectState",
                "openminds.v1.core.TissueSampleCollectionState",
                "openminds.v1.core.TissueSampleState",
            ],
            "output",
            multiple=True,
            unique_items=True,
            min_items=1,
            required=True,
            description="Something or someone that comes out of, is delivered or produced by a process or machine.",
            instructions="Add all outputs (subject state, tissue sample state, file instance or file bundle) generated by this protocol execution.",
        ),
        Property(
            "parameter_settings",
            "openminds.v1.core.ParameterSetting",
            "parameterSetting",
            multiple=True,
            unique_items=True,
            min_items=1,
            description="no description available",
            instructions="Add all important parameter settings defining this protocol execution.",
        ),
        Property(
            "preparation_type",
            "openminds.v1.controlled_terms.PreparationType",
            "preparationType",
            description="Distinct class of actions or processes that make something ready for use or service.",
            instructions="Add the initial preparation type for this protocol execution.",
        ),
        Property(
            "protocol",
            "openminds.v1.core.Protocol",
            "protocol",
            required=True,
            description="Plan that describes the process of a scientific or medical experiment, treatment, or procedure.",
            instructions="Add the protocol of this protocol execution.",
        ),
        Property(
            "semantically_anchored_to",
            "openminds.v1.sands.AnatomicalEntity",
            "semanticallyAnchoredTo",
            multiple=True,
            unique_items=True,
            min_items=1,
            description="Reference to a related anatomical structure without providing a quantitative proof of the claimed relation.",
            instructions="Add all anatomical entities to which the outputs of this protocol execution can be semantically anchored to.",
        ),
        Property(
            "study_targets",
            [
                "openminds.v1.controlled_terms.BiologicalSex",
                "openminds.v1.controlled_terms.Disease",
                "openminds.v1.controlled_terms.Genotype",
                "openminds.v1.controlled_terms.Phenotype",
                "openminds.v1.controlled_terms.Species",
                "openminds.v1.controlled_terms.TermSuggestion",
                "openminds.v1.sands.AnatomicalEntity",
            ],
            "studyTarget",
            multiple=True,
            unique_items=True,
            min_items=1,
            description="Structure or function that was targeted within a study.",
            instructions="Add all study targets of this model version.",
        ),
    ]

    def __init__(
        self,
        id=None,
        description=None,
        inputs=None,
        outputs=None,
        parameter_settings=None,
        preparation_type=None,
        protocol=None,
        semantically_anchored_to=None,
        study_targets=None,
    ):
        return super().__init__(
            id=id,
            description=description,
            inputs=inputs,
            outputs=outputs,
            parameter_settings=parameter_settings,
            preparation_type=preparation_type,
            protocol=protocol,
            semantically_anchored_to=semantically_anchored_to,
            study_targets=study_targets,
        )
