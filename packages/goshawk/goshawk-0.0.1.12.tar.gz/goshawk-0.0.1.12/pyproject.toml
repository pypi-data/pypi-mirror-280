[tool.poetry]
name = "goshawk"
version = "0.0.1.12"
description = "A tool for managing SQL Models"
authors = ["Eric Brassell <erb123@gmail.com>"]
repository = "https://github.com/ebrassell/goshawk"
documentation = "https://ebrassell.github.io/goshawk/"
readme = "README.md"
packages = [
  {include = "goshawk"}
]

[project]
dependencies = [
    "typing-extensions==^4.10.0",
]

[tool.poetry.scripts]
goshawk = 'goshawk.main:app'


[tool.poetry.dependencies]
python = ">=3.10,<3.12"
typer = "^0.9.0"
typing-extensions = "^4.10.0"
pydantic-settings = "^2.2.1"
sqlglot = "^23.0.5"
loguru = "^0.7.2"
duckdb = "1.0"
pyyaml = "^6.0.1"
snowflake-connector-python = "^3.10.0"
tabulate = "^0.9.0"


[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
deptry = "^0.12.0"
mypy = "^1.5.1"
pre-commit = "^3.4.0"
tox = "^4.11.1"
types-pyyaml = "^6.0.12.20240311"
types-tabulate = "^0.9.0.20240106"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^9.2.7"
mkdocstrings = {extras = ["python"], version = "^0.23.0"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
files = ["goshawk"]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"

[tool.pytest.ini_options]
testpaths = ["tests"]
markers = [
    "snow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.ruff]
target-version = "py37"
line-length = 120
fix = true
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
    # Use of `assert` (needed for type narrowing)
    "S101",
    # Avoid specifying long messages outside the exception class
    "TRY003",
    # Possible SQL injection vector through string-based query construction
    "S608"
]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["goshawk"]


[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[tool.deptry]
extend_exclude = ["duck.py","deploy_duck.py","motherduck.py",".xperiments/*"]
