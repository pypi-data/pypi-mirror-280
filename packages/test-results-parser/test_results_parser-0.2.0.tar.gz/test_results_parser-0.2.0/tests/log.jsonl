{"pytest_version": "7.4.3", "$report_type": "SessionStart"}
{"nodeid": "", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "tests/test_junit.py::Testrun", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "tests/test_junit.py::TestParsers", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"nodeid": "tests/test_junit.py", "outcome": "passed", "longrepr": null, "result": null, "sections": [], "$report_type": "CollectReport"}
{"category": "PytestCollectionWarning", "filename": "", "lineno": 0, "message": "cannot collect test class 'Testrun' because it has a __new__ constructor (from: tests/test_junit.py)", "$report_type": "WarningMessage", "when": "collect", "location": null}
{"nodeid": "tests/test_junit.py::TestParsers::test_junit[./tests/junit.xml-expected0]", "location": ["tests/test_junit.py", 5, "TestParsers.test_junit[./tests/junit.xml-expected0]"], "keywords": {"test_junit[./tests/junit.xml-expected0]": 1, "parametrize": 1, "pytestmark": 1, "./tests/junit.xml-expected0": 1, "TestParsers": 1, "tests/test_junit.py": 1, "testing-result-parsers": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00018783402629196644, "start": 1704475472.9840362, "stop": 1704475472.984224, "$report_type": "TestReport"}
{"nodeid": "tests/test_junit.py::TestParsers::test_junit[./tests/junit.xml-expected0]", "location": ["tests/test_junit.py", 5, "TestParsers.test_junit[./tests/junit.xml-expected0]"], "keywords": {"test_junit[./tests/junit.xml-expected0]": 1, "parametrize": 1, "pytestmark": 1, "./tests/junit.xml-expected0": 1, "TestParsers": 1, "tests/test_junit.py": 1, "testing-result-parsers": 1}, "outcome": "failed", "longrepr": {"reprcrash": {"path": "/codecov/testing-result-parsers/tests/test_junit.py", "lineno": 103, "message": "AssertionError: assert (tests.test_parsers.TestParsers::test_junit[junit.xml--True], Failure, 0.001, pytest, self = &lt;test_parsers.TestPars...t_parsers.TestParsers.test_junit[jest-junit.xml-]', 'outcome': 'pass'}] == ''\\n\\ntests/test_parsers.py:16: AssertionErro) == (tests.test_parsers.TestParsers::test_junit[junit.xml--True], Failure, 0.001, pytest, self = &lt;test_parsers.TestPars..._parsers.TestParsers.test_junit[jest-junit.xml-]', 'outcome': 'pass'}] == ''\\n\\ntests/test_parsers.py:16: AssertionError)"}, "reprtraceback": {"reprentries": [{"type": "ReprEntry", "data": {"lines": ["        @pytest.mark.parametrize(", "            \"filename,expected\",", "            [", "                (", "                    \"./tests/junit.xml\",", "                    [", "                        Testrun(", "                            \"tests.test_parsers.TestParsers::test_junit[junit.xml--True]\",", "                            0.001,", "                            Outcome.Failure,", "                            \"pytest\",", "                            \"\"\"self = &lt;test_parsers.TestParsers object at 0x102182d10&gt;, filename = 'junit.xml', expected = '', check = True", "    ", "        @pytest.mark.parametrize(", "            \"filename,expected,check\",", "            [(\"junit.xml\", \"\", True), (\"jest-junit.xml\", \"\", False)],", "        )", "        def test_junit(self, filename, expected, check):", "            with open(filename) as f:", "                junit_string = f.read()", "                res = parse_junit_xml(junit_string)", "                print(res)", "                if check:", "    &gt;               assert res == expected", "    E               AssertionError: assert [{'duration': '0.010', 'name': 'tests.test_parsers.TestParsers.test_junit[junit.xml-]', 'outcome': 'failure'}, {'duration': '0.063', 'name': 'tests.test_parsers.TestParsers.test_junit[jest-junit.xml-]', 'outcome': 'pass'}] == ''", "    ", "    tests/test_parsers.py:16: AssertionError\"\"\",", "                        ),", "                        Testrun(", "                            \"tests.test_parsers.TestParsers::test_junit[jest-junit.xml--False]\",", "                            0.064,", "                            Outcome.Pass,", "                            \"pytest\",", "                            \"\",", "                        ),", "                    ],", "                ),", "                (", "                    \"./tests/jest-junit.xml\",", "                    [", "                        Testrun(", "                            \"Title when rendered renders pull title::Title when rendered renders pull title\",", "                            0.036,", "                            Outcome.Pass,", "                            \"Title\",", "                            \"\",", "                        ),", "                        Testrun(", "                            \"Title when rendered renders pull author::Title when rendered renders pull author\",", "                            0.005,", "                            Outcome.Pass,", "                            \"Title\",", "                            \"\",", "                        ),", "                        Testrun(", "                            \"Title when rendered renders pull updatestamp::Title when rendered renders pull updatestamp\",", "                            0.002,", "                            Outcome.Pass,", "                            \"Title\",", "                            \"\",", "                        ),", "                        Testrun(", "                            \"Title when rendered for first pull request renders pull title::Title when rendered for first pull request renders pull title\",", "                            0.006,", "                            Outcome.Pass,", "                            \"Title\",", "                            \"\",", "                        ),", "                    ],", "                ),", "                (", "                    \"./tests/vitest-junit.xml\",", "                    [", "                        Testrun(", "                            \"__tests__/test-file-1.test.ts::first test file &gt; 2 + 2 should equal 4\",", "                            0.01,", "                            Outcome.Failure,", "                            \"__tests__/test-file-1.test.ts\",", "                            \"\"\"AssertionError: expected 5 to be 4 // Object.is equality", "     \u276f __tests__/test-file-1.test.ts:20:28\"\"\",", "                        ),", "                        Testrun(", "                            \"__tests__/test-file-1.test.ts::first test file &gt; 4 - 2 should equal 2\",", "                            0,", "                            Outcome.Pass,", "                            \"__tests__/test-file-1.test.ts\",", "                            \"\",", "                        ),", "                    ],", "                ),", "            ],", "        )", "        def test_junit(self, filename, expected):", "            with open(filename, \"b+r\") as f:", "                res = parse_junit_xml(f.read())", "                assert len(res) == len(expected)", "                for restest, extest in zip(res, expected):", ">                   assert restest == extest", "E                   AssertionError: assert (tests.test_parsers.TestParsers::test_junit[junit.xml--True], Failure, 0.001, pytest, self = &lt;test_parsers.TestPars...t_parsers.TestParsers.test_junit[jest-junit.xml-]', 'outcome': 'pass'}] == ''\\n\\ntests/test_parsers.py:16: AssertionErro) == (tests.test_parsers.TestParsers::test_junit[junit.xml--True], Failure, 0.001, pytest, self = &lt;test_parsers.TestPars..._parsers.TestParsers.test_junit[jest-junit.xml-]', 'outcome': 'pass'}] == ''\\n\\ntests/test_parsers.py:16: AssertionError)"], "reprfuncargs": {"args": [["self", "<test_junit.TestParsers object at 0x1021b26b0>"], ["filename", "'./tests/junit.xml'"], ["expected", "[(tests.test_parsers.TestParsers::test_junit[junit.xml--True], Failure, 0.001, pytest, self = &lt;test_parsers.TestPar...ers.py:16: AssertionError), (tests.test_parsers.TestParsers::test_junit[jest-junit.xml--False], Pass, 0.064, pytest, )]"]]}, "reprlocals": null, "reprfileloc": {"path": "tests/test_junit.py", "lineno": 103, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, "sections": [], "chain": [[{"reprentries": [{"type": "ReprEntry", "data": {"lines": ["        @pytest.mark.parametrize(", "            \"filename,expected\",", "            [", "                (", "                    \"./tests/junit.xml\",", "                    [", "                        Testrun(", "                            \"tests.test_parsers.TestParsers::test_junit[junit.xml--True]\",", "                            0.001,", "                            Outcome.Failure,", "                            \"pytest\",", "                            \"\"\"self = &lt;test_parsers.TestParsers object at 0x102182d10&gt;, filename = 'junit.xml', expected = '', check = True", "    ", "        @pytest.mark.parametrize(", "            \"filename,expected,check\",", "            [(\"junit.xml\", \"\", True), (\"jest-junit.xml\", \"\", False)],", "        )", "        def test_junit(self, filename, expected, check):", "            with open(filename) as f:", "                junit_string = f.read()", "                res = parse_junit_xml(junit_string)", "                print(res)", "                if check:", "    &gt;               assert res == expected", "    E               AssertionError: assert [{'duration': '0.010', 'name': 'tests.test_parsers.TestParsers.test_junit[junit.xml-]', 'outcome': 'failure'}, {'duration': '0.063', 'name': 'tests.test_parsers.TestParsers.test_junit[jest-junit.xml-]', 'outcome': 'pass'}] == ''", "    ", "    tests/test_parsers.py:16: AssertionError\"\"\",", "                        ),", "                        Testrun(", "                            \"tests.test_parsers.TestParsers::test_junit[jest-junit.xml--False]\",", "                            0.064,", "                            Outcome.Pass,", "                            \"pytest\",", "                            \"\",", "                        ),", "                    ],", "                ),", "                (", "                    \"./tests/jest-junit.xml\",", "                    [", "                        Testrun(", "                            \"Title when rendered renders pull title::Title when rendered renders pull title\",", "                            0.036,", "                            Outcome.Pass,", "                            \"Title\",", "                            \"\",", "                        ),", "                        Testrun(", "                            \"Title when rendered renders pull author::Title when rendered renders pull author\",", "                            0.005,", "                            Outcome.Pass,", "                            \"Title\",", "                            \"\",", "                        ),", "                        Testrun(", "                            \"Title when rendered renders pull updatestamp::Title when rendered renders pull updatestamp\",", "                            0.002,", "                            Outcome.Pass,", "                            \"Title\",", "                            \"\",", "                        ),", "                        Testrun(", "                            \"Title when rendered for first pull request renders pull title::Title when rendered for first pull request renders pull title\",", "                            0.006,", "                            Outcome.Pass,", "                            \"Title\",", "                            \"\",", "                        ),", "                    ],", "                ),", "                (", "                    \"./tests/vitest-junit.xml\",", "                    [", "                        Testrun(", "                            \"__tests__/test-file-1.test.ts::first test file &gt; 2 + 2 should equal 4\",", "                            0.01,", "                            Outcome.Failure,", "                            \"__tests__/test-file-1.test.ts\",", "                            \"\"\"AssertionError: expected 5 to be 4 // Object.is equality", "     \u276f __tests__/test-file-1.test.ts:20:28\"\"\",", "                        ),", "                        Testrun(", "                            \"__tests__/test-file-1.test.ts::first test file &gt; 4 - 2 should equal 2\",", "                            0,", "                            Outcome.Pass,", "                            \"__tests__/test-file-1.test.ts\",", "                            \"\",", "                        ),", "                    ],", "                ),", "            ],", "        )", "        def test_junit(self, filename, expected):", "            with open(filename, \"b+r\") as f:", "                res = parse_junit_xml(f.read())", "                assert len(res) == len(expected)", "                for restest, extest in zip(res, expected):", ">                   assert restest == extest", "E                   AssertionError: assert (tests.test_parsers.TestParsers::test_junit[junit.xml--True], Failure, 0.001, pytest, self = &lt;test_parsers.TestPars...t_parsers.TestParsers.test_junit[jest-junit.xml-]', 'outcome': 'pass'}] == ''\\n\\ntests/test_parsers.py:16: AssertionErro) == (tests.test_parsers.TestParsers::test_junit[junit.xml--True], Failure, 0.001, pytest, self = &lt;test_parsers.TestPars..._parsers.TestParsers.test_junit[jest-junit.xml-]', 'outcome': 'pass'}] == ''\\n\\ntests/test_parsers.py:16: AssertionError)"], "reprfuncargs": {"args": [["self", "<test_junit.TestParsers object at 0x1021b26b0>"], ["filename", "'./tests/junit.xml'"], ["expected", "[(tests.test_parsers.TestParsers::test_junit[junit.xml--True], Failure, 0.001, pytest, self = &lt;test_parsers.TestPar...ers.py:16: AssertionError), (tests.test_parsers.TestParsers::test_junit[jest-junit.xml--False], Pass, 0.064, pytest, )]"]]}, "reprlocals": null, "reprfileloc": {"path": "tests/test_junit.py", "lineno": 103, "message": "AssertionError"}, "style": "long"}}], "extraline": null, "style": "long"}, {"path": "/codecov/testing-result-parsers/tests/test_junit.py", "lineno": 103, "message": "AssertionError: assert (tests.test_parsers.TestParsers::test_junit[junit.xml--True], Failure, 0.001, pytest, self = &lt;test_parsers.TestPars...t_parsers.TestParsers.test_junit[jest-junit.xml-]', 'outcome': 'pass'}] == ''\\n\\ntests/test_parsers.py:16: AssertionErro) == (tests.test_parsers.TestParsers::test_junit[junit.xml--True], Failure, 0.001, pytest, self = &lt;test_parsers.TestPars..._parsers.TestParsers.test_junit[jest-junit.xml-]', 'outcome': 'pass'}] == ''\\n\\ntests/test_parsers.py:16: AssertionError)"}, null]]}, "when": "call", "user_properties": [], "sections": [], "duration": 0.0005479590035974979, "start": 1704475472.984352, "stop": 1704475472.9849, "$report_type": "TestReport"}
{"nodeid": "tests/test_junit.py::TestParsers::test_junit[./tests/junit.xml-expected0]", "location": ["tests/test_junit.py", 5, "TestParsers.test_junit[./tests/junit.xml-expected0]"], "keywords": {"test_junit[./tests/junit.xml-expected0]": 1, "parametrize": 1, "pytestmark": 1, "./tests/junit.xml-expected0": 1, "TestParsers": 1, "tests/test_junit.py": 1, "testing-result-parsers": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00013691710773855448, "start": 1704475472.995024, "stop": 1704475472.995162, "$report_type": "TestReport"}
{"nodeid": "tests/test_junit.py::TestParsers::test_junit[./tests/jest-junit.xml-expected1]", "location": ["tests/test_junit.py", 5, "TestParsers.test_junit[./tests/jest-junit.xml-expected1]"], "keywords": {"test_junit[./tests/jest-junit.xml-expected1]": 1, "parametrize": 1, "pytestmark": 1, "./tests/jest-junit.xml-expected1": 1, "TestParsers": 1, "tests/test_junit.py": 1, "testing-result-parsers": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00016525003593415022, "start": 1704475472.995361, "stop": 1704475472.995527, "$report_type": "TestReport"}
{"nodeid": "tests/test_junit.py::TestParsers::test_junit[./tests/jest-junit.xml-expected1]", "location": ["tests/test_junit.py", 5, "TestParsers.test_junit[./tests/jest-junit.xml-expected1]"], "keywords": {"test_junit[./tests/jest-junit.xml-expected1]": 1, "parametrize": 1, "pytestmark": 1, "./tests/jest-junit.xml-expected1": 1, "TestParsers": 1, "tests/test_junit.py": 1, "testing-result-parsers": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.0006337079685181379, "start": 1704475472.995594, "stop": 1704475472.996228, "$report_type": "TestReport"}
{"nodeid": "tests/test_junit.py::TestParsers::test_junit[./tests/jest-junit.xml-expected1]", "location": ["tests/test_junit.py", 5, "TestParsers.test_junit[./tests/jest-junit.xml-expected1]"], "keywords": {"test_junit[./tests/jest-junit.xml-expected1]": 1, "parametrize": 1, "pytestmark": 1, "./tests/jest-junit.xml-expected1": 1, "TestParsers": 1, "tests/test_junit.py": 1, "testing-result-parsers": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010974996257573366, "start": 1704475472.996326, "stop": 1704475472.9964359, "$report_type": "TestReport"}
{"nodeid": "tests/test_junit.py::TestParsers::test_junit[./tests/vitest-junit.xml-expected2]", "location": ["tests/test_junit.py", 5, "TestParsers.test_junit[./tests/vitest-junit.xml-expected2]"], "keywords": {"test_junit[./tests/vitest-junit.xml-expected2]": 1, "parametrize": 1, "pytestmark": 1, "./tests/vitest-junit.xml-expected2": 1, "TestParsers": 1, "tests/test_junit.py": 1, "testing-result-parsers": 1}, "outcome": "passed", "longrepr": null, "when": "setup", "user_properties": [], "sections": [], "duration": 0.00015125004574656487, "start": 1704475472.996614, "stop": 1704475472.9967659, "$report_type": "TestReport"}
{"nodeid": "tests/test_junit.py::TestParsers::test_junit[./tests/vitest-junit.xml-expected2]", "location": ["tests/test_junit.py", 5, "TestParsers.test_junit[./tests/vitest-junit.xml-expected2]"], "keywords": {"test_junit[./tests/vitest-junit.xml-expected2]": 1, "parametrize": 1, "pytestmark": 1, "./tests/vitest-junit.xml-expected2": 1, "TestParsers": 1, "tests/test_junit.py": 1, "testing-result-parsers": 1}, "outcome": "passed", "longrepr": null, "when": "call", "user_properties": [], "sections": [], "duration": 0.00045887508895248175, "start": 1704475472.996824, "stop": 1704475472.9972842, "$report_type": "TestReport"}
{"nodeid": "tests/test_junit.py::TestParsers::test_junit[./tests/vitest-junit.xml-expected2]", "location": ["tests/test_junit.py", 5, "TestParsers.test_junit[./tests/vitest-junit.xml-expected2]"], "keywords": {"test_junit[./tests/vitest-junit.xml-expected2]": 1, "parametrize": 1, "pytestmark": 1, "./tests/vitest-junit.xml-expected2": 1, "TestParsers": 1, "tests/test_junit.py": 1, "testing-result-parsers": 1}, "outcome": "passed", "longrepr": null, "when": "teardown", "user_properties": [], "sections": [], "duration": 0.00010237493552267551, "start": 1704475472.997372, "stop": 1704475472.997474, "$report_type": "TestReport"}
{"exitstatus": 1, "$report_type": "SessionFinish"}
