stages:
  - test
  - build
  - tag
  - deploy

test:
  stage: test
  image: python:3.9
  script:
    - pip install .[testing]
    - pip install pytest
    - pytest

build:
  stage: build
  image: python:3.9
  script:
    - pip install build setuptools_scm
    - |
      python -c "from setuptools_scm import get_version; print(f'Building version: {get_version()}')"
    - python -m build
  artifacts:
    paths:
      - dist/

deploy:
  stage: deploy
  image: python:3-bookworm
  dependencies:
    - build
  id_tokens:
    PYPI_ID_TOKEN:
      # Use "testpypi" if uploading to TestPyPI
      aud: pypi
  script:
    # Install dependencies
    - apt update && apt install -y jq
    - python -m pip install --upgrade pip
    - python -m pip install -U twine id
    #- python -m pip install build setuptools_scm
    - python -m pip install twine setuptools_scm
    - |
      PACKAGE_VERSION=$(python -c "from setuptools_scm import get_version; print(get_version())")
    - echo "Deploying version $PACKAGE_VERSION"
    # Retrieve the OIDC token from GitLab CI/CD, and exchange it for a PyPI API token
    - oidc_token=$(python -m id PYPI)
    # Replace "https://pypi.org/*" with "https://test.pypi.org/*" if uploading to TestPyPI
    - resp=$(curl -X POST https://pypi.org/_/oidc/mint-token -d "{\"token\":\"${oidc_token}\"}")
    - api_token=$(jq --raw-output '.token' <<< "${resp}")

    # Upload to PyPI authenticating via the newly-minted token
    # Add "--repository testpypi" if uploading to TestPyPI
    - twine upload -u __token__ -p "${api_token}" dist/*
  only:
    - main
