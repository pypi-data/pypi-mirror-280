[tool.poetry]
name = "insuant"
version = "1.0.0a19"
description = "A Python package with a built-in web application"
authors = ["Logspace <contact@logspace.ai>"]
maintainers = [
    "Carlos Coelho <carlos@logspace.ai>",
    "Cristhian Zanforlin <cristhian.lousa@gmail.com>",
    "Gabriel Almeida <gabriel@logspace.ai>",
    "Igor Carvalho <igorr.ackerman@gmail.com>",
    "Lucas Eduoli <lucaseduoli@gmail.com>",
    "Ot√°vio Anovazzi <otavio2204@gmail.com>",
    "Rodrigo Nader <rodrigo@logspace.ai>",
]
repository = "https://github.com/langflow-ai/langflow"
license = "MIT"
readme = "README.md"
keywords = ["nlp", "langchain", "openai", "gpt", "gui"]
packages = [{ include = "insuant", from = "" }]
include = ["insuant/*", "insuant/**/*"]
documentation = "https://docs.langflow.org"

[tool.poetry.scripts]
insuant = "insuant.__main__:main"


[tool.poetry.dependencies]
fastapi = "^0.110.1"
gunicorn = "^21.2.0"
sqlmodel = "^0.0.16"
loguru = "^0.7.1"
rich = "^13.7.0"
langchain-experimental = "*"
websockets = "*"
platformdirs = "^4.2.0"
orjson = "3.10.0"
alembic = "^1.13.0"
pillow = "^10.2.0"
pandas = "2.2.0"
multiprocess = "^0.70.14"
duckdb = "^0.9.2"
python-socketio = "^5.11.0"
jq = { version = "^1.7.0", markers = "sys_platform != 'win32'" }
emoji = "^2.11.0"
cryptography = "^42.0.5"
asyncer = "^0.0.5"


aio-pika = "9.4.0"
aiofiles = "23.2.1"
aiohttp = "3.9.5"
aiokafka = "0.8.1"
aiormq = "6.8.0"
aiosignal = "1.3.1"
altair = "5.2.0"
annotated-types = "0.6.0"
antlr4-python3-runtime = "4.9.3"
anyio = "4.3.0"
appnope = "0.1.4"
asgiref = "3.8.1"
astor = "0.8.1"
asttokens = "2.4.1"
async-timeout = "4.0.3"
asyncpg = "0.28.0"
attrs = "23.2.0"
autoflake = "1.7.8"

backoff = "2.2.1"
bandit = "1.7.7"
bcrypt = "4.1.2"
black = "22.12.0"
blinker = "1.7.0"
bs4 = "0.0.2"
build = "1.0.3"



python = ">=3.10,<3.12"
beautifulsoup4 = "^4.12.2"
google-search-results = "^2.4.1"
google-api-python-client = "^2.118.0"
huggingface-hub = { version = "^0.20.0", extras = ["inference"] }
llama-cpp-python = { version = "~0.2.0", optional = true }
networkx = "^3.1"
pysrt = "^1.1.2"
fake-useragent = "^1.4.0"
psycopg2-binary = "^2.9.6"
pyarrow = "^14.0.0"
wikipedia = "^1.4.0"
qdrant-client = "^1.7.0"
weaviate-client = "*"
sentence-transformers = { version = "^2.3.1", optional = true }
ctransformers = { version = "^0.2.10", optional = true }
cohere = "^5.1.7"
faiss-cpu = "^1.7.4"
types-cachetools = "^5.3.0.5"
pinecone-client = "^3.0.3"
pymongo = "^4.6.0"
supabase = "^2.3.0"
certifi = "^2023.11.17"
psycopg = "^3.1.9"
psycopg-binary = "^3.1.9"
fastavro = "^1.8.0"
celery = { extras = ["redis"], version = "^5.3.6", optional = true }
redis = { version = "^5.0.1", optional = true }
flower = { version = "^2.0.0", optional = true }
metaphor-python = "^0.1.11"
pywin32 = { version = "^306", markers = "sys_platform == 'win32'" }
langfuse = "^2.9.0"
metal-sdk = "^2.5.0"
markupsafe = "^2.1.3"
extract-msg = "^0.47.0"
# jq is not available for windows
boto3 = "^1.34.0"
numexpr = "^2.8.6"
qianfan = "0.3.5"
pgvector = "^0.2.3"
pyautogen = "^0.2.0"
langchain-google-genai = "^1.0.1"
langchain-cohere = "^0.1.0rc1"
elasticsearch = "^8.12.0"
pytube = "^15.0.0"
# llama-index = "^0.10.13"
unstructured = { extras = ["md"], version = "^0.12.4" }
dspy-ai = "^2.4.4"
html2text = "^2024.2.26"
assemblyai = "^0.23.1"
litellm = "^1.34.22"
chromadb = "^0.4.24"
langchain-anthropic = "^0.1.6"
langchain-astradb = "^0.1.0"
langchain-openai = "^0.1.1"
pydantic = "^2.5.0"
# pydantic-extra-types = "^2.4.1"
pydantic-settings = "^2.1.0"
pydantic_core = "^2.14.1"
docstring-parser = "^0.15"
python-multipart = "^0.0.9"
pyproject_hooks = "1.0.0"
pytesseract = "0.3.10"
# pytest="^7.4.4"
pytest-cov = "^4.1.0"
pytest-env = "0.8.2"
python-dateutil = "2.8.2"
python-docx = "1.1.0"
python-dotenv = "1.0.0"
python-iso639 = "2024.2.7"
python-jose = "3.3.0"
python-magic = "0.4.27"
onnx = "^1.15.0"
onnxruntime = "^1.15.1"
openai = "^1.13.3"
opencv-python = "^4.9.0.80"
openpyxl = "^3.1.2"
opentelemetry-api = "^1.23.0"
opentelemetry-exporter-otlp-proto-common = "^1.23.0"
opentelemetry-exporter-otlp-proto-grpc = "^1.23.0"
opentelemetry-exporter-otlp-proto-http = "^1.23.0"
opentelemetry-instrumentation = "^0.44b0"
opentelemetry-instrumentation-asgi = "^0.44b0"
opentelemetry-instrumentation-fastapi = "^0.44b0"
opentelemetry-proto = "^1.23.0"
opentelemetry-sdk = "^1.23.0"
opentelemetry-semantic-conventions = "^0.44b0"
opentelemetry-util-http = "^0.44b0"
SQLAlchemy = "^2.0.25"
streamlit = "^1.31.0"
# sqlalchemy-presto = "^2.0.25"
pydocstyle = "^6.3.0"
pydub = "^0.25.1"
pyflakes = "^2.4.0"
Pygments = "^2.17.2"
PyHive = "^0.7.0"
PyMuPDF = "^1.23.26"
PyMuPDFb = "^1.23.22"
pypandoc = "^1.12"
# pyparsing = "^3.1.1"
pypdf = "^4.0.1"
PyPDF2 = "^3.0.1"
pypdfium2 = "^4.27.0"
PyPika = "^0.48.9"
pdf2image = "^1.17.0"
pdfminer-six = "^20231228"
pillow_heif = "^0.15.0"
llama-index = "^0.10.18"
langchain-community = "^0.0.30"
langchain-core = "^0.1.28"
langchain = "^0.1.10"
llama-parse = "^0.3.8"
nest-asyncio = "^1.6.0"
google-generativeai = "^0.4.1"
typer = "^0.12.0"
types-requests = "^2.31.0.20240218"
typing-inspect = "^0.9.0"
typing_extensions = "^4.9.0"
passlib = "^1.7.4"
starlette = "^0.37.2"
tavily-python="0.3.3"
#python-poppler="^0.4.1"
uvicorn = "^0.29.0"
#poppler = ">=21.0,<22.0"
pikepdf = "^8.13.0"
llama-index-embeddings-openai = "^0.1.6"
llm="0.14"
pdfplumber="0.11.1"

[tool.poetry.group.dev.dependencies]
types-redis = "^4.6.0.5"
ipykernel = "^6.29.0"
mypy = "^1.9.0"
ruff = "^0.3.5"
httpx = "*"
pytest = "^8.1.0"
types-requests = "^2.31.0"
requests = "^2.31.0"
pytest-cov = "^4.1.0"
pandas-stubs = "^2.1.4.231227"
types-pillow = "^10.2.0.20240213"
types-pyyaml = "^6.0.12.8"
types-python-jose = "^3.3.4.8"
types-passlib = "^1.7.7.13"
locust = "^2.23.1"
pytest-mock = "^3.12.0"
pytest-xdist = "^3.5.0"
types-pywin32 = "^306.0.0.4"
types-google-cloud-ndb = "^2.2.0.0"
pytest-sugar = "^1.0.0"
respx = "^0.21.1"
pytest-instafail = "^0.5.0"
pytest-asyncio = "^0.23.0"
pytest-profiling = "^1.7.0"

[tool.poetry.extras]
deploy = ["celery", "redis", "flower"]
local = ["llama-cpp-python", "sentence-transformers", "ctransformers"]


[tool.poetry.group.spelling]
optional = true

[tool.poetry.group.spelling.dependencies]
codespell = "^2.2.6"

[tool.codespell]
skip = '.git,*.pdf,*.svg,*.pdf,*.yaml,*.ipynb,poetry.lock,*.min.js,*.css,package-lock.json,*.trig'
# Ignore latin etc
ignore-regex = '.*(Stati Uniti|Tense=Pres).*'


[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra"
testpaths = ["tests", "integration"]
console_output_style = "progress"
filterwarnings = ["ignore::DeprecationWarning"]
log_cli = true
markers = ["async_test"]


[tool.ruff]
exclude = ["insuant/alembic/*"]
line-length = 120

[tool.mypy]
plugins = ["pydantic.mypy"]
follow_imports = "silent"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
