[project]
name = "celerite2"
description = "Fast and scalable Gaussian Processes in 1D"
authors = [{ name = "Dan Foreman-Mackey", email = "foreman.mackey@gmail.com" }]
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT License" }
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
]
dynamic = ["version"]
dependencies = ["numpy"]

[project.optional-dependencies]
test = ["pytest", "scipy", "celerite"]
pymc3 = ["pymc3>=3.9", "numpy<1.22", "xarray<2023.10.0"]
theano = ["pymc3>=3.9", "numpy<1.22", "xarray<2023.10.0"]
pymc = ["pymc>=5.9.2"]
jax = ["jax"]
docs = [
  "sphinx",
  "sphinx-material",
  "sphinx_copybutton",
  "breathe",
  "myst-nb",
  "matplotlib",
  "scipy",
  "emcee",
  "pymc>=5",
  "tqdm",
  "numpyro",
]
tutorials = ["matplotlib", "scipy", "emcee", "pymc>=5", "tqdm", "numpyro"]

[project.urls]
"Homepage" = "https://celerite2.readthedocs.io"
"Source" = "https://github.com/exoplanet-dev/celerite2"
"Bug Tracker" = "https://github.com/exoplanet-dev/celerite2/issues"

[build-system]
requires = ["scikit-build-core", "numpy", "pybind11"]
build-backend = "scikit_build_core.build"

[tool.scikit-build]
sdist.exclude = []
sdist.include = ["python/celerite2/celerite2_version.py"]
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"

[tool.setuptools_scm]
write_to = "python/celerite2/celerite2_version.py"

[tool.cibuildwheel]
skip = "pp* *-win32 *-musllinux_* *-manylinux_i686"

[tool.black]
line-length = 79

[tool.isort]
line_length = 79
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
known_first_party = ["celerite2"]

[tool.pytest.ini_options]
addopts = "-v"

[tool.coverage.run]
parallel = true
branch = true
source = ["celerite2"]
omit = ["*_test.py", "*__init__*", "*/celerite2/celerite2_version.py"]

[tool.coverage.paths]
source = ["python", "*/site-packages"]

[tool.coverage.report]
show_missing = true
exclude_lines = [
  "raise NotImplementedError",
  "except ImportError",
  "pragma: no cover",
  "def R_op",
  "if verbose",
]
