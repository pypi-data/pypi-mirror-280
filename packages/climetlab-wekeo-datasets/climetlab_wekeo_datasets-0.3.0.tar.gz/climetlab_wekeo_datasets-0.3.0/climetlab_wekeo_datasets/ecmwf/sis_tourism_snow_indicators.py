#!/usr/bin/env python3
# (C) Copyright 2023 European Centre for Medium-Range Weather Forecasts.
# This software is licensed under the terms of the Apache Licence Version 2.0
# which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.
# In applying this licence, ECMWF does not waive the privileges and immunities
# granted to it by virtue of its status as an intergovernmental organisation
# nor does it submit to any jurisdiction.
from __future__ import annotations

from climetlab.decorators import normalize

from climetlab_wekeo_datasets.ecmwf.main import Main


class sis_tourism_snow_indicators(Main):
    name = "EO:ECMWF:DAT:SIS_TOURISM_SNOW_INDICATORS"
    dataset = "EO:ECMWF:DAT:SIS_TOURISM_SNOW_INDICATORS"

    @normalize(
        "experiment",
        [
            "historical",
            "rcp2_6",
            "rcp4_5",
            "rcp8_5",
            "uerra_reanalysis",
        ],
    )
    @normalize(
        "gcm",
        [
            "cm5a_mr",
            "cnrm_cm5",
            "ec_earth",
            "hadgem2_es",
            "mpi_esm_lr",
        ],
        multiple=True,
    )
    @normalize(
        "period",
        [
            "1961-1990",
            "1986-2005",
            "1990-2015",
            "2021-2040",
            "2041-2060",
            "2081-2100",
        ],
        multiple=True,
    )
    @normalize(
        "rcm",
        [
            "aladin53",
            "cclm4_8_17",
            "rca4",
            "remo2009",
            "wrf331f",
        ],
    )
    @normalize(
        "statistic",
        [
            "10th_percentile",
            "20th_percentile",
            "50th_percentile",
            "80th_percentile",
            "90th_percentile",
            "mean",
            "standard_deviation",
        ],
        multiple=True,
    )
    @normalize(
        "time_aggregation",
        [
            "annual_data",
            "climatology",
        ],
    )
    @normalize(
        "variable",
        [
            "annual_amount_of_machine_made_snow_produced",
            "end_of_the_longest_period_with_groomed_snow",
            "end_of_the_longest_period_with_managed_snow",
            "end_of_the_longest_period_with_natural_snow",
            "mean_winter_air_temperature",
            "monthly_mean_air_temperature_for_april",
            "monthly_mean_air_temperature_for_december",
            "monthly_mean_air_temperature_for_february",
            "monthly_mean_air_temperature_for_january",
            "monthly_mean_air_temperature_for_march",
            "monthly_mean_air_temperature_for_november",
            "period_with_high_amount_of_groomed_snow",
            "period_with_high_amount_of_managed_snow",
            "period_with_high_amount_of_natural_snow",
            "period_with_high_height_of_groomed_snow",
            "period_with_high_height_of_managed_snow",
            "period_with_high_height_of_natural_snow",
            "period_with_low_height_of_groomed_snow",
            "period_with_low_height_of_managed_snow",
            "period_with_low_height_of_natural_snow",
            "period_with_medium_amount_of_groomed_snow",
            "period_with_medium_amount_of_managed_snow",
            "period_with_medium_amount_of_natural_snow",
            "period_with_medium_height_of_groomed_snow",
            "period_with_medium_height_of_groomed_snow_between_fourth_and_tenth_december",
            "period_with_medium_height_of_groomed_snow_between_twenty_second_december_and_fourth_january",
            "period_with_medium_height_of_managed_snow",
            "period_with_medium_height_of_managed_snow_between_fourth_and_tenth_december",
            "period_with_medium_height_of_managed_snow_between_twenty_second_december_and_fourth_january",
            "period_with_medium_height_of_natural_snow",
            "period_with_medium_height_of_natural_snow_between_fourth_and_tenth_december",
            "period_with_medium_height_of_natural_snow_between_twenty_second_december_and_fourth_january",
            "snow_making_hours_for_WBT_lower_than_negative_2_degc",
            "snow_making_hours_for_WBT_lower_than_negative_5_degc",
            "start_of_the_longest_period_with_groomed_snow",
            "start_of_the_longest_period_with_managed_snow",
            "start_of_the_longest_period_with_natural_snow",
            "total_precipitation_from_november_to_april",
            "total_snow_precipitation_from_november_to_april",
        ],
        multiple=True,
    )
    @normalize(
        "version",
        [
            "1_0",
            "1_1",
        ],
        multiple=True,
    )
    @normalize(
        "year",
        [
            "1950",
            "1951",
            "1952",
            "1953",
            "1954",
            "1955",
            "1956",
            "1957",
            "1958",
            "1959",
            "1960",
            "1961",
            "1962",
            "1963",
            "1964",
            "1965",
            "1966",
            "1967",
            "1968",
            "1969",
            "1970",
            "1971",
            "1972",
            "1973",
            "1974",
            "1975",
            "1976",
            "1977",
            "1978",
            "1979",
            "1980",
            "1981",
            "1982",
            "1983",
            "1984",
            "1985",
            "1986",
            "1987",
            "1988",
            "1989",
            "1990",
            "1991",
            "1992",
            "1993",
            "1994",
            "1995",
            "1996",
            "1997",
            "1998",
            "1999",
            "2000",
            "2001",
            "2002",
            "2003",
            "2004",
            "2005",
            "2006",
            "2007",
            "2008",
            "2009",
            "2010",
            "2011",
            "2012",
            "2013",
            "2014",
            "2015",
            "2016",
            "2017",
            "2018",
            "2019",
            "2020",
            "2021",
            "2022",
            "2023",
            "2024",
            "2025",
            "2026",
            "2027",
            "2028",
            "2029",
            "2030",
            "2031",
            "2032",
            "2033",
            "2034",
            "2035",
            "2036",
            "2037",
            "2038",
            "2039",
            "2040",
            "2041",
            "2042",
            "2043",
            "2044",
            "2045",
            "2046",
            "2047",
            "2048",
            "2049",
            "2050",
            "2051",
            "2052",
            "2053",
            "2054",
            "2055",
            "2056",
            "2057",
            "2058",
            "2059",
            "2060",
            "2061",
            "2062",
            "2063",
            "2064",
            "2065",
            "2066",
            "2067",
            "2068",
            "2069",
            "2070",
            "2071",
            "2072",
            "2073",
            "2074",
            "2075",
            "2076",
            "2077",
            "2078",
            "2079",
            "2080",
            "2081",
            "2082",
            "2083",
            "2084",
            "2085",
            "2086",
            "2087",
            "2088",
            "2089",
            "2090",
            "2091",
            "2092",
            "2093",
            "2094",
            "2095",
            "2096",
            "2097",
            "2098",
            "2099",
            "2100",
        ],
        multiple=True,
    )
    @normalize(
        "format_",
        [
            "tgz",
            "zip",
        ],
    )
    def __init__(
        self,
        experiment,
        gcm,
        period,
        rcm,
        statistic,
        time_aggregation,
        variable,
        version,
        year,
        format_=None,
        limit=None,
    ):
        super().__init__(
            experiment=experiment,
            gcm=gcm,
            period=period,
            rcm=rcm,
            statistic=statistic,
            time_aggregation=time_aggregation,
            variable=variable,
            version=version,
            year=year,
            format_=format_,
            limit=limit,
        )
