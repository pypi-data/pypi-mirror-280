Metadata-Version: 2.1
Name: qcentroid-runtime-qiskit
Version: 0.1.3
Summary: Library to interact with qcentroid qiskit runtime
Home-page: https://www.qcentroid.xyz
License: MIT
Author: QCentroid
Author-email: info@qcentroid.xyz
Requires-Python: >=3.8,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Provides-Extra: test
Requires-Dist: pytest (>=7.4,<7.5) ; extra == "test"
Requires-Dist: qiskit-ibm-runtime (>=0.23,<1.0)
Project-URL: Documentation, https://github.com/QCentroid/qcentroid-runtime-qiskit
Project-URL: Repository, https://github.com/QCentroid/qcentroid-runtime-qiskit
Description-Content-Type: text/markdown

# qcentroid-runtime-qiskit

![deploy to pypi](https://github.com/QCentroid/qcentroid-runtime-qiskit/actions/workflows/publish.yml/badge.svg)
[![Python](https://img.shields.io/pypi/pyversions/qcentroid-runtime-qiskit.svg)](https://badge.fury.io/py/qcentroid-runtime-qiskit)
[![PyPI](https://badge.fury.io/py/qcentroid-runtime-qiskit.svg)](https://badge.fury.io/py/qcentroid-runtime-qiskit)
 [![CodeFactor](https://www.codefactor.io/repository/github/qcentroid/qcentroid-runtime-qiskit/badge)](https://www.codefactor.io/repository/github/qcentroid/qcentroid-runtime-qiskit)

 
QCentroid library to interact with Qiskit




## Install

```bash
pip install qcentroid-runtime-qiskit
```


## Use

### Simple example

As easy as this:

```python
from qcentroid_runtime_qiskit import QCentroidRuntimeQiskit
import logging

logger = logging.getLogger(__name__)

def main():
    
    # Get the solver details
    QCentroidRuntimeQiskit.get_instance() # with optional params

    logger.info(f"currentVersion:{QCentroidRuntimeQiskit.getVersion()}")
    QCentroidRuntimeQiskit.execute(circuit)
    
    
if __name__ == "__main__":
    logging.basicConfig(level=logging.DEBUG)
    main() 
```


