"""Test the MPC stuff."""
from __future__ import annotations

import numpy as np

from screwmpcpy.screwmpc import BOUND, ScrewMPC


def test_screw_mpc_matrices():
    n_p = 5
    n_c = 3

    R = 10e-3  # weight matirix
    Q = 10e9  # weight matrix
    B = np.zeros((18, 6))
    B[:6, :6] = np.identity(6) * 0.005
    B[6:12, 0:6] = np.identity(6) * 0.1
    B[12:, :6] = np.identity(6) * 0.005

    A = np.array(
        [
            [1, 0, 0, 0, 0, 0, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 1, 0, 0, 0, 0, 0, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 1, 0, 0, 0, 0, 0, 0.1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 1, 0, 0, 0, 0, 0, 0.1, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0.1, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0.1, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
            [1, 0, 0, 0, 0, 0, 0.1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
            [0, 1, 0, 0, 0, 0, 0, 0.1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
            [0, 0, 1, 0, 0, 0, 0, 0, 0.1, 0, 0, 0, 0, 0, 1, 0, 0, 0],
            [0, 0, 0, 1, 0, 0, 0, 0, 0, 0.1, 0, 0, 0, 0, 0, 1, 0, 0],
            [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0.1, 0, 0, 0, 0, 0, 1, 0],
            [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0.1, 0, 0, 0, 0, 0, 1],
        ]
    )

    B = np.array(
        [
            [0.005, 0, 0, 0, 0, 0],
            [0, 0.005, 0, 0, 0, 0],
            [0, 0, 0.005, 0, 0, 0],
            [0, 0, 0, 0.005, 0, 0],
            [0, 0, 0, 0, 0.005, 0],
            [0, 0, 0, 0, 0, 0.005],
            [0.1, 0, 0, 0, 0, 0],
            [0, 0.1, 0, 0, 0, 0],
            [0, 0, 0.1, 0, 0, 0],
            [0, 0, 0, 0.1, 0, 0],
            [0, 0, 0, 0, 0.1, 0],
            [0, 0, 0, 0, 0, 0.1],
            [0.005, 0, 0, 0, 0, 0],
            [0, 0.005, 0, 0, 0, 0],
            [0, 0, 0.005, 0, 0, 0],
            [0, 0, 0, 0.005, 0, 0],
            [0, 0, 0, 0, 0.005, 0],
            [0, 0, 0, 0, 0, 0.005],
        ]
    )

    C = np.array(
        [
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
        ]
    )

    F = np.array(
        [
            [1, 0, 0, 0, 0, 0, 0.1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
            [0, 1, 0, 0, 0, 0, 0, 0.1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
            [0, 0, 1, 0, 0, 0, 0, 0, 0.1, 0, 0, 0, 0, 0, 1, 0, 0, 0],
            [0, 0, 0, 1, 0, 0, 0, 0, 0, 0.1, 0, 0, 0, 0, 0, 1, 0, 0],
            [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0.1, 0, 0, 0, 0, 0, 1, 0],
            [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0.1, 0, 0, 0, 0, 0, 1],
            [2, 0, 0, 0, 0, 0, 0.3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
            [0, 2, 0, 0, 0, 0, 0, 0.3, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
            [0, 0, 2, 0, 0, 0, 0, 0, 0.3, 0, 0, 0, 0, 0, 1, 0, 0, 0],
            [0, 0, 0, 2, 0, 0, 0, 0, 0, 0.3, 0, 0, 0, 0, 0, 1, 0, 0],
            [0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0.3, 0, 0, 0, 0, 0, 1, 0],
            [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0.3, 0, 0, 0, 0, 0, 1],
            [3, 0, 0, 0, 0, 0, 0.6, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
            [0, 3, 0, 0, 0, 0, 0, 0.6, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
            [0, 0, 3, 0, 0, 0, 0, 0, 0.6, 0, 0, 0, 0, 0, 1, 0, 0, 0],
            [0, 0, 0, 3, 0, 0, 0, 0, 0, 0.6, 0, 0, 0, 0, 0, 1, 0, 0],
            [0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0.6, 0, 0, 0, 0, 0, 1, 0],
            [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0.6, 0, 0, 0, 0, 0, 1],
            [4, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
            [0, 4, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
            [0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0],
            [0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0],
            [0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0],
            [0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],
            [5, 0, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
            [0, 5, 0, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
            [0, 0, 5, 0, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 0, 1, 0, 0, 0],
            [0, 0, 0, 5, 0, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 0, 1, 0, 0],
            [0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 0, 1, 0],
            [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 1.5, 0, 0, 0, 0, 0, 1],
        ]
    )

    PHI = np.array(
        [
            [0.005, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0.005, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0.005, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0.005, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0.005, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0.005, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0.02, 0, 0, 0, 0, 0, 0.005, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0.02, 0, 0, 0, 0, 0, 0.005, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0.02, 0, 0, 0, 0, 0, 0.005, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0.02, 0, 0, 0, 0, 0, 0.005, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0.02, 0, 0, 0, 0, 0, 0.005, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0.02, 0, 0, 0, 0, 0, 0.005, 0, 0, 0, 0, 0, 0],
            [0.045, 0, 0, 0, 0, 0, 0.02, 0, 0, 0, 0, 0, 0.005, 0, 0, 0, 0, 0],
            [0, 0.045, 0, 0, 0, 0, 0, 0.02, 0, 0, 0, 0, 0, 0.005, 0, 0, 0, 0],
            [0, 0, 0.045, 0, 0, 0, 0, 0, 0.02, 0, 0, 0, 0, 0, 0.005, 0, 0, 0],
            [0, 0, 0, 0.045, 0, 0, 0, 0, 0, 0.02, 0, 0, 0, 0, 0, 0.005, 0, 0],
            [0, 0, 0, 0, 0.045, 0, 0, 0, 0, 0, 0.02, 0, 0, 0, 0, 0, 0.005, 0],
            [0, 0, 0, 0, 0, 0.045, 0, 0, 0, 0, 0, 0.02, 0, 0, 0, 0, 0, 0.005],
            [0.08, 0, 0, 0, 0, 0, 0.045, 0, 0, 0, 0, 0, 0.02, 0, 0, 0, 0, 0],
            [0, 0.08, 0, 0, 0, 0, 0, 0.045, 0, 0, 0, 0, 0, 0.02, 0, 0, 0, 0],
            [0, 0, 0.08, 0, 0, 0, 0, 0, 0.045, 0, 0, 0, 0, 0, 0.02, 0, 0, 0],
            [0, 0, 0, 0.08, 0, 0, 0, 0, 0, 0.045, 0, 0, 0, 0, 0, 0.02, 0, 0],
            [0, 0, 0, 0, 0.08, 0, 0, 0, 0, 0, 0.045, 0, 0, 0, 0, 0, 0.02, 0],
            [0, 0, 0, 0, 0, 0.08, 0, 0, 0, 0, 0, 0.045, 0, 0, 0, 0, 0, 0.02],
            [0.125, 0, 0, 0, 0, 0, 0.08, 0, 0, 0, 0, 0, 0.045, 0, 0, 0, 0, 0],
            [0, 0.125, 0, 0, 0, 0, 0, 0.08, 0, 0, 0, 0, 0, 0.045, 0, 0, 0, 0],
            [0, 0, 0.125, 0, 0, 0, 0, 0, 0.08, 0, 0, 0, 0, 0, 0.045, 0, 0, 0],
            [0, 0, 0, 0.125, 0, 0, 0, 0, 0, 0.08, 0, 0, 0, 0, 0, 0.045, 0, 0],
            [0, 0, 0, 0, 0.125, 0, 0, 0, 0, 0, 0.08, 0, 0, 0, 0, 0, 0.045, 0],
            [0, 0, 0, 0, 0, 0.125, 0, 0, 0, 0, 0, 0.08, 0, 0, 0, 0, 0, 0.045],
        ]
    )

    H = np.array(
        [
            [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
            [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
            [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
            [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
            [0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0],
            [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0],
            [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0],
            [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],
            [0.005, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0.005, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0.005, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0.005, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0.005, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0.005, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        ]
    )

    E = np.array(
        [
            [1, 0, 0, 0, 0, 0],
            [0, 1, 0, 0, 0, 0],
            [0, 0, 1, 0, 0, 0],
            [0, 0, 0, 1, 0, 0],
            [0, 0, 0, 0, 1, 0],
            [0, 0, 0, 0, 0, 1],
            [1, 0, 0, 0, 0, 0],
            [0, 1, 0, 0, 0, 0],
            [0, 0, 1, 0, 0, 0],
            [0, 0, 0, 1, 0, 0],
            [0, 0, 0, 0, 1, 0],
            [0, 0, 0, 0, 0, 1],
            [1, 0, 0, 0, 0, 0],
            [0, 1, 0, 0, 0, 0],
            [0, 0, 1, 0, 0, 0],
            [0, 0, 0, 1, 0, 0],
            [0, 0, 0, 0, 1, 0],
            [0, 0, 0, 0, 0, 1],
        ]
    )

    P = np.array(
        [
            [
                244750000.01,
                0,
                0,
                0,
                0,
                0,
                146000000,
                0,
                0,
                0,
                0,
                0,
                74500000,
                0,
                0,
                0,
                0,
                0,
            ],
            [
                0,
                244750000.01,
                0,
                0,
                0,
                0,
                0,
                146000000,
                0,
                0,
                0,
                0,
                0,
                74500000,
                0,
                0,
                0,
                0,
            ],
            [
                0,
                0,
                244750000.01,
                0,
                0,
                0,
                0,
                0,
                146000000,
                0,
                0,
                0,
                0,
                0,
                74500000,
                0,
                0,
                0,
            ],
            [
                0,
                0,
                0,
                244750000.01,
                0,
                0,
                0,
                0,
                0,
                146000000,
                0,
                0,
                0,
                0,
                0,
                74500000,
                0,
                0,
            ],
            [
                0,
                0,
                0,
                0,
                244750000.01,
                0,
                0,
                0,
                0,
                0,
                146000000,
                0,
                0,
                0,
                0,
                0,
                74500000,
                0,
            ],
            [
                0,
                0,
                0,
                0,
                0,
                244750000.01,
                0,
                0,
                0,
                0,
                0,
                146000000,
                0,
                0,
                0,
                0,
                0,
                74500000,
            ],
            [
                146000000,
                0,
                0,
                0,
                0,
                0,
                88500000.01,
                0,
                0,
                0,
                0,
                0,
                46000000,
                0,
                0,
                0,
                0,
                0,
            ],
            [
                0,
                146000000,
                0,
                0,
                0,
                0,
                0,
                88500000.01,
                0,
                0,
                0,
                0,
                0,
                46000000,
                0,
                0,
                0,
                0,
            ],
            [
                0,
                0,
                146000000,
                0,
                0,
                0,
                0,
                0,
                88500000.01,
                0,
                0,
                0,
                0,
                0,
                46000000,
                0,
                0,
                0,
            ],
            [
                0,
                0,
                0,
                146000000,
                0,
                0,
                0,
                0,
                0,
                88500000.01,
                0,
                0,
                0,
                0,
                0,
                46000000,
                0,
                0,
            ],
            [
                0,
                0,
                0,
                0,
                146000000,
                0,
                0,
                0,
                0,
                0,
                88500000.01,
                0,
                0,
                0,
                0,
                0,
                46000000,
                0,
            ],
            [
                0,
                0,
                0,
                0,
                0,
                146000000,
                0,
                0,
                0,
                0,
                0,
                88500000.01,
                0,
                0,
                0,
                0,
                0,
                46000000,
            ],
            [
                74500000,
                0,
                0,
                0,
                0,
                0,
                46000000,
                0,
                0,
                0,
                0,
                0,
                24500000.01,
                0,
                0,
                0,
                0,
                0,
            ],
            [
                0,
                74500000,
                0,
                0,
                0,
                0,
                0,
                46000000,
                0,
                0,
                0,
                0,
                0,
                24500000.01,
                0,
                0,
                0,
                0,
            ],
            [
                0,
                0,
                74500000,
                0,
                0,
                0,
                0,
                0,
                46000000,
                0,
                0,
                0,
                0,
                0,
                24500000.01,
                0,
                0,
                0,
            ],
            [
                0,
                0,
                0,
                74500000,
                0,
                0,
                0,
                0,
                0,
                46000000,
                0,
                0,
                0,
                0,
                0,
                24500000.01,
                0,
                0,
            ],
            [
                0,
                0,
                0,
                0,
                74500000,
                0,
                0,
                0,
                0,
                0,
                46000000,
                0,
                0,
                0,
                0,
                0,
                24500000.01,
                0,
            ],
            [
                0,
                0,
                0,
                0,
                0,
                74500000,
                0,
                0,
                0,
                0,
                0,
                46000000,
                0,
                0,
                0,
                0,
                0,
                24500000.01,
            ],
        ]
    )
    ub_jerk = np.array([8500, 8500, 8500, 4500, 4500, 4500])
    lb_jerk = -ub_jerk

    ub_acc = np.array([17, 17, 17, 9, 9, 9])
    lb_acc = -ub_acc

    ub_v = np.array([2.5, 2.5, 2.5, 3, 3, 3])
    lb_v = -np.array([2.5, 2.5, 2.5, 3, 3, 3])

    jerk_bound = BOUND(lb_jerk, ub_jerk)
    acc_bound = BOUND(lb_acc, ub_acc)
    vel_bound = BOUND(lb_v, ub_v)

    mpc = ScrewMPC(n_p, n_c, Q, R, vel_bound, acc_bound, jerk_bound)

    # test public variables
    np.testing.assert_equal(mpc.a_matrix, A)
    np.testing.assert_equal(mpc.b_matrix, B)
    np.testing.assert_equal(mpc.c_matrix, C)

    # test private attributes
    np.testing.assert_almost_equal(F, mpc._mat_f.todense())
    np.testing.assert_almost_equal(PHI, mpc._phi.todense())
    np.testing.assert_almost_equal(H, mpc._a_matrix.todense())
    np.testing.assert_almost_equal(E, mpc._m_e_constraint.todense())
    np.testing.assert_almost_equal(np.triu(P), mpc._p_matrix.todense())
