[tool.poetry]
name = "mystbin-py"
version = "7.0.2"
description = "A small simple wrapper around the mystb.in API."
authors = ["AbstractUmbra <umbra@abstractumbra.dev>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/PythonistaGuild/mystbin.py"
repository = "https://github.com/PythonistaGuild/mystbin.py"
keywords = ["mystbin", "paste"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet",
    "Typing :: Typed",
]
include = ["LICENSE"]
packages = [
    { include = "mystbin" },
    { include = "mystbin/**/*.py" },
    { include = "mystbin/py.typed" },
]

[tool.poetry.urls]
"Issue Tracker" = "https://github.com/PythonistaGuild/mystbin.py/issues"

[tool.poetry.dependencies]
python = "^3.8"
aiohttp = [
    { version = "^3.8" },
    { version = "^3.8", markers = "extra == 'speed'", extras = [
        "speedups",
    ] },
]

sphinx = { version = "^4.0.0", optional = true }
sphinxcontrib-trio = { version = "*", optional = true }
furo = { version = "*", optional = true }
pytz = { version = "*", optional = true, python = "<3.9" }

[tool.poetry.extras]
speed = ["aiohttp"]
docs = ["sphinx", "sphinxcontrib-trio", "furo"]

[tool.poetry.group.speedups.dependencies]
aiohttp = { version = "^3.8", extras = ["speedups"] }

[tool.poetry.group.docs.dependencies]
sphinx = "*"
sphinxcontrib-trio = "*"
furo = "*"

[tool.poetry.group.dev.dependencies]
ruff = "*"
"typing-extensions" = "*"

[tool.poetry.scripts]
version = 'mystbin.__main__:show_version'

[tool.ruff]
line-length = 125
target-version = "py38"

[tool.ruff.lint]
exclude = ["docs/**/*.py"]
select = [
    "C4",
    "F",
    "G",
    "I",
    "PTH",
    "RUF",
    "SIM",
    "TCH",
    "UP",
    "W",
    "PERF",
    "ANN",
]
ignore = [
    "F401",
    "F402",
    "F403",
    "F405",
    "PERF203",
    "RUF001",
    "RUF009",
    "SIM105",
    "UP034",
    "UP038",
    "ANN101",
    "ANN102",
    "ANN401",
]


[tool.ruff.lint.isort]
split-on-trailing-comma = true
combine-as-imports = true

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false
parametrize-names-type = "csv"

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.pyright]
ignore = ["docs/conf.py"]
include = ["mystbin/**/*.py"]
useLibraryCodeForTypes = true
typeCheckingMode = "strict"
pythonVersion = "3.8"

[build-system]
requires = ["poetry>=1.0"]
build-backend = "poetry.masonry.api"
