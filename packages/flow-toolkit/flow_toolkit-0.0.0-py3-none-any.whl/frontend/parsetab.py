
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BUILD COLON COMMA DIVIDE DOT EQUALS FLOW GT IDENTIFIER LBRACE LBRACKET LET LPAREN LT MATMUL MINUS MUL NUMBER PLUS RBRACE RBRACKET RETURN RPAREN SEMICOLONblocks : blocks flow\n              | blocks build\n              | flow\n              | build\n    build : BUILD term term body\n    flow : flowproto bodyflowproto : flowproto LBRACKET term RBRACKET LPAREN term RPAREN\n                 | flowproto LPAREN term RPAREN LBRACKET term RBRACKET\n                 \n                 | flowproto LPAREN term RPAREN stuple\n                 | flowproto stuple LPAREN term RPAREN\n                 | flowproto LBRACKET term RBRACKET rtuple\n                 | flowproto rtuple LBRACKET term RBRACKET\n                 \n                 | flowproto LBRACKET term RBRACKET\n                 | flowproto LPAREN term RPAREN\n                 \n                 | flowproto stuple rtuple\n                 | flowproto rtuple stuple\n                 \n                 | flowproto stuple\n                 | flowproto rtuple\n                 \n                 | FLOW term\n    body : LBRACE statements RBRACEstatements : statements statement\n                  | statement\n    statement : retstmt\n                 | letstmt\n                 | assstmt\n                 | shapespec\n    shapespec : term EQUALS GT tuple SEMICOLON\n                 | term EQUALS GT tuple_s SEMICOLON\n                 | term EQUALS GT stuple SEMICOLON\n                 | term EQUALS GT rtuple SEMICOLON\n                 | term EQUALS GT term SEMICOLON\n                 | term EQUALS GT body SEMICOLON\n    retstmt : RETURN expr SEMICOLON\n               | RETURN tuple SEMICOLON\n               | RETURN tuple_s SEMICOLON\n               | RETURN stuple SEMICOLON\n               | RETURN rtuple SEMICOLON\n               | RETURN term SEMICOLON\n    assstmt : asslhs expr SEMICOLON\n               | asslhs tuple SEMICOLON\n               | asslhs tuple_s SEMICOLON\n               | asslhs stuple SEMICOLON\n               | asslhs rtuple SEMICOLON\n               | asslhs term SEMICOLON\n    asslhs : expr EQUALS\n              | tuple EQUALS\n              | tuple_s EQUALS\n              | stuple EQUALS\n              | rtuple EQUALS\n              | term EQUALS\n    letstmt : LET term term SEMICOLON\n               | LET term term stuple SEMICOLON\n    rtuple : LPAREN tuple RPAREN\n              | LPAREN tuple_s RPAREN\n    stuple : LBRACKET tuple RBRACKET\n              | LBRACKET tuple_s RBRACKET\n    tuple   : tuple_s term\n               | tuple_s expr\n               | tuple_s slice_l\n               | tuple_s slice_r\n               | tuple_s slice_e\n               | tuple_s stuple\n               | tuple_s rtuple\n               \n               | tuple COMMA term\n               | tuple COMMA expr\n               | tuple COMMA slice_l\n               | tuple COMMA slice_r\n               | tuple COMMA slice_e\n               | tuple COMMA stuple\n               | tuple COMMA rtuple\n    tuple_s : term COMMA\n               | expr COMMA\n               | stuple COMMA\n               | rtuple COMMA\n               | slice_l COMMA\n               | slice_r COMMA\n               | slice_e COMMA\n    expr : term LPAREN expr RPAREN\n            | term LPAREN term RPAREN\n            | term LPAREN RPAREN\n            \n            | term rtuple\n    slice_l : term slice_e \n               | term slice_r\n    slice_r : slice_e term \n               | slice_l term\n    slice_e : COLON\n    slice : LBRACKET slice_l RBRACKET\n             | LBRACKET slice_r RBRACKET\n             | LBRACKET slice_e RBRACKET\n             | LBRACKET term RBRACKET\n    expr : term op term\n            | term op expr\n            | expr op expr\n            | expr op term\n            \n            | MINUS term\n            | MINUS expr\n            \n            | term stuple\n            | term slice\n            | expr stuple\n            | expr slice\n            \n            | LPAREN expr RPAREN\n    term : IDENTIFIER\n            | NUMBER\n    op : PLUS\n          | MINUS\n          | MUL\n          | DIVIDE\n          | MATMUL\n          | DOT\n    '
    
_lr_action_items = {'BUILD':([0,1,2,3,7,8,9,105,126,],[5,5,-3,-4,-1,-2,-6,-20,-5,]),'FLOW':([0,1,2,3,7,8,9,105,126,],[6,6,-3,-4,-1,-2,-6,-20,-5,]),'$end':([1,2,3,7,8,9,105,126,],[0,-3,-4,-1,-2,-6,-20,-5,]),'LBRACKET':([4,10,11,12,13,14,16,17,18,19,20,21,24,25,32,34,35,36,37,38,39,40,41,42,43,44,45,46,48,51,53,55,56,58,59,60,61,63,64,74,75,76,77,78,79,80,81,87,89,90,91,93,94,96,97,98,100,101,102,103,104,106,107,109,112,113,114,115,116,117,118,120,122,125,130,131,132,133,134,135,136,137,138,139,140,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,182,183,185,186,187,188,189,190,191,192,193,194,],[10,19,19,-17,37,19,-102,-103,-19,19,56,19,19,56,56,19,19,-15,19,-16,19,-22,-23,-24,-25,-26,19,56,19,56,19,56,19,-13,19,-81,-71,-97,-98,56,56,-74,-55,19,-56,56,56,-72,-99,-100,-75,-76,-77,-73,56,56,150,-53,-54,56,56,-21,56,19,56,-45,-46,-47,-48,-49,-50,56,19,56,56,19,-11,56,56,-80,56,56,-101,56,56,56,56,56,56,19,-9,-10,-12,-33,-34,-35,-36,-37,-38,19,19,-39,-40,-41,-42,-43,-44,-87,-88,-89,-90,56,-79,-78,56,56,19,19,-51,-7,-8,-31,-27,-28,-29,-30,-32,56,-52,]),'LPAREN':([4,10,11,12,13,14,16,17,18,19,20,21,24,30,32,34,35,36,37,38,39,40,41,42,43,44,45,48,51,53,55,56,58,59,61,62,67,68,69,70,71,72,75,76,77,78,79,80,87,88,91,93,94,96,97,99,100,101,102,103,104,106,109,112,113,114,115,116,117,118,122,125,130,131,132,133,136,139,147,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,172,175,176,178,182,183,185,186,187,188,189,190,191,192,194,],[11,21,21,35,-18,21,-102,-103,-19,21,59,21,21,99,59,21,21,-15,21,-16,21,-22,-23,-24,-25,-26,21,21,59,21,59,21,131,21,-71,99,-104,-105,-106,-107,-108,-109,59,-74,-55,21,-56,59,-72,99,-75,-76,-77,-73,59,99,-14,-53,-54,59,59,-21,21,59,-45,-46,-47,-48,-49,-50,21,59,59,21,-11,59,59,59,59,59,21,-9,-10,-12,-33,-34,-35,-36,-37,-38,182,-39,-40,-41,-42,-43,-44,59,59,59,21,21,-51,-7,-8,-31,-27,-28,-29,-30,-32,-52,]),'LBRACE':([4,12,13,16,17,18,36,38,54,58,77,79,100,101,102,132,151,152,153,160,185,186,],[14,-17,-18,-102,-103,-19,-15,-16,14,-13,-55,-56,-14,-53,-54,-11,-9,-10,-12,14,-7,-8,]),'IDENTIFIER':([5,6,10,11,14,15,16,17,19,20,21,24,26,28,30,31,32,34,35,37,39,40,41,42,43,44,45,48,51,52,53,55,56,57,59,61,62,65,66,67,68,69,70,71,72,73,75,76,78,80,82,84,87,88,91,92,93,94,95,96,99,103,104,106,109,112,113,114,115,116,117,118,119,122,125,127,129,130,131,133,139,141,143,150,154,155,156,157,158,159,160,162,163,164,165,166,167,172,175,176,178,182,183,187,188,189,190,191,192,194,],[16,16,16,16,16,16,-102,-103,16,16,16,16,16,16,16,-86,16,16,16,16,16,-22,-23,-24,-25,-26,16,16,16,16,16,16,16,16,16,-71,16,16,-83,-104,-105,-106,-107,-108,-109,16,16,-74,16,16,16,16,-72,16,-75,-85,-76,-77,-84,-73,16,16,16,-21,16,16,-45,-46,-47,-48,-49,-50,16,16,16,16,16,16,16,16,16,16,16,16,-33,-34,-35,-36,-37,-38,16,-39,-40,-41,-42,-43,-44,16,16,16,16,16,-51,-31,-27,-28,-29,-30,-32,-52,]),'NUMBER':([5,6,10,11,14,15,16,17,19,20,21,24,26,28,30,31,32,34,35,37,39,40,41,42,43,44,45,48,51,52,53,55,56,57,59,61,62,65,66,67,68,69,70,71,72,73,75,76,78,80,82,84,87,88,91,92,93,94,95,96,99,103,104,106,109,112,113,114,115,116,117,118,119,122,125,127,129,130,131,133,139,141,143,150,154,155,156,157,158,159,160,162,163,164,165,166,167,172,175,176,178,182,183,187,188,189,190,191,192,194,],[17,17,17,17,17,17,-102,-103,17,17,17,17,17,17,17,-86,17,17,17,17,17,-22,-23,-24,-25,-26,17,17,17,17,17,17,17,17,17,-71,17,17,-83,-104,-105,-106,-107,-108,-109,17,17,-74,17,17,17,17,-72,17,-75,-85,-76,-77,-84,-73,17,17,17,-21,17,17,-45,-46,-47,-48,-49,-50,17,17,17,17,17,17,17,17,17,17,17,17,-33,-34,-35,-36,-37,-38,17,-39,-40,-41,-42,-43,-44,17,17,17,17,17,-51,-31,-27,-28,-29,-30,-32,-52,]),'MINUS':([10,11,14,16,17,19,20,21,24,25,30,32,34,35,37,39,40,41,42,43,44,45,46,48,51,53,55,56,59,60,61,62,63,64,67,68,69,70,71,72,74,75,76,77,78,79,80,81,87,88,89,90,91,93,94,96,97,98,99,101,102,103,104,106,107,109,112,113,114,115,116,117,118,120,122,125,130,131,133,134,135,136,137,138,139,140,146,147,148,149,150,154,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,182,183,187,188,189,190,191,192,193,194,],[30,30,30,-102,-103,30,68,30,30,68,30,68,30,30,30,30,-22,-23,-24,-25,-26,30,68,30,68,30,68,30,30,-81,-71,30,-97,-98,-104,-105,-106,-107,-108,-109,68,68,-74,-55,30,-56,68,68,-72,30,-99,-100,-75,-76,-77,-73,68,68,30,-53,-54,68,68,-21,68,30,68,-45,-46,-47,-48,-49,-50,68,30,68,68,30,68,68,-80,68,68,-101,68,68,68,68,68,68,30,-33,-34,-35,-36,-37,-38,30,-39,-40,-41,-42,-43,-44,-87,-88,-89,-90,68,-79,-78,68,68,30,30,-51,-31,-27,-28,-29,-30,-32,68,-52,]),'COLON':([10,11,14,16,17,19,20,21,24,32,34,35,37,39,40,41,42,43,44,45,48,51,53,55,56,57,59,61,75,76,78,80,87,91,93,94,96,103,104,106,109,112,113,114,115,116,117,118,122,125,130,131,133,139,150,154,155,156,157,158,159,160,162,163,164,165,166,167,172,175,176,178,182,183,187,188,189,190,191,192,194,],[31,31,31,-102,-103,31,31,31,31,31,31,31,31,31,-22,-23,-24,-25,-26,31,31,31,31,31,31,31,31,-71,31,-74,31,31,-72,-75,-76,-77,-73,31,31,-21,31,31,-45,-46,-47,-48,-49,-50,31,31,31,31,31,31,31,-33,-34,-35,-36,-37,-38,31,-39,-40,-41,-42,-43,-44,31,31,31,31,31,-51,-31,-27,-28,-29,-30,-32,-52,]),'RETURN':([14,39,40,41,42,43,44,106,154,155,156,157,158,159,162,163,164,165,166,167,183,187,188,189,190,191,192,194,],[45,45,-22,-23,-24,-25,-26,-21,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-51,-31,-27,-28,-29,-30,-32,-52,]),'LET':([14,39,40,41,42,43,44,106,154,155,156,157,158,159,162,163,164,165,166,167,183,187,188,189,190,191,192,194,],[52,52,-22,-23,-24,-25,-26,-21,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-51,-31,-27,-28,-29,-30,-32,-52,]),'RBRACKET':([16,17,20,23,24,31,60,61,63,64,65,66,76,77,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,101,102,104,127,128,129,130,135,136,137,138,139,140,141,142,143,144,145,146,147,168,169,170,171,173,174,175,],[-102,-103,58,77,79,-86,-81,-71,-97,-98,-82,-83,-74,-55,-56,-57,-58,-59,-60,-61,-62,-63,-72,-99,-100,-75,-85,-76,-77,-84,-73,-95,-96,-53,-54,153,168,169,170,171,-80,-91,-92,-101,-64,-65,-66,-67,-68,-69,-70,-93,-94,-87,-88,-89,-90,-79,-78,186,]),'COMMA':([16,17,20,22,23,25,26,27,28,29,31,32,33,46,47,49,50,51,55,60,63,64,65,66,74,75,77,79,80,81,82,83,84,85,86,89,90,92,95,97,98,101,102,103,104,107,108,110,111,112,120,121,123,124,125,127,128,129,130,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,168,169,170,171,172,173,174,175,176,177,179,180,193,],[-102,-103,61,76,78,87,91,93,94,96,-86,61,78,87,78,96,76,61,61,-81,-97,-98,-82,-83,87,61,-55,-56,-57,-58,-59,-60,-61,-62,-63,-99,-100,-85,-84,-95,-96,-53,-54,61,61,87,78,96,76,61,87,78,96,76,61,91,93,94,61,61,87,-80,-91,-92,-101,-64,-65,-66,-67,-68,-69,-70,-93,-94,-87,-88,-89,-90,61,-79,-78,61,61,78,96,76,87,]),'PLUS':([16,17,20,25,32,46,51,55,60,63,64,74,75,77,79,80,81,89,90,97,98,101,102,103,104,107,112,120,125,130,133,134,135,136,137,138,139,140,146,147,148,149,168,169,170,171,172,173,174,175,176,193,],[-102,-103,67,67,67,67,67,67,-81,-97,-98,67,67,-55,-56,67,67,-99,-100,67,67,-53,-54,67,67,67,67,67,67,67,67,67,-80,67,67,-101,67,67,67,67,67,67,-87,-88,-89,-90,67,-79,-78,67,67,67,]),'MUL':([16,17,20,25,32,46,51,55,60,63,64,74,75,77,79,80,81,89,90,97,98,101,102,103,104,107,112,120,125,130,133,134,135,136,137,138,139,140,146,147,148,149,168,169,170,171,172,173,174,175,176,193,],[-102,-103,69,69,69,69,69,69,-81,-97,-98,69,69,-55,-56,69,69,-99,-100,69,69,-53,-54,69,69,69,69,69,69,69,69,69,-80,69,69,-101,69,69,69,69,69,69,-87,-88,-89,-90,69,-79,-78,69,69,69,]),'DIVIDE':([16,17,20,25,32,46,51,55,60,63,64,74,75,77,79,80,81,89,90,97,98,101,102,103,104,107,112,120,125,130,133,134,135,136,137,138,139,140,146,147,148,149,168,169,170,171,172,173,174,175,176,193,],[-102,-103,70,70,70,70,70,70,-81,-97,-98,70,70,-55,-56,70,70,-99,-100,70,70,-53,-54,70,70,70,70,70,70,70,70,70,-80,70,70,-101,70,70,70,70,70,70,-87,-88,-89,-90,70,-79,-78,70,70,70,]),'MATMUL':([16,17,20,25,32,46,51,55,60,63,64,74,75,77,79,80,81,89,90,97,98,101,102,103,104,107,112,120,125,130,133,134,135,136,137,138,139,140,146,147,148,149,168,169,170,171,172,173,174,175,176,193,],[-102,-103,71,71,71,71,71,71,-81,-97,-98,71,71,-55,-56,71,71,-99,-100,71,71,-53,-54,71,71,71,71,71,71,71,71,71,-80,71,71,-101,71,71,71,71,71,71,-87,-88,-89,-90,71,-79,-78,71,71,71,]),'DOT':([16,17,20,25,32,46,51,55,60,63,64,74,75,77,79,80,81,89,90,97,98,101,102,103,104,107,112,120,125,130,133,134,135,136,137,138,139,140,146,147,148,149,168,169,170,171,172,173,174,175,176,193,],[-102,-103,72,72,72,72,72,72,-81,-97,-98,72,72,-55,-56,72,72,-99,-100,72,72,-53,-54,72,72,72,72,72,72,72,72,72,-80,72,72,-101,72,72,72,72,72,72,-87,-88,-89,-90,72,-79,-78,72,72,72,]),'RPAREN':([16,17,31,32,33,34,59,60,61,63,64,65,66,74,76,77,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,101,102,103,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,168,169,170,171,172,173,174,193,],[-102,-103,-86,100,101,102,135,-81,-71,-97,-98,-82,-83,138,-74,-55,-56,-57,-58,-59,-60,-61,-62,-63,-72,-99,-100,-75,-85,-76,-77,-84,-73,-95,-96,-53,-54,152,173,174,-80,-91,-92,-101,-64,-65,-66,-67,-68,-69,-70,-93,-94,138,-87,-88,-89,-90,185,-79,-78,138,]),'EQUALS':([16,17,31,46,47,48,49,50,51,60,61,63,64,65,66,76,77,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,101,102,135,136,137,138,139,140,141,142,143,144,145,146,147,168,169,170,171,173,174,],[-102,-103,-86,113,114,115,116,117,118,-81,-71,-97,-98,-82,-83,-74,-55,-56,-57,-58,-59,-60,-61,-62,-63,-72,-99,-100,-75,-85,-76,-77,-84,-73,-95,-96,-53,-54,-80,-91,-92,-101,-64,-65,-66,-67,-68,-69,-70,-93,-94,-87,-88,-89,-90,-79,-78,]),'SEMICOLON':([16,17,31,60,61,63,64,65,66,76,77,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,101,102,105,107,108,109,110,111,112,120,121,122,123,124,125,135,136,137,138,139,140,141,142,143,144,145,146,147,161,168,169,170,171,173,174,176,177,178,179,180,181,184,],[-102,-103,-86,-81,-71,-97,-98,-82,-83,-74,-55,-56,-57,-58,-59,-60,-61,-62,-63,-72,-99,-100,-75,-85,-76,-77,-84,-73,-95,-96,-53,-54,-20,154,155,156,157,158,159,162,163,164,165,166,167,-80,-91,-92,-101,-64,-65,-66,-67,-68,-69,-70,-93,-94,183,-87,-88,-89,-90,-79,-78,187,188,189,190,191,192,194,]),'RBRACE':([39,40,41,42,43,44,106,154,155,156,157,158,159,162,163,164,165,166,167,183,187,188,189,190,191,192,194,],[105,-22,-23,-24,-25,-26,-21,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-51,-31,-27,-28,-29,-30,-32,-52,]),'GT':([118,],[160,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'blocks':([0,],[1,]),'flow':([0,1,],[2,7,]),'build':([0,1,],[3,8,]),'flowproto':([0,1,],[4,4,]),'body':([4,54,160,],[9,126,181,]),'stuple':([4,10,11,13,14,19,20,21,24,25,32,34,35,37,39,45,46,48,51,53,55,56,59,74,75,78,80,81,97,98,100,103,104,107,109,112,120,122,125,130,131,133,134,136,137,139,140,146,147,148,149,150,160,161,172,175,176,178,182,193,],[12,29,29,38,49,29,63,29,85,89,63,85,29,29,49,110,89,85,63,123,63,29,29,89,63,144,63,89,63,89,151,63,63,89,85,63,89,85,63,63,29,63,89,63,89,63,89,89,63,89,63,29,179,184,63,63,63,85,29,89,]),'rtuple':([4,10,11,12,14,19,20,21,24,32,34,35,37,39,45,48,51,53,55,56,58,59,75,78,80,97,103,104,109,112,122,125,130,131,133,136,139,147,149,150,160,172,175,176,178,182,],[13,22,22,36,50,22,60,22,86,60,86,22,22,50,111,86,60,124,60,22,132,22,60,145,60,60,60,60,86,60,86,60,60,22,60,60,60,60,60,22,180,60,60,60,86,22,]),'term':([5,6,10,11,14,15,19,20,21,24,26,28,30,32,34,35,37,39,45,48,51,52,53,55,56,57,59,62,65,73,75,78,80,82,84,88,99,103,104,109,112,119,122,125,127,129,130,131,133,139,141,143,150,160,172,175,176,178,182,],[15,18,20,32,51,54,55,57,75,80,92,95,97,57,80,103,104,51,112,80,57,119,125,57,130,57,133,136,95,92,57,139,57,92,95,147,149,57,57,80,57,161,80,57,92,95,57,172,57,57,92,95,175,176,57,57,57,80,55,]),'tuple':([10,11,14,19,21,35,37,39,45,53,56,59,131,150,160,182,],[23,33,47,23,33,33,23,47,108,121,23,33,33,23,177,33,]),'tuple_s':([10,11,14,19,21,35,37,39,45,53,56,59,131,150,160,182,],[24,34,48,24,34,34,24,48,109,122,24,34,34,24,178,34,]),'expr':([10,11,14,19,21,24,30,34,35,37,39,45,48,53,56,59,62,78,88,99,109,122,131,150,160,178,182,],[25,25,46,25,74,81,98,81,25,25,46,107,81,120,25,134,137,140,146,148,81,81,25,25,25,81,193,]),'slice_l':([10,11,14,19,20,21,24,32,34,35,37,39,45,48,51,53,55,56,57,59,75,78,80,103,104,109,112,122,125,130,131,133,139,150,160,172,175,176,178,182,],[26,26,26,26,73,26,82,73,82,26,26,26,26,82,73,26,73,127,73,26,73,141,73,73,73,82,73,82,73,73,26,73,73,26,26,73,73,73,82,26,]),'slice_r':([10,11,14,19,20,21,24,32,34,35,37,39,45,48,51,53,55,56,57,59,75,78,80,103,104,109,112,122,125,130,131,133,139,150,160,172,175,176,178,182,],[27,27,27,27,66,27,83,66,83,27,27,27,27,83,66,27,66,128,66,27,66,142,66,66,66,83,66,83,66,66,27,66,66,27,27,66,66,66,83,27,]),'slice_e':([10,11,14,19,20,21,24,32,34,35,37,39,45,48,51,53,55,56,57,59,75,78,80,103,104,109,112,122,125,130,131,133,139,150,160,172,175,176,178,182,],[28,28,28,28,65,28,84,65,84,28,28,28,28,84,65,28,65,129,65,28,65,143,65,65,65,84,65,84,65,65,28,65,65,28,28,65,65,65,84,28,]),'statements':([14,],[39,]),'statement':([14,39,],[40,106,]),'retstmt':([14,39,],[41,41,]),'letstmt':([14,39,],[42,42,]),'assstmt':([14,39,],[43,43,]),'shapespec':([14,39,],[44,44,]),'asslhs':([14,39,],[53,53,]),'op':([20,25,32,46,51,55,74,75,80,81,97,98,103,104,107,112,120,125,130,133,134,136,137,139,140,146,147,148,149,172,175,176,193,],[62,88,62,88,62,62,88,62,62,88,62,88,62,62,88,62,88,62,62,62,88,62,88,62,88,88,62,88,62,62,62,62,88,]),'slice':([20,25,32,46,51,55,74,75,80,81,97,98,103,104,107,112,120,125,130,133,134,136,137,139,140,146,147,148,149,172,175,176,193,],[64,90,64,90,64,64,90,64,64,90,64,90,64,64,90,64,90,64,64,64,90,64,90,64,90,90,64,90,64,64,64,64,90,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> blocks","S'",1,None,None,None),
  ('blocks -> blocks flow','blocks',2,'p_blocks','newpercy.py',12),
  ('blocks -> blocks build','blocks',2,'p_blocks','newpercy.py',13),
  ('blocks -> flow','blocks',1,'p_blocks','newpercy.py',14),
  ('blocks -> build','blocks',1,'p_blocks','newpercy.py',15),
  ('build -> BUILD term term body','build',4,'p_build','newpercy.py',23),
  ('flow -> flowproto body','flow',2,'p_flowdef','newpercy.py',34),
  ('flowproto -> flowproto LBRACKET term RBRACKET LPAREN term RPAREN','flowproto',7,'p_flowproto','newpercy.py',44),
  ('flowproto -> flowproto LPAREN term RPAREN LBRACKET term RBRACKET','flowproto',7,'p_flowproto','newpercy.py',45),
  ('flowproto -> flowproto LPAREN term RPAREN stuple','flowproto',5,'p_flowproto','newpercy.py',47),
  ('flowproto -> flowproto stuple LPAREN term RPAREN','flowproto',5,'p_flowproto','newpercy.py',48),
  ('flowproto -> flowproto LBRACKET term RBRACKET rtuple','flowproto',5,'p_flowproto','newpercy.py',49),
  ('flowproto -> flowproto rtuple LBRACKET term RBRACKET','flowproto',5,'p_flowproto','newpercy.py',50),
  ('flowproto -> flowproto LBRACKET term RBRACKET','flowproto',4,'p_flowproto','newpercy.py',52),
  ('flowproto -> flowproto LPAREN term RPAREN','flowproto',4,'p_flowproto','newpercy.py',53),
  ('flowproto -> flowproto stuple rtuple','flowproto',3,'p_flowproto','newpercy.py',55),
  ('flowproto -> flowproto rtuple stuple','flowproto',3,'p_flowproto','newpercy.py',56),
  ('flowproto -> flowproto stuple','flowproto',2,'p_flowproto','newpercy.py',58),
  ('flowproto -> flowproto rtuple','flowproto',2,'p_flowproto','newpercy.py',59),
  ('flowproto -> FLOW term','flowproto',2,'p_flowproto','newpercy.py',61),
  ('body -> LBRACE statements RBRACE','body',3,'p_body','newpercy.py',149),
  ('statements -> statements statement','statements',2,'p_statements','newpercy.py',156),
  ('statements -> statement','statements',1,'p_statements','newpercy.py',157),
  ('statement -> retstmt','statement',1,'p_statement','newpercy.py',165),
  ('statement -> letstmt','statement',1,'p_statement','newpercy.py',166),
  ('statement -> assstmt','statement',1,'p_statement','newpercy.py',167),
  ('statement -> shapespec','statement',1,'p_statement','newpercy.py',168),
  ('shapespec -> term EQUALS GT tuple SEMICOLON','shapespec',5,'p_shape_spec','newpercy.py',174),
  ('shapespec -> term EQUALS GT tuple_s SEMICOLON','shapespec',5,'p_shape_spec','newpercy.py',175),
  ('shapespec -> term EQUALS GT stuple SEMICOLON','shapespec',5,'p_shape_spec','newpercy.py',176),
  ('shapespec -> term EQUALS GT rtuple SEMICOLON','shapespec',5,'p_shape_spec','newpercy.py',177),
  ('shapespec -> term EQUALS GT term SEMICOLON','shapespec',5,'p_shape_spec','newpercy.py',178),
  ('shapespec -> term EQUALS GT body SEMICOLON','shapespec',5,'p_shape_spec','newpercy.py',179),
  ('retstmt -> RETURN expr SEMICOLON','retstmt',3,'p_retter','newpercy.py',185),
  ('retstmt -> RETURN tuple SEMICOLON','retstmt',3,'p_retter','newpercy.py',186),
  ('retstmt -> RETURN tuple_s SEMICOLON','retstmt',3,'p_retter','newpercy.py',187),
  ('retstmt -> RETURN stuple SEMICOLON','retstmt',3,'p_retter','newpercy.py',188),
  ('retstmt -> RETURN rtuple SEMICOLON','retstmt',3,'p_retter','newpercy.py',189),
  ('retstmt -> RETURN term SEMICOLON','retstmt',3,'p_retter','newpercy.py',190),
  ('assstmt -> asslhs expr SEMICOLON','assstmt',3,'p_asser','newpercy.py',195),
  ('assstmt -> asslhs tuple SEMICOLON','assstmt',3,'p_asser','newpercy.py',196),
  ('assstmt -> asslhs tuple_s SEMICOLON','assstmt',3,'p_asser','newpercy.py',197),
  ('assstmt -> asslhs stuple SEMICOLON','assstmt',3,'p_asser','newpercy.py',198),
  ('assstmt -> asslhs rtuple SEMICOLON','assstmt',3,'p_asser','newpercy.py',199),
  ('assstmt -> asslhs term SEMICOLON','assstmt',3,'p_asser','newpercy.py',200),
  ('asslhs -> expr EQUALS','asslhs',2,'p_ass_lhs','newpercy.py',206),
  ('asslhs -> tuple EQUALS','asslhs',2,'p_ass_lhs','newpercy.py',207),
  ('asslhs -> tuple_s EQUALS','asslhs',2,'p_ass_lhs','newpercy.py',208),
  ('asslhs -> stuple EQUALS','asslhs',2,'p_ass_lhs','newpercy.py',209),
  ('asslhs -> rtuple EQUALS','asslhs',2,'p_ass_lhs','newpercy.py',210),
  ('asslhs -> term EQUALS','asslhs',2,'p_ass_lhs','newpercy.py',211),
  ('letstmt -> LET term term SEMICOLON','letstmt',4,'p_letter','newpercy.py',217),
  ('letstmt -> LET term term stuple SEMICOLON','letstmt',5,'p_letter','newpercy.py',218),
  ('rtuple -> LPAREN tuple RPAREN','rtuple',3,'p_rtuple','newpercy.py',226),
  ('rtuple -> LPAREN tuple_s RPAREN','rtuple',3,'p_rtuple','newpercy.py',227),
  ('stuple -> LBRACKET tuple RBRACKET','stuple',3,'p_stuple','newpercy.py',233),
  ('stuple -> LBRACKET tuple_s RBRACKET','stuple',3,'p_stuple','newpercy.py',234),
  ('tuple -> tuple_s term','tuple',2,'p_tuple_cont','newpercy.py',244),
  ('tuple -> tuple_s expr','tuple',2,'p_tuple_cont','newpercy.py',245),
  ('tuple -> tuple_s slice_l','tuple',2,'p_tuple_cont','newpercy.py',246),
  ('tuple -> tuple_s slice_r','tuple',2,'p_tuple_cont','newpercy.py',247),
  ('tuple -> tuple_s slice_e','tuple',2,'p_tuple_cont','newpercy.py',248),
  ('tuple -> tuple_s stuple','tuple',2,'p_tuple_cont','newpercy.py',249),
  ('tuple -> tuple_s rtuple','tuple',2,'p_tuple_cont','newpercy.py',250),
  ('tuple -> tuple COMMA term','tuple',3,'p_tuple_cont','newpercy.py',252),
  ('tuple -> tuple COMMA expr','tuple',3,'p_tuple_cont','newpercy.py',253),
  ('tuple -> tuple COMMA slice_l','tuple',3,'p_tuple_cont','newpercy.py',254),
  ('tuple -> tuple COMMA slice_r','tuple',3,'p_tuple_cont','newpercy.py',255),
  ('tuple -> tuple COMMA slice_e','tuple',3,'p_tuple_cont','newpercy.py',256),
  ('tuple -> tuple COMMA stuple','tuple',3,'p_tuple_cont','newpercy.py',257),
  ('tuple -> tuple COMMA rtuple','tuple',3,'p_tuple_cont','newpercy.py',258),
  ('tuple_s -> term COMMA','tuple_s',2,'p_tuple_start','newpercy.py',268),
  ('tuple_s -> expr COMMA','tuple_s',2,'p_tuple_start','newpercy.py',269),
  ('tuple_s -> stuple COMMA','tuple_s',2,'p_tuple_start','newpercy.py',270),
  ('tuple_s -> rtuple COMMA','tuple_s',2,'p_tuple_start','newpercy.py',271),
  ('tuple_s -> slice_l COMMA','tuple_s',2,'p_tuple_start','newpercy.py',272),
  ('tuple_s -> slice_r COMMA','tuple_s',2,'p_tuple_start','newpercy.py',273),
  ('tuple_s -> slice_e COMMA','tuple_s',2,'p_tuple_start','newpercy.py',274),
  ('expr -> term LPAREN expr RPAREN','expr',4,'p_call','newpercy.py',282),
  ('expr -> term LPAREN term RPAREN','expr',4,'p_call','newpercy.py',283),
  ('expr -> term LPAREN RPAREN','expr',3,'p_call','newpercy.py',284),
  ('expr -> term rtuple','expr',2,'p_call','newpercy.py',286),
  ('slice_l -> term slice_e','slice_l',2,'p_slice_left','newpercy.py',293),
  ('slice_l -> term slice_r','slice_l',2,'p_slice_left','newpercy.py',294),
  ('slice_r -> slice_e term','slice_r',2,'p_slice_right','newpercy.py',301),
  ('slice_r -> slice_l term','slice_r',2,'p_slice_right','newpercy.py',302),
  ('slice_e -> COLON','slice_e',1,'p_slice_empty','newpercy.py',310),
  ('slice -> LBRACKET slice_l RBRACKET','slice',3,'p_slice','newpercy.py',316),
  ('slice -> LBRACKET slice_r RBRACKET','slice',3,'p_slice','newpercy.py',317),
  ('slice -> LBRACKET slice_e RBRACKET','slice',3,'p_slice','newpercy.py',318),
  ('slice -> LBRACKET term RBRACKET','slice',3,'p_slice','newpercy.py',319),
  ('expr -> term op term','expr',3,'p_expr','newpercy.py',328),
  ('expr -> term op expr','expr',3,'p_expr','newpercy.py',329),
  ('expr -> expr op expr','expr',3,'p_expr','newpercy.py',330),
  ('expr -> expr op term','expr',3,'p_expr','newpercy.py',331),
  ('expr -> MINUS term','expr',2,'p_expr','newpercy.py',333),
  ('expr -> MINUS expr','expr',2,'p_expr','newpercy.py',334),
  ('expr -> term stuple','expr',2,'p_expr','newpercy.py',336),
  ('expr -> term slice','expr',2,'p_expr','newpercy.py',337),
  ('expr -> expr stuple','expr',2,'p_expr','newpercy.py',338),
  ('expr -> expr slice','expr',2,'p_expr','newpercy.py',339),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr','newpercy.py',341),
  ('term -> IDENTIFIER','term',1,'p_term','newpercy.py',353),
  ('term -> NUMBER','term',1,'p_term','newpercy.py',354),
  ('op -> PLUS','op',1,'p_ops','newpercy.py',360),
  ('op -> MINUS','op',1,'p_ops','newpercy.py',361),
  ('op -> MUL','op',1,'p_ops','newpercy.py',362),
  ('op -> DIVIDE','op',1,'p_ops','newpercy.py',363),
  ('op -> MATMUL','op',1,'p_ops','newpercy.py',364),
  ('op -> DOT','op',1,'p_ops','newpercy.py',365),
]
