Metadata-Version: 2.1
Name: personalDatabase
Version: 2.2.4
Summary: All functions that assist in standardising development approaches.
Home-page: https://github.com/yourusername/your-repo
Author: Marcus
Author-email: marcusongkiansiong@gmail.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: custom-development-standardisation >=1.1.2
Requires-Dist: log-data >=1.1.1
Requires-Dist: psycopg2 >=2.9.9
Requires-Dist: python-dotenv >=1.0.1

# Notes
1. about `insert` command
    It is under the category of edit commands, which require committing after making the change. 




# Column types
1. timestamp
    - 


# Concepts
1.  timestamp
    - Base:
        - Minimum number of digits: 10
            *Any lower precision involve turning beginning digits to 0.*
    - precision levels:
        10 digits: seconds
        13 digits: Millisecond
        16 digits: microseconds
    - precision in python:
        - seconds: timestamp(0)
        - milliseconds: timestamp(3)
2.  

# Change log
### [2.2.4] - 2024-06-20
add:
fixed:
1. log_data package import problem involving conflicts due to codependency between log package and this package. 
others:
1. Problem is solved (see fixed, 1) by making logging operations use their own database operations created from psycopg2 package. See change_log of log_data (patch 1.1.0)
### [2.2.3] - 2024-06-19
add:
fixed:
1. In foundation, custom_logger class init cannot find any class called foundation(the database class). Attempting to rearrange custom_logger to the bottom of the foundation file to solve the problem.
others:
### [2.2.2] - 2024-06-19
add:
1. Added log operation.
fixed:
others:
### [2.2.1] - 2024-06-17
add:
fixed:
1. Foundation: bug in insert, involving the use of the self.execute function name when it should have been self.retrieve.
others:
### [2.2.0] - 2024-06-17
add:
1. Foundation: Added insert commands
2. Foundation: connection variable added, for committing changes made by insert commands. 
3. Foundation: check_for_edit_action checks if a command is of edit type, and what type of edit is being made. 
fixed:
1. Foundation: execute command checks if the command is of type edit. Ensuring errors arising from running fetchall method after an executing an edit based command does not occur again.
others:
1. Foundation: Changed the name from execute to retrieve, since its operation (fetch all) generates error for edit based commands.
### [2.1.1] - 2024-06-17
add:
fixed:
1. Foundation: Execution of scripts reliant on the package is slow because of code execution during testing phase that I forget to delete.
others:
### [2.1.0] - 2024-06-16
add:
1. Foundation: added user parameter for database connection
2. Foundation: added host parameter for database connection
fixed:
others:
1. Foundation: changed port number from 5432 to 5433
2. Foundation: With the changes, initialising has two paths. One: default parameter with only data base name. Two: user and host specification alongside database name.
### [2.0.0] - 2024-06-07
add:
fixed:
others:
1. Restructuring foundation: explicitly state the database to connect, within the script that uses the package, through the use of functions.
2. Available commands: execute, initialise
### [1.0.0] - 2024-06-07
add:
1. function_usage: a script for retrieving or modifying data for logging_data table
2. actions: script for retrieving or modifying data for actions table
3. general_functionality: utility functions that act on databases. for example, count number of uniques.
fixed:
others:
1. remote_connection: An attempt to build a script to allow for remote connection to database.
