<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="https://www.microchip.com/schema/Provisioning_Config_1.0" xmlns="https://www.microchip.com/schema/Provisioning_Config_1.0" elementFormDefault="qualified">
  <xs:element name="Provisioning_Config" type="ProvisioningConfigType"/>
  <xs:complexType name="ProvisioningConfigType">
    <xs:sequence>
      <xs:element name="Config_Name" type="xs:string"/>
      <xs:element name="Static_Data" type="StaticDataType"/>
      <xs:element name="Input_Data" type="InputDataType"/>
      <xs:element name="Data_Sources" type="DataSourcesType"/>
      <xs:element name="QA" type="QAType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="StaticDataType">
    <xs:sequence>
      <xs:element name="Static_Item" type="StaticDataItemType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="StaticDataItemType">
    <xs:sequence>
      <xs:element name="Name" type="DataSourceNameType"/>
      <xs:element name="Description" type="xs:string" minOccurs="0"/>
      <xs:element name="Value" type="ValueType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ValueType">
    <xs:choice>
      <xs:element name="Bytes" type="PublicBinaryDataType"/>
      <xs:element name="Date_Time" type="xs:dateTime"/>
      <xs:element name="ECC_Public_Key" type="StaticPublicKeyPublicType"/>
      <xs:element name="RSA_Public_Key" type="StaticPublicKeyPublicType"/>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="InputDataType">
    <xs:sequence>
      <xs:element name="Input_Item" type="DeviceRecordType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DeviceRecordType">
    <xs:sequence>
      <xs:element name="Name" type="DataSourceNameType"/>
      <xs:element name="Type" type="DataTypeEnum"/>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="QAType">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="QA_Operation">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Name" type="DataSourceNameType"/>
            <xs:element name="Description" type="xs:string" minOccurs="0"/>
            <xs:element name="Destructive" type="BooleanType"/>
            <xs:choice>
              <xs:element name="Public_Data" type="QAPublicDataType"/>
              <xs:element name="X509_Certificate" type="QAX509CertificateType"/>
              <xs:element name="Private_Key" type="QAPrivateKeyType"/>
            </xs:choice>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="QAPublicDataType">
    <xs:sequence>
      <xs:element name="Target" type="TargetType">
        <xs:annotation>
          <xs:documentation>
            Name of the target that can be read from the device and compared against expected data sent.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="QAX509CertificateType">
    <xs:sequence>
      <xs:element name="Certificate_Data_Source" type="DataSourceNameType">
        <xs:annotation>
          <xs:documentation>
            Name of the X509_Certificate or X509_Certificate_From_TBS Data_Source to validate the certificate against.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="QAPrivateKeyType">
    <xs:sequence>
      <xs:element name="Public_Key_Source_Name" type="DataSourceReferenceType">
        <xs:annotation>
          <xs:documentation>
            Reference to a Data_Source output with the public key used to validate the response from the private key
            challenge.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Signature_Algorithm" type="SignatureAlgorithmType">
        <xs:annotation>
          <xs:documentation>
            Indicates the signature algorithm the device will use to sign the challenge.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>


  <!-- Data_Sources content intended to be common to multiple config schemas. -->

  <xs:simpleType name="BooleanType">
    <xs:annotation>
      <xs:documentation>
        Boolean types used in TA100 config XML structure
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:enumeration value="True"/>
      <xs:enumeration value="False"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NumberHex-8bit">
    <xs:annotation>
      <xs:documentation>
        8-bit number as a single hex octet (e.g. 0x4F).
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:pattern value="0x[0-9a-fA-F]{2}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DataSourceNameType">
    <xs:annotation>
      <xs:documentation>Data sources use c-function like naming conventions.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:pattern value="[a-zA-Z_][a-zA-Z0-9_]*"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="DataSourceReferenceType">
    <xs:annotation>
      <xs:documentation>Format used to refer to data sources and their outputs.</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:pattern value="[a-zA-Z_][0-9a-zA-Z_]*(\.[a-zA-Z_][0-9a-zA-Z_]*)?"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="PublicBinaryEncodingEnum">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Hex"/>
      <xs:enumeration value="Base64"/>
      <xs:enumeration value="String_UTF8"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="PublicBinaryDataType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="encoding" type="PublicBinaryEncodingEnum" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="SecretBinaryEncodingEnum">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Hex"/>
      <xs:enumeration value="Base64"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="SecretBinaryDataType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="encoding" type="SecretBinaryEncodingEnum" use="required"/>
        <xs:attribute name="encrypted" type="BooleanType" use="required"/>
        <xs:attribute name="algorithm" type="EncryptionAlgorithmEnum" use="optional"/>
        <xs:attribute name="key_name" type="DataSourceNameType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="EncryptionAlgorithmEnum">
    <xs:restriction base="xs:token">
      <xs:enumeration value="AES256_GCM"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="HashAlgorithmEnum">
    <xs:restriction base="xs:token">
      <xs:enumeration value="SHA1"/>
      <xs:enumeration value="SHA224"/>
      <xs:enumeration value="SHA256"/>
      <xs:enumeration value="SHA384"/>
      <xs:enumeration value="SHA512"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="HashAlgorithmAndNoneEnum">
    <xs:restriction base="xs:token">
      <xs:enumeration value="None"/>
      <xs:enumeration value="SHA1"/>
      <xs:enumeration value="SHA224"/>
      <xs:enumeration value="SHA256"/>
      <xs:enumeration value="SHA384"/>
      <xs:enumeration value="SHA512"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="DataSourcesType">
    <xs:sequence>
      <xs:element name="Data_Source" type="DataSourceType" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            Data source objects for specifying static and dynamic data along with functions affecting it.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Writer" type="DataSourcesWriterType" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            Writer types specify where named Data_Source items or Function results should be written to on a
            device.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Wrapped_Key" type="DataSourcesWrappedKeyType" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            A wrapped key item, which was used to encrypt one or more secret Data_Source items.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DataSourceType">
    <xs:sequence>
      <xs:element name="Name" type="DataSourceNameType">
        <xs:annotation>
          <xs:documentation>
            The name of the Data_Source, which is directly referenced by either Functions or Writers.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Description" type="xs:string" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            An arbitrary description of what this Data_Source is used for. Not required.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:choice>
        <xs:element name="Static_Bytes" type="StaticBytesType">
          <xs:annotation>
            <xs:documentation>
              Static data that is sourced from this configuration.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Static_ECC_Private_Key" type="StaticPrivateKeyType">
          <xs:annotation>
            <xs:documentation>
              Static ECC Private Key definition.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Static_ECC_Public_Key" type="StaticPublicKeyType">
          <xs:annotation>
            <xs:documentation>
              Static ECC Public Key definition.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Static_RSA_Private_Key" type="StaticPrivateKeyType">
          <xs:annotation>
            <xs:documentation>
              Static RSA Public Key definition.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Static_RSA_Public_Key" type="StaticPublicKeyType">
          <xs:annotation>
            <xs:documentation>
              Static RSA Public Key definition.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Static_Date_Time">
          <xs:annotation>
            <xs:documentation>
              Static date and time
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Date_Time" type="xs:dateTime"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Database_Data" type="DatabaseDataType">
          <xs:annotation>
            <xs:documentation>
              Data that is sourced from the database, such as Record Sets, counters, etc.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="HSM_Generate_Key" type="HSMGenerateKeyType">
          <xs:annotation>
            <xs:documentation>
              Generates an asymmetric key pair in the HSM.
              Has two outputs, Public_Key and Private_Key.
            </xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="Force_Nonnegative_Fixed_Size">
          <xs:annotation>
            <xs:documentation>
              Treats the input bytes as a big endian signed integer (e.g. ASN.1 format). Sets the upper most bits to
              0b01 to make the value positive and fixed size (untrimmable).
            </xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Input" type="DataSourceReferenceType"/>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="HSM_Random" type="HSMRandomType"/>
        <xs:element name="Process_Info">
          <xs:annotation>
            <xs:documentation>
              Provides information about the provisioning process and the device being provisioned.  Device information
              depends on the device being provisioned.
              TA100
              - Serial_Number: Bytes
            </xs:documentation>
          </xs:annotation>
          <xs:complexType/>
        </xs:element>
        <xs:element name="Bytes_Encode" type="BytesEncodeType"/>
        <xs:element name="Date_Time_Modify" type="DateTimeModifyType"/>
        <xs:element name="Current_Date_Time">
          <xs:complexType/>
        </xs:element>
        <xs:element name="Template" type="TemplateType"/>
        <xs:element name="X509_Certificate" type="X509CertificateType"/>
        <xs:element name="X509_Certificate_From_TBS" type="X509CertificateFromTBSType"/>
        <xs:element name="X509_Certificate_Parser" type="X509CertificateParserType"/>
        <xs:element name="Counter" type="CounterType"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="StaticBytesType">
    <xs:choice>
      <xs:element name="Public" type="PublicBinaryDataType"/>
      <xs:element name="Secret" type="SecretBinaryDataType"/>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="StaticPrivateKeyType">
    <xs:choice>
      <!--
      Seems like having an unencrypted private key is asking for problems.
      <xs:element name="Public" type="StaticPrivateKeyPublicType"/>
      -->
      <xs:element name="Secret" type="StaticPrivateKeySecretType"/>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="StaticPrivateKeyPublicType">
    <xs:simpleContent>
      <xs:extension base="xs:token">
        <xs:attribute name="encoding" fixed="PEM" use="required"/>
        <xs:attribute name="format" fixed="PKCS8" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="StaticPrivateKeySecretType">
    <xs:complexContent>
      <xs:extension base="SecretBinaryDataType">
        <xs:attribute name="format" use="required" fixed="PKCS8"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="StaticPublicKeyType">
    <xs:choice>
      <xs:element name="Public" type="StaticPublicKeyPublicType"/>
      <xs:element name="Secret" type="StaticPublicKeySecretType"/>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="StaticPublicKeyPublicType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="encoding" fixed="PEM" use="required"/>
        <xs:attribute name="format" fixed="Subject_Public_Key_Info" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="StaticPublicKeySecretType">
    <xs:complexContent>
      <xs:extension base="SecretBinaryDataType">
        <xs:attribute name="format" use="required" fixed="Subject_Public_Key_Info"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="DatabaseDataType">
    <xs:sequence>
      <xs:element name="Record_Set_Name" type="xs:token"/>
      <xs:element name="Fields">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Field" type="DatabaseDataFieldType" maxOccurs="unbounded"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DatabaseDataFieldType">
    <xs:simpleContent>
      <xs:extension base="DataSourceNameType">
        <xs:attribute name="type" type="DataTypeEnum" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="DataTypeEnum">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Bytes"/>
      <xs:enumeration value="ECC_Private_Key"/>
      <xs:enumeration value="ECC_Public_Key"/>
      <xs:enumeration value="RSA_Private_Key"/>
      <xs:enumeration value="RSA_Public_Key"/>
      <xs:enumeration value="Date_Time"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="HSMGenerateKeyType">
    <xs:choice>
      <xs:element name="RSA" type="HSMGenerateKeyRSAType"/>
      <xs:element name="ECC" type="HSMGenerateKeyECCType"/>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="HSMGenerateKeyRSAType">
    <xs:sequence>
      <xs:element name="Key_Size">
        <xs:simpleType>
          <xs:restriction base="xs:integer">
            <xs:minInclusive value="512"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="Exponent" type="BignumHexType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="BignumHexType">
    <xs:annotation>
      <xs:documentation>
        Arbitrary large integer in big endian twos-complement form.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:token">
      <xs:pattern value="0x([0-9a-fA-F]{2})+"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="HSMGenerateKeyECCType">
    <xs:sequence>
      <xs:element name="Curve" type="xs:token"/>
      <xs:element name="Compact" type="BooleanType" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            If True, the generated key pair will have a public key that can be represented by the ECC
            Compact form as defined in https://tools.ietf.org/id/draft-jivsov-ecc-compact-05.html
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="HSMRandomType">
    <xs:sequence>
      <xs:element name="Size">
        <xs:simpleType>
          <xs:restriction base="xs:integer">
            <xs:minInclusive value="1"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="Secret_Data" type="BooleanType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="BytesEncodeType">
    <xs:sequence>
      <xs:element name="Input" type="DataSourceReferenceType"/>
      <xs:element name="Algorithm">
        <xs:complexType>
          <xs:choice>
            <xs:element name="Hex" type="BytesEncodeHexType"/>
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="BytesEncodeHexType">
    <xs:sequence>
      <xs:element name="Case" type="StringCaseType"/>
      <xs:element name="Separator" type="xs:string"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="StringCaseType">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Upper"/>
      <xs:enumeration value="Lower"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="DateTimeModifyType">
    <xs:sequence>
      <xs:element name="Input" type="DataSourceReferenceType"/>
      <xs:element name="Add_Period" type="xs:duration"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="TemplateType">
    <xs:sequence>
      <xs:element name="Definition">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="TemplateDefinition">
              <xs:attribute name="encoding" use="required">
                <xs:simpleType>
                  <xs:restriction base="xs:token">
                    <xs:enumeration value="String_UTF8"/>
                    <xs:enumeration value="Hex"/>
                  </xs:restriction>
                </xs:simpleType>
              </xs:attribute>
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="TemplateDefinition">
    <xs:annotation>
      <xs:documentation>
        Restricts the template definition string to enforce matched curly brace references and double opening
        curly brace to escape a litter opening curly brace.
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="([^{]+|\{[^}]+\}|\{\{)*"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="X509CertificateType">
    <xs:sequence>
      <xs:element name="TBS_Certificate">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Version" type="X509VersionType"/>
            <xs:element name="Serial_Number" type="X509SerialNumberType"/>
            <xs:element name="Validity">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Not_Before" type="X509TimeType"/>
                  <xs:element name="Not_After" type="X509TimeType"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="Subject" type="X509NameType"/>
            <xs:element name="Subject_Public_Key_Info" type="X509SubjectPublicKeyInfoType"/>
            <xs:element name="Issuer_Unique_ID" type="X509IssuerUniqueIDType" minOccurs="0"/>
            <xs:element name="Subject_Unique_ID" type="X509SubjectUniqueIDType" minOccurs="0"/>
            <xs:element name="Extensions" type="X509ExtensionsType" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="Signature_Algorithm" type="X509SignatureAlgorithmType"/>
      <xs:element name="CA_Certificate_Chain" type="X509CACertificateChainType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="X509VersionType">
    <xs:restriction base="xs:token">
      <xs:enumeration value="V1"/>
      <xs:enumeration value="V2"/>
      <xs:enumeration value="V3"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="X509SerialNumberType">
    <xs:simpleContent>
      <xs:extension base="DataSourceReferenceType">
        <xs:attribute name="from_source" type="BooleanType" fixed="True" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="X509TimeValueOrDataSourceReferenceType">
    <xs:union memberTypes="xs:dateTime DataSourceReferenceType"/>
  </xs:simpleType>
  <xs:complexType name="X509TimeType">
    <xs:simpleContent>
      <xs:extension base="X509TimeValueOrDataSourceReferenceType">
        <xs:attribute name="type" use="required">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:enumeration value="Auto"/>
              <xs:enumeration value="UTC_Time"/>
              <xs:enumeration value="Generalized_Time"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="from_source" type="BooleanType" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="X509NameType">
    <xs:sequence>
      <xs:element name="Relative_Distinguished_Name" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:choice>
            <xs:element name="Attribute_Type_And_Value">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Type" type="OIDType"/>
                  <xs:element name="Value" type="DERBinaryDataOrFromSourceType"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <!-- 2.5.4.3 -->
            <xs:element name="Common_Name" type="X520DirectoryStringOrFromSourceType"/>
            <!-- 2.5.4.4 -->
            <xs:element name="Surname" type="X520DirectoryStringOrFromSourceType"/>
            <!-- 2.5.4.5 -->
            <xs:element name="Serial_Number" type="X520PrintableStringOrFromSourceType"/>
            <!-- 2.5.4.6 -->
            <xs:element name="Country_Name" type="X520PrintableStringOrFromSourceType"/>
            <!-- 2.5.4.7 -->
            <xs:element name="Locality_Name" type="X520DirectoryStringOrFromSourceType"/>
            <!-- 2.5.4.8 -->
            <xs:element name="State_Or_Province_Name" type="X520DirectoryStringOrFromSourceType"/>
            <!-- 2.5.4.10 -->
            <xs:element name="Organization_Name" type="X520DirectoryStringOrFromSourceType"/>
            <!-- 2.5.4.11 -->
            <xs:element name="Organizational_Unit_Name" type="X520DirectoryStringOrFromSourceType"/>
            <!-- 2.5.4.12 -->
            <xs:element name="Title" type="X520DirectoryStringOrFromSourceType"/>
            <!-- 2.5.4.42 -->
            <xs:element name="Given_Name" type="X520DirectoryStringOrFromSourceType"/>
            <!-- 2.5.4.43 -->
            <xs:element name="Initials" type="X520DirectoryStringOrFromSourceType"/>
            <!-- 2.5.4.44 -->
            <xs:element name="Generation_Qualifier" type="X520DirectoryStringOrFromSourceType"/>
            <!-- 2.5.4.46 -->
            <xs:element name="DN_Qualifier" type="X520PrintableStringOrFromSourceType"/>
            <!-- 2.5.4.65 -->
            <xs:element name="Pseudonym" type="X520DirectoryStringOrFromSourceType"/>
            <!-- 0.9.2342.19200300.100.1.25 from RFC 3039 -->
            <xs:element name="Domain_Component" type="X520IA5StringOrFromSourceType"/>
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="OIDType">
    <xs:restriction base="xs:token">
      <xs:pattern value="[0-9]+(\.[0-9]+)*"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="DERBinaryDataOrFromSourceType">
    <xs:simpleContent>
      <!-- Not extending from SecretBinaryDataType, since the encoding attribute is optional when from_source is True. -->
      <xs:extension base="xs:string">
        <xs:attribute name="from_source" type="BooleanType" use="required"/>
        <!--
          SecretBinaryEncodingEnum is used as we want to exclude the String_UTF8 option, since that doesn't make sense
          for DER encoded data.
         -->
        <xs:attribute name="encoding" type="SecretBinaryEncodingEnum" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="StringOrDataOrFromSourceType">
    <xs:annotation>
      <xs:documentation>
        Base type for specifying static data or dynamic data from a data source.
        When from_source attribute is set to False, this indicates static data and the encoding attribute must be used
        to indicate how the data is encoded. Hex and Base64 are for expressing raw binary values. String_UTF8 indicates
        the element contents should be used as is.
        When from_source attribute is True, the element contains a data source reference for where to get the dynamic
        data from. The encoding attribute has no meaning in this case and should be omitted.
      </xs:documentation>
    </xs:annotation>
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="from_source" type="BooleanType" use="required"/>
        <xs:attribute name="encoding" type="PublicBinaryEncodingEnum" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="X520DirectoryStringOrFromSourceType">
    <xs:annotation>
      <xs:documentation>
        Express a string using either the PrintableString or UTF8String types. Also allows specifying a data source
        as the data.
        While technically this is meant to mirror the X520name definition, the rarely used TeletexString,
        UniversalString, and BMPString types are unsupported.
        The Raw type allows one to specify the raw ASN.1 data for the value. Data must include a properly formed tag,
        length, and value in DER encoding. encoding attribute must be Hex or Base64 for this type.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="StringOrDataOrFromSourceType">
        <xs:attribute name="type" use="required">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:enumeration value="Raw"/>
              <xs:enumeration value="Printable_String"/>
              <xs:enumeration value="UTF8_String"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="X520PrintableStringOrFromSourceType">
    <xs:annotation>
      <xs:documentation>
        Express a string using the PrintableString type directly or from a data source.
        The Raw type allows one to specify the raw ASN.1 data for the value. Data must include properly formed tag,
        length, and value in DER encoding. encoding attribute must be Hex or Base64 for this type.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="StringOrDataOrFromSourceType">
        <xs:attribute name="type" use="required">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:enumeration value="Raw"/>
              <xs:enumeration value="Printable_String"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="X520IA5StringOrFromSourceType">
    <xs:annotation>
      <xs:documentation>
        Express a string using the IA5String type directly or from a data source.
        The Raw type allows one to specify the raw ASN.1 data for the value must include properly formed tag,
        length, and value in DER encoding. encoding attribute must be Hex or Base64 for this type.
      </xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="StringOrDataOrFromSourceType">
        <xs:attribute name="type" use="required">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:enumeration value="Raw"/>
              <xs:enumeration value="IA5_String"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="X509SubjectPublicKeyInfoType">
    <xs:sequence>
      <xs:element name="Key">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="DataSourceReferenceType">
              <xs:attribute name="from_source" type="BooleanType" fixed="True" use="required"/>
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="Options" minOccurs="0">
        <xs:complexType>
          <xs:choice>
            <xs:element name="ECC">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Format">
                    <xs:simpleType>
                      <xs:restriction base="xs:token">
                        <xs:enumeration value="Uncompressed"/>
                        <xs:enumeration value="Compressed"/>
                      </xs:restriction>
                    </xs:simpleType>
                  </xs:element>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="X509IssuerUniqueIDType">
    <xs:restriction base="xs:token">
      <xs:enumeration value="From_CA_Subject_Unique_ID"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="X509SubjectUniqueIDType">
    <xs:simpleContent>
      <xs:extension base="DataSourceReferenceType">
        <xs:attribute name="from_source" type="BooleanType" fixed="True" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="X509ExtensionsType">
    <xs:choice maxOccurs="unbounded">
      <xs:element name="Extension" type="X509ExtensionType"/>
      <xs:element name="Authority_Key_Identifier" type="X509AuthorityKeyIdentifierType"/>
      <xs:element name="Subject_Key_Identifier" type="X509SubjectKeyIdentifierType"/>
      <xs:element name="Key_Usage" type="X509KeyUsageType"/>
      <xs:element name="Basic_Constraints" type="X509BasicConstraintsType"/>
      <xs:element name="Extended_Key_Usage" type="X509ExtendedKeyUsageType"/>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="X509ExtensionType">
    <xs:sequence>
      <xs:element name="Extn_ID" type="OIDType"/>
      <xs:element name="Critical" type="BooleanType"/>
      <xs:element name="Extn_Value" type="DERBinaryDataOrFromSourceType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="KeyIdentifierCalculatedType">
    <xs:sequence>
      <xs:element name="Method" type="KeyIdentifierCalculatedEnum"/>
      <xs:element name="Truncated_Size" type="xs:positiveInteger" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            Override the default key ID size for the chosen method.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="KeyIdentifierCalculatedEnum">
    <xs:restriction base="xs:token">
      <xs:enumeration value="RFC5280_Method1"/>
      <xs:enumeration value="RFC5280_Method2"/>
      <xs:enumeration value="RFC7093_Method1"/>
      <xs:enumeration value="RFC7093_Method2"/>
      <xs:enumeration value="RFC7093_Method3"/>
      <xs:enumeration value="RFC7093_Method4_SHA256"/>
      <xs:enumeration value="RFC7093_Method4_SHA384"/>
      <xs:enumeration value="RFC7093_Method4_SHA512"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="X509AuthorityKeyIdentifierType">
    <xs:sequence>
      <xs:element name="Critical" type="BooleanType"/>
      <xs:element name="ID_Method">
        <xs:complexType>
          <xs:choice>
            <xs:element name="Key_Identifier">
              <xs:complexType>
                <xs:choice>
                  <xs:element name="From_CA_Subject_Key_Identifier"/>
                  <xs:element name="Calculated" type="KeyIdentifierCalculatedType"/>
                </xs:choice>
              </xs:complexType>
            </xs:element>
            <xs:element name="Issuer_And_Serial_Number">
              <xs:simpleType>
                <xs:restriction base="xs:token">
                  <xs:enumeration value="From_CA"/>
                </xs:restriction>
              </xs:simpleType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="X509SubjectKeyIdentifierType">
    <xs:sequence>
      <xs:element name="Critical" type="BooleanType"/>
      <xs:element name="Key_Identifier">
        <xs:complexType>
          <xs:choice>
            <xs:element name="From_Source" type="DataSourceReferenceType"/>
            <xs:element name="Calculated" type="KeyIdentifierCalculatedType"/>
          </xs:choice>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="X509KeyUsageType">
    <xs:sequence>
      <xs:element name="Critical" type="BooleanType"/>
      <xs:element name="Digital_Signature" type="BooleanType"/>
      <xs:element name="Content_Commitment" type="BooleanType"/>
      <xs:element name="Key_Encipherment" type="BooleanType"/>
      <xs:element name="Data_Encipherment" type="BooleanType"/>
      <xs:element name="Key_Agreement" type="BooleanType"/>
      <xs:element name="Key_Cert_Sign" type="BooleanType"/>
      <xs:element name="CRL_Sign" type="BooleanType"/>
      <xs:element name="Encipher_Only" type="BooleanType"/>
      <xs:element name="Decipher_Only" type="BooleanType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="X509BasicConstraintsType">
    <xs:sequence>
      <xs:element name="Critical" type="BooleanType"/>
      <xs:element name="CA" type="BooleanType"/>
      <xs:element name="Path_Len_Constraint" minOccurs="0">
        <xs:simpleType>
          <xs:union>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
            <xs:simpleType>
              <xs:restriction base="xs:token">
                <xs:enumeration value="No_Limit"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:union>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="X509ExtendedKeyUsageType">
    <xs:sequence>
      <xs:element name="Critical" type="BooleanType"/>
      <xs:element name="Key_Purpose_Id" type="OIDType" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="X509SignatureAlgorithmType">
    <xs:choice>
      <xs:element name="ECDSA" type="X509SignatureAlgorithmECDSAType"/>
      <xs:element name="RSASSA_PKCS1_V1_5" type="X509SignatureAlgorithmRSA15Type"/>
      <xs:element name="RSASSA_PSS" type="X509SignatureAlgorithmRSAPSSType"/>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="X509SignatureAlgorithmECDSAType">
    <xs:sequence>
      <xs:element name="Hash" type="HashAlgorithmEnum"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="X509SignatureAlgorithmRSA15Type">
    <xs:sequence>
      <xs:element name="Hash" type="HashAlgorithmEnum"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="X509SignatureAlgorithmRSAPSSType">
    <xs:sequence>
      <xs:element name="Hash" type="HashAlgorithmEnum"/>
      <xs:element name="Mask_Generation_Function">
        <xs:complexType>
          <xs:choice>
            <xs:element name="MGF1">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Hash" type="HashAlgorithmEnum"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="Salt_Length" type="xs:nonNegativeInteger"/>
      <xs:element name="Trailer_Field">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="0xBC"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SignatureAlgorithmType">
    <xs:annotation>
      <xs:documentation>
        Similar to X509SignatureAlgorithmType, except Hashes can be set to None to indicate a raw signing
        operation.
      </xs:documentation>
    </xs:annotation>
    <xs:choice>
      <xs:element name="ECDSA" type="SignatureAlgorithmECDSAType"/>
      <xs:element name="RSASSA_PKCS1_V1_5" type="SignatureAlgorithmRSA15Type"/>
      <xs:element name="RSASSA_PSS" type="SignatureAlgorithmRSAPSSType"/>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="SignatureAlgorithmECDSAType">
    <xs:sequence>
      <xs:element name="Hash" type="HashAlgorithmAndNoneEnum"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SignatureAlgorithmRSA15Type">
    <xs:sequence>
      <xs:element name="Hash" type="HashAlgorithmEnum"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="SignatureAlgorithmRSAPSSType">
    <xs:sequence>
      <xs:element name="Hash" type="HashAlgorithmEnum"/>
      <xs:element name="Mask_Generation_Function">
        <xs:complexType>
          <xs:choice>
            <xs:element name="MGF1">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Hash" type="HashAlgorithmEnum"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
          </xs:choice>
        </xs:complexType>
      </xs:element>
      <xs:element name="Salt_Length" type="xs:nonNegativeInteger"/>
      <xs:element name="Trailer_Field">
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:enumeration value="0xBC"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="DataSourcesWriterType">
    <xs:sequence>
      <xs:element name="Source_Name" type="DataSourceReferenceType">
        <xs:annotation>
          <xs:documentation>
            The name of the source of data, whether that is a named Data_Source item or Function.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="Description" type="xs:string" minOccurs="0"/>
      <xs:element name="Target" type="TargetType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="TargetType">
    <xs:restriction base="xs:string">
      <xs:maxLength value="256"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="DataSourcesWrappedKeyType">
    <xs:sequence>
      <xs:element name="Name" type="DataSourceNameType"/>
      <xs:element name="Description" type="xs:string" minOccurs="0"/>
      <xs:element name="Key">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:string">
              <xs:attribute name="algorithm" fixed="RSA_OAEP_SHA256" use="required"/>
              <xs:attribute name="encoding" type="SecretBinaryEncodingEnum" use="required"/>
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="Wrapping_Public_Key">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:string">
              <xs:attribute name="encoding" fixed="PEM" use="required"/>
              <xs:attribute name="format" fixed="Subject_Public_Key_Info" use="required"/>
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="X509CACertificateChainType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="encoding" fixed="PEM" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="X509CertificateFromTBSType">
    <xs:sequence>
      <xs:element name="TBS_Certificate">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="DataSourceReferenceType">
              <xs:attribute name="from_source" type="BooleanType" fixed="True" use="required"/>
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="Update_Elements" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            While it's expected the input TBS certificate will contain most of the certificate details, this
            section gives an opportunity to update certain elements of the certificate.
          </xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:sequence>
            <xs:element name="Serial_Number" type="X509SerialNumberType" minOccurs="0"/>
            <xs:element name="Validity" minOccurs="0">
              <xs:complexType>
                <xs:sequence>
                  <xs:element name="Not_Before" type="X509TimeType" minOccurs="0"/>
                  <xs:element name="Not_After" type="X509TimeType" minOccurs="0"/>
                </xs:sequence>
              </xs:complexType>
            </xs:element>
            <xs:element name="Subject" type="X509NameType" minOccurs="0">
              <xs:annotation>
                <xs:documentation>
                  This subject will not replace the entire subject specified in the TBS certificate. Instead, the
                  individual attributes specified here will replace existing ones.
                </xs:documentation>
              </xs:annotation>
            </xs:element>
            <xs:element name="Subject_Public_Key_Info" type="X509SubjectPublicKeyInfoType" minOccurs="0"/>
            <xs:element name="Issuer_Unique_ID" type="X509IssuerUniqueIDType" minOccurs="0"/>
            <xs:element name="Subject_Unique_ID" type="X509SubjectUniqueIDType" minOccurs="0"/>
            <xs:element name="Extensions" type="X509ExtensionsType" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="CA_Certificate_Chain" type="X509CACertificateChainType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="X509CertificateParserType">
    <xs:annotation>
      <xs:documentation>
        This data source accepts an X.509 certificate as input and will parse its elements for various uses.
        Serial_Number - Bytes
        Issuer_Common_Name - Bytes
        Issuer_Surname - Bytes
        Issuer_Serial_Number - Bytes
        Issuer_Country_Name - Bytes
        Issuer_Locality_Name - Bytes
        Issuer_State_Or_Province_Name - Bytes
        Issuer_Organization_Name - Bytes
        Issuer_Organizational_Unit_Name - Bytes
        Issuer_Title - Bytes
        Issuer_Given_Name - Bytes
        Issuer_Initials - Bytes
        Issuer_Generation_Qualifier - Bytes
        Issuer_DN_Qualifier - Bytes
        Issuer_Pseudonym - Bytes
        Issuer_Domain_Component - Bytes
        Validity_Not_Before - Date_Time
        Validity_Not_After - Date_Time
        Subject_Common_Name - Bytes
        Subject_Surname - Bytes
        Subject_Serial_Number - Bytes
        Subject_Country_Name - Bytes
        Subject_Locality_Name - Bytes
        Subject_State_Or_Province_Name - Bytes
        Subject_Organization_Name - Bytes
        Subject_Organizational_Unit_Name - Bytes
        Subject_Title - Bytes
        Subject_Given_Name - Bytes
        Subject_Initials - Bytes
        Subject_Generation_Qualifier - Bytes
        Subject_DN_Qualifier - Bytes
        Subject_Pseudonym - Bytes
        Subject_Domain_Component - Bytes
        Public_Key - ECC_Public_Key or RSA_Public_Key
        Issuer_Unique_ID - Bytes
        Subject_Unique_ID - Bytes
        Authority_Key_Identifier - Bytes
        Subject_Key_Identifier - Bytes
        Signature - Bytes
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="Certificate" type="X509CertificateOrFromSource"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="X509CertificateOrFromSource">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="from_source" type="BooleanType" use="required"/>
        <xs:attribute name="format" fixed="PEM" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="CounterType">
    <xs:sequence>
      <xs:element name="Counter_Name" type="xs:token"/>
      <xs:element name="Size" type="xs:positiveInteger"/>
      <xs:element name="Byte_Order" type="ByteOrderType"/>
      <xs:element name="Signed" type="BooleanType"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="ByteOrderType">
    <xs:restriction base="xs:token">
      <xs:enumeration value="Big"/>
      <xs:enumeration value="Little"/>
    </xs:restriction>
  </xs:simpleType>
</xs:schema>