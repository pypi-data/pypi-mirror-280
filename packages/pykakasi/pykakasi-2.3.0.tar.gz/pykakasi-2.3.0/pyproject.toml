[project]
name = "pykakasi"
requires-python = ">=3.8"
description = "Kana kanji simple inversion library"
keywords = ["kakasi", "NLP"]
license = {text = "GPL-3.0-or-later"}
authors = [
    {name = "Hiroshi Miura", email = "miurahr@linux.com"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = ["importlib_resources; python_version < '3.9'", "jaconv", "deprecated"]
dynamic = ["version", "readme"]

[tool.setuptools.packages.find]
where = ["src"]
include = ["pykakasi"]

[tool.setuptools.dynamic]
readme = {file = ["README.rst"]}

[project.scripts]
kakasi = "pykakasi.cli:cli_main"

[project.optional-dependencies]
test = [
    "pytest>7",
    "pytest-benchmark",
    "coverage[toml]>=5.2",
    "py-cpuinfo"
    ]
docs = [
    "sphinx>=1.8",
    "sphinx-intl",
    "sphinx-py3doc-enhanced-theme",
    "sphinx_rtd_theme"
    ]
check = [
    "mypy>=1.0.0",
    "mypy_extensions>=1.0.0",
    "docutils",
    "check-manifest",
    "flake8",
    "flake8-black",
    "flake8-deprecated",
    "readme-renderer",
    "pygments",
    "isort",
    "twine"
    ]

[project.urls]
Source = "https://codeberg.org/miurahr/pykakasi"

[build-system]
requires = ["setuptools>=42", "wheel", "setuptools_scm[toml]>=3.5.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
local_scheme = "no-local-version"

[tool.pytest.ini_options]
pythonpath = [
  "src"
]

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
parallel = true
source = ["pykakasi", "tests"]

[tool.coverage.report]
show_missing = true
exclude_lines = ["if __name__ == .__main__.:", "pragma: no-cover", "@abstract", "def __repr__"]

[tool.black]
line-length = 125
target-version = ['py310']


[tool.isort]
known_first_party = ["bcj", "_bcj"]
known_third_party = ["docutils","flake8","pyannotate_runtime","pytest","pytz","setuptools","sphinx","yaml"]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 125

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = mypy, clean, check, py37, py38, py39, pypy3, docs

[testenv]
extras = test
passenv =
    COVERALLS_*
    PYTEST_ADDOPTS
commands = pytest
depends =
    {py38,py39,py310,py311,py312,pypy3}: clean
    report: py38,py39,py310,py311,py312,pypy3

[pytest]
python_files = test_*.py
norecursedirs = .git _build tmp* .eggs
markers =
    thread: test with threading

[testenv:check]
basepython = python3.8
extras = check
commands =
    check-manifest {toxinidir}
    flake8 src tests setup.py
    isort --check-only --diff src/*.py src/pykakasi/*.py tests/*.py setup.py

[testenv:clean]
deps = coverage[toml]>=5.2
commands = coverage erase

[testenv:mypy]
extras = check
commands = mypy src

[mypy]
warn_redundant_casts = True
warn_unused_ignores = True
strict_optional = True
show_column_numbers = True
ignore_missing_imports = True

[isort]
known_first_party = pykakasi
known_third_party = docutils,flake8,pyannotate_runtime,pytest,pytz,setuptools,sphinx,yaml
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True

[testenv:coveralls]
deps =
    coveralls>=2.1.1,<3.0.0
skip_install = true
commands =
    coveralls []

[testenv:docs]
basepython = python3.12
extras = docs
commands =
    sphinx-build {posargs:-E} -b html docs build/docs
    sphinx-build -b linkcheck docs build/docs
"""