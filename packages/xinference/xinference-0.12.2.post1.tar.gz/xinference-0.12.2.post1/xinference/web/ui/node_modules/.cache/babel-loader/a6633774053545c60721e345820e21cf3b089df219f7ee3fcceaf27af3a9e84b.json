{"ast":null,"code":"import _classCallCheck from\"/home/runner/work/inference/inference/xinference/web/ui/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/runner/work/inference/inference/xinference/web/ui/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/home/runner/work/inference/inference/xinference/web/ui/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/runner/work/inference/inference/xinference/web/ui/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import Table from'@mui/material/Table';import TableBody from'@mui/material/TableBody';import TableHead from'@mui/material/TableHead';import TableRow from'@mui/material/TableRow';import Grid from'@mui/material/Unstable_Grid2';import React from'react';import{toReadableSize}from'../../components/utils';import{StyledTableCell,StyledTableRow}from'./style';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var NodeInfo=/*#__PURE__*/function(_React$Component){_inherits(NodeInfo,_React$Component);var _super=_createSuper(NodeInfo);function NodeInfo(props){var _this;_classCallCheck(this,NodeInfo);_this=_super.call(this,props);_this.nodeRole=props.nodeRole;_this.endpoint=props.endpoint;_this.state={version:{},info:[]};return _this;}_createClass(NodeInfo,[{key:\"refreshInfo\",value:function refreshInfo(){var _this2=this;fetch(\"\".concat(this.endpoint,\"/v1/cluster/info?detailed=true\"),{method:'GET'}).then(function(res){return res.json();}).then(function(res){var state=_this2.state;state['info']=res;_this2.setState(state);});if(JSON.stringify(this.state.version)==='{}'){fetch(\"\".concat(this.endpoint,\"/v1/cluster/version\"),{method:'GET'}).then(function(res){return res.json();}).then(function(res){var state=_this2.state;state['version']={release:'v'+res['version'],commit:res['full-revisionid']};_this2.setState(state);});}}},{key:\"componentDidMount\",value:function componentDidMount(){var _this3=this;this.interval=setInterval(function(){return _this3.refreshInfo();},5000);this.refreshInfo();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){clearInterval(this.interval);}},{key:\"render\",value:function render(){var _this4=this;if(this.state===undefined||this.state['info']===[]){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading\"});}if(this.nodeRole!=='Worker-Details'){var roleData=this.state['info'].filter(function(obj){return obj['node_type']===_this4.nodeRole;});var sum=function sum(arr){return arr.reduce(function(a,b){return a+b;},0);};var gatherResourceStats=function gatherResourceStats(prop){return sum(roleData.map(function(obj){return obj[prop];}));};var resourceStats={cpu_total:gatherResourceStats('cpu_count'),cpu_avail:gatherResourceStats('cpu_available'),memory_total:gatherResourceStats('mem_total'),memory_avail:gatherResourceStats('mem_available'),gpu_total:gatherResourceStats('gpu_count'),gpu_memory_total:gatherResourceStats('gpu_vram_total'),gpu_memory_avail:gatherResourceStats('gpu_vram_available')};//for all cases, we will at least have cpu information available.\nresourceStats.cpu_used=resourceStats.cpu_total-resourceStats.cpu_avail;resourceStats.memory_used=resourceStats.memory_total-resourceStats.memory_avail;var row_count=/*#__PURE__*/_jsxs(StyledTableRow,{children:[/*#__PURE__*/_jsx(StyledTableCell,{children:\"Count\"}),/*#__PURE__*/_jsx(StyledTableCell,{children:/*#__PURE__*/_jsx(Grid,{container:true,children:/*#__PURE__*/_jsx(Grid,{children:roleData.length})})})]});var CPU_row=/*#__PURE__*/_jsxs(StyledTableRow,{children:[/*#__PURE__*/_jsx(StyledTableCell,{children:\"CPU Info\"}),/*#__PURE__*/_jsx(StyledTableCell,{children:/*#__PURE__*/_jsxs(Grid,{container:true,children:[/*#__PURE__*/_jsxs(Grid,{xs:4,children:[\"Usage: \",resourceStats.cpu_used.toFixed(2)]}),/*#__PURE__*/_jsxs(Grid,{xs:8,children:[\"Total: \",resourceStats.cpu_total.toFixed(2)]})]})})]});var CPU_Memory_Info_row=/*#__PURE__*/_jsxs(StyledTableRow,{children:[/*#__PURE__*/_jsx(StyledTableCell,{children:\"CPU Memory Info\"}),/*#__PURE__*/_jsx(StyledTableCell,{children:/*#__PURE__*/_jsxs(Grid,{container:true,children:[/*#__PURE__*/_jsxs(Grid,{xs:4,children:[\"Usage: \",toReadableSize(resourceStats.memory_used)]}),/*#__PURE__*/_jsxs(Grid,{xs:8,children:[\"Total: \",toReadableSize(resourceStats.memory_total)]})]})})]});var version_row=/*#__PURE__*/_jsxs(StyledTableRow,{children:[/*#__PURE__*/_jsx(StyledTableCell,{children:\"Version\"}),/*#__PURE__*/_jsx(StyledTableCell,{children:/*#__PURE__*/_jsxs(Grid,{container:true,children:[/*#__PURE__*/_jsxs(Grid,{xs:4,children:[\"Release: \",this.state.version.release]}),/*#__PURE__*/_jsxs(Grid,{xs:8,children:[\"Commit: \",this.state.version.commit]})]})})]});var table_bodies;//case that we do not have GPU presents.\nif(resourceStats.gpu_memory_total===0){table_bodies=[row_count,CPU_row,CPU_Memory_Info_row,version_row];}else{resourceStats.gpu_memory_used=resourceStats.gpu_memory_total-resourceStats.gpu_memory_avail;var GPU_row=/*#__PURE__*/_jsxs(StyledTableRow,{children:[/*#__PURE__*/_jsx(StyledTableCell,{children:\"GPU Info\"}),/*#__PURE__*/_jsx(StyledTableCell,{children:/*#__PURE__*/_jsx(Grid,{container:true,children:/*#__PURE__*/_jsxs(Grid,{xs:12,children:[\"Total: \",resourceStats.gpu_total.toFixed(2)]})})})]});var GPU_Memory_Info_row=/*#__PURE__*/_jsxs(StyledTableRow,{children:[/*#__PURE__*/_jsx(StyledTableCell,{children:\"GPU Memory Info\"}),/*#__PURE__*/_jsx(StyledTableCell,{children:/*#__PURE__*/_jsxs(Grid,{container:true,children:[/*#__PURE__*/_jsxs(Grid,{xs:4,children:[\"Usage: \",toReadableSize(resourceStats.gpu_memory_used)]}),/*#__PURE__*/_jsxs(Grid,{xs:8,children:[\"Total: \",toReadableSize(resourceStats.gpu_memory_total)]})]})})]});table_bodies=[row_count,CPU_row,CPU_Memory_Info_row,GPU_row,GPU_Memory_Info_row,version_row];}if(this.nodeRole==='Supervisor'){var supervisor_addr_row=/*#__PURE__*/_jsxs(StyledTableRow,{children:[/*#__PURE__*/_jsx(StyledTableCell,{children:\"Address\"}),/*#__PURE__*/_jsx(StyledTableCell,{children:/*#__PURE__*/_jsx(Grid,{container:true,children:/*#__PURE__*/_jsx(Grid,{children:roleData[0]?roleData[0]['ip_address']:'-'})})})]});table_bodies.splice(1,0,supervisor_addr_row);}return/*#__PURE__*/_jsxs(Table,{size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(StyledTableCell,{style:{fontWeight:'bolder'},children:\"Item\"}),/*#__PURE__*/_jsx(StyledTableCell,{style:{fontWeight:'bolder'},children:/*#__PURE__*/_jsx(Grid,{container:true,children:/*#__PURE__*/_jsx(Grid,{children:\"Value\"})})})]})}),/*#__PURE__*/_jsx(TableBody,{children:table_bodies})]});}else{var workerData=this.state['info'].filter(function(obj){return obj['node_type']==='Worker';});return/*#__PURE__*/_jsxs(Table,{size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(StyledTableCell,{style:{fontWeight:'bolder'},children:\"Node Type\"}),/*#__PURE__*/_jsx(StyledTableCell,{style:{fontWeight:'bolder'},children:\"Address\"}),/*#__PURE__*/_jsx(StyledTableCell,{style:{fontWeight:'bolder'},children:\"CPU Usage\"}),/*#__PURE__*/_jsx(StyledTableCell,{style:{fontWeight:'bolder'},children:\"CPU Total\"}),/*#__PURE__*/_jsx(StyledTableCell,{style:{fontWeight:'bolder'},children:\"Mem Usage\"}),/*#__PURE__*/_jsx(StyledTableCell,{style:{fontWeight:'bolder'},children:\"Mem Total\"}),/*#__PURE__*/_jsx(StyledTableCell,{style:{fontWeight:'bolder'},children:\"GPU Count\"}),/*#__PURE__*/_jsx(StyledTableCell,{style:{fontWeight:'bolder'},children:\"GPU Mem Usage\"}),/*#__PURE__*/_jsx(StyledTableCell,{style:{fontWeight:'bolder'},children:\"GPU Mem Total\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:workerData.map(function(row){return/*#__PURE__*/_jsxs(StyledTableRow,{children:[/*#__PURE__*/_jsx(StyledTableCell,{children:\"Worker\"}),/*#__PURE__*/_jsx(StyledTableCell,{children:row['ip_address']}),/*#__PURE__*/_jsx(StyledTableCell,{children:(row['cpu_count']-row['cpu_available']).toFixed(2)}),/*#__PURE__*/_jsx(StyledTableCell,{children:row['cpu_count'].toFixed(2)}),/*#__PURE__*/_jsx(StyledTableCell,{children:toReadableSize(row['mem_total']-row['mem_available'])}),/*#__PURE__*/_jsx(StyledTableCell,{children:toReadableSize(row['mem_total'])}),/*#__PURE__*/_jsx(StyledTableCell,{children:row['gpu_count'].toFixed(2)}),/*#__PURE__*/_jsx(StyledTableCell,{children:toReadableSize(row['gpu_vram_total']-row['gpu_vram_available'])}),/*#__PURE__*/_jsx(StyledTableCell,{children:toReadableSize(row['gpu_vram_total'])})]});})})]});}}}]);return NodeInfo;}(React.Component);export default NodeInfo;","map":{"version":3,"names":["Table","TableBody","TableHead","TableRow","Grid","React","toReadableSize","StyledTableCell","StyledTableRow","jsx","_jsx","jsxs","_jsxs","NodeInfo","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","nodeRole","endpoint","state","version","info","_createClass","key","value","refreshInfo","_this2","fetch","concat","method","then","res","json","setState","JSON","stringify","release","commit","componentDidMount","_this3","interval","setInterval","componentWillUnmount","clearInterval","render","_this4","undefined","children","roleData","filter","obj","sum","arr","reduce","a","b","gatherResourceStats","prop","map","resourceStats","cpu_total","cpu_avail","memory_total","memory_avail","gpu_total","gpu_memory_total","gpu_memory_avail","cpu_used","memory_used","row_count","container","length","CPU_row","xs","toFixed","CPU_Memory_Info_row","version_row","table_bodies","gpu_memory_used","GPU_row","GPU_Memory_Info_row","supervisor_addr_row","splice","size","style","fontWeight","workerData","row","Component"],"sources":["/home/runner/work/inference/inference/xinference/web/ui/src/scenes/cluster_info/nodeInfo.js"],"sourcesContent":["import Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Grid from '@mui/material/Unstable_Grid2'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport { toReadableSize } from '../../components/utils'\nimport { StyledTableCell, StyledTableRow } from './style'\n\nclass NodeInfo extends React.Component {\n  constructor(props) {\n    super(props)\n    this.nodeRole = props.nodeRole\n    this.endpoint = props.endpoint\n    this.state = {\n      version: {},\n      info: [],\n    }\n  }\n\n  refreshInfo() {\n    fetch(`${this.endpoint}/v1/cluster/info?detailed=true`, { method: 'GET' })\n      .then((res) => res.json())\n      .then((res) => {\n        const { state } = this\n        state['info'] = res\n        this.setState(state)\n      })\n\n    if (JSON.stringify(this.state.version) === '{}') {\n      fetch(`${this.endpoint}/v1/cluster/version`, {\n        method: 'GET',\n      })\n        .then((res) => res.json())\n        .then((res) => {\n          const { state } = this\n          state['version'] = {\n            release: 'v' + res['version'],\n            commit: res['full-revisionid'],\n          }\n          this.setState(state)\n        })\n    }\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.refreshInfo(), 5000)\n    this.refreshInfo()\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval)\n  }\n\n  render() {\n    if (this.state === undefined || this.state['info'] === []) {\n      return <div>Loading</div>\n    }\n\n    if (this.nodeRole !== 'Worker-Details') {\n      const roleData = this.state['info'].filter(\n        (obj) => obj['node_type'] === this.nodeRole\n      )\n\n      const sum = (arr) => {\n        return arr.reduce((a, b) => a + b, 0)\n      }\n\n      const gatherResourceStats = (prop) =>\n        sum(roleData.map((obj) => obj[prop]))\n\n      const resourceStats = {\n        cpu_total: gatherResourceStats('cpu_count'),\n        cpu_avail: gatherResourceStats('cpu_available'),\n        memory_total: gatherResourceStats('mem_total'),\n        memory_avail: gatherResourceStats('mem_available'),\n        gpu_total: gatherResourceStats('gpu_count'),\n        gpu_memory_total: gatherResourceStats('gpu_vram_total'),\n        gpu_memory_avail: gatherResourceStats('gpu_vram_available'),\n      }\n\n      //for all cases, we will at least have cpu information available.\n      resourceStats.cpu_used = resourceStats.cpu_total - resourceStats.cpu_avail\n      resourceStats.memory_used =\n        resourceStats.memory_total - resourceStats.memory_avail\n\n      const row_count = (\n        <StyledTableRow>\n          <StyledTableCell>Count</StyledTableCell>\n          <StyledTableCell>\n            <Grid container>\n              <Grid>{roleData.length}</Grid>\n            </Grid>\n          </StyledTableCell>\n        </StyledTableRow>\n      )\n\n      const CPU_row = (\n        <StyledTableRow>\n          <StyledTableCell>CPU Info</StyledTableCell>\n          <StyledTableCell>\n            <Grid container>\n              <Grid xs={4}>Usage: {resourceStats.cpu_used.toFixed(2)}</Grid>\n              <Grid xs={8}>Total: {resourceStats.cpu_total.toFixed(2)}</Grid>\n            </Grid>\n          </StyledTableCell>\n        </StyledTableRow>\n      )\n\n      const CPU_Memory_Info_row = (\n        <StyledTableRow>\n          <StyledTableCell>CPU Memory Info</StyledTableCell>\n          <StyledTableCell>\n            <Grid container>\n              <Grid xs={4}>\n                Usage: {toReadableSize(resourceStats.memory_used)}\n              </Grid>\n              <Grid xs={8}>\n                Total: {toReadableSize(resourceStats.memory_total)}\n              </Grid>\n            </Grid>\n          </StyledTableCell>\n        </StyledTableRow>\n      )\n\n      const version_row = (\n        <StyledTableRow>\n          <StyledTableCell>Version</StyledTableCell>\n          <StyledTableCell>\n            <Grid container>\n              <Grid xs={4}>Release: {this.state.version.release}</Grid>\n              <Grid xs={8}>Commit: {this.state.version.commit}</Grid>\n            </Grid>\n          </StyledTableCell>\n        </StyledTableRow>\n      )\n\n      let table_bodies\n      //case that we do not have GPU presents.\n      if (resourceStats.gpu_memory_total === 0) {\n        table_bodies = [row_count, CPU_row, CPU_Memory_Info_row, version_row]\n      } else {\n        resourceStats.gpu_memory_used =\n          resourceStats.gpu_memory_total - resourceStats.gpu_memory_avail\n\n        const GPU_row = (\n          <StyledTableRow>\n            <StyledTableCell>GPU Info</StyledTableCell>\n            <StyledTableCell>\n              <Grid container>\n                <Grid xs={12}>Total: {resourceStats.gpu_total.toFixed(2)}</Grid>\n              </Grid>\n            </StyledTableCell>\n          </StyledTableRow>\n        )\n\n        const GPU_Memory_Info_row = (\n          <StyledTableRow>\n            <StyledTableCell>GPU Memory Info</StyledTableCell>\n            <StyledTableCell>\n              <Grid container>\n                <Grid xs={4}>\n                  Usage: {toReadableSize(resourceStats.gpu_memory_used)}\n                </Grid>\n                <Grid xs={8}>\n                  Total: {toReadableSize(resourceStats.gpu_memory_total)}\n                </Grid>\n              </Grid>\n            </StyledTableCell>\n          </StyledTableRow>\n        )\n\n        table_bodies = [\n          row_count,\n          CPU_row,\n          CPU_Memory_Info_row,\n          GPU_row,\n          GPU_Memory_Info_row,\n          version_row,\n        ]\n      }\n\n      if (this.nodeRole === 'Supervisor') {\n        const supervisor_addr_row = (\n          <StyledTableRow>\n            <StyledTableCell>Address</StyledTableCell>\n            <StyledTableCell>\n              <Grid container>\n                <Grid>{roleData[0] ? roleData[0]['ip_address'] : '-'}</Grid>\n              </Grid>\n            </StyledTableCell>\n          </StyledTableRow>\n        )\n        table_bodies.splice(1, 0, supervisor_addr_row)\n      }\n\n      return (\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell style={{ fontWeight: 'bolder' }}>\n                Item\n              </StyledTableCell>\n              <StyledTableCell style={{ fontWeight: 'bolder' }}>\n                <Grid container>\n                  <Grid>Value</Grid>\n                </Grid>\n              </StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>{table_bodies}</TableBody>\n        </Table>\n      )\n    } else {\n      const workerData = this.state['info'].filter(\n        (obj) => obj['node_type'] === 'Worker'\n      )\n\n      return (\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell style={{ fontWeight: 'bolder' }}>\n                Node Type\n              </StyledTableCell>\n              <StyledTableCell style={{ fontWeight: 'bolder' }}>\n                Address\n              </StyledTableCell>\n              <StyledTableCell style={{ fontWeight: 'bolder' }}>\n                CPU Usage\n              </StyledTableCell>\n              <StyledTableCell style={{ fontWeight: 'bolder' }}>\n                CPU Total\n              </StyledTableCell>\n              <StyledTableCell style={{ fontWeight: 'bolder' }}>\n                Mem Usage\n              </StyledTableCell>\n              <StyledTableCell style={{ fontWeight: 'bolder' }}>\n                Mem Total\n              </StyledTableCell>\n              <StyledTableCell style={{ fontWeight: 'bolder' }}>\n                GPU Count\n              </StyledTableCell>\n              <StyledTableCell style={{ fontWeight: 'bolder' }}>\n                GPU Mem Usage\n              </StyledTableCell>\n              <StyledTableCell style={{ fontWeight: 'bolder' }}>\n                GPU Mem Total\n              </StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {workerData.map((row) => (\n              <StyledTableRow>\n                <StyledTableCell>Worker</StyledTableCell>\n                <StyledTableCell>{row['ip_address']}</StyledTableCell>\n                <StyledTableCell>\n                  {(row['cpu_count'] - row['cpu_available']).toFixed(2)}\n                </StyledTableCell>\n                <StyledTableCell>{row['cpu_count'].toFixed(2)}</StyledTableCell>\n                <StyledTableCell>\n                  {toReadableSize(row['mem_total'] - row['mem_available'])}\n                </StyledTableCell>\n                <StyledTableCell>\n                  {toReadableSize(row['mem_total'])}\n                </StyledTableCell>\n                <StyledTableCell>{row['gpu_count'].toFixed(2)}</StyledTableCell>\n                <StyledTableCell>\n                  {toReadableSize(\n                    row['gpu_vram_total'] - row['gpu_vram_available']\n                  )}\n                </StyledTableCell>\n                <StyledTableCell>\n                  {toReadableSize(row['gpu_vram_total'])}\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      )\n    }\n  }\n}\n\nNodeInfo.propTypes = {\n  nodeRole: PropTypes.string,\n  endpoint: PropTypes.string,\n}\n\nexport default NodeInfo\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}