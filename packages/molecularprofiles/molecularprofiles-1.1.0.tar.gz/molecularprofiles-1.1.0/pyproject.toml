[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "molecularprofiles"
authors = [{name = "Pere Munar Adrover", email = "pere.munar@uab.cat"},
           {name = "Markus Gaug", email = "markus.gaug@uab.cat"},
           {name = "Scott Griffiths", email = "sgriffiths@ifae.es"},
           {name = "Georgios Voutsinas", email = "georgios.voutsinas@unige.ch"},
           {name = "Mykhailo Dalchenko", email = "mykhailo.dalchenko@unige.ch"}]
readme = "README.md"
license = {file = "LICENSE"}
description = "Meteorological data analysis suite"
dynamic = ["version"]
classifiers = [
    "License :: OSI Approved :: BSD License",
]
requires-python = ">=3.8"

dependencies = [
    "numpy<2",
    "scipy",
    "astropy",
    "pygrib",
]

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-cov",
    "pylint >=2.15",
    "black >=22.5",
    "coverage-badge",
]

doc = [
    "sphinx",
    "numpydoc",
    "pydata-sphinx-theme",
    "myst-parser < 2.0.0",
    "sphinx-paramlinks",
    "sphinx-argparse",
    "nbsphinx",
    "linkify-it-py",
    "ipykernel",
]

dev = [
  "setuptools_scm",
]

[project.urls]
Home = "https://gitlab.cta-observatory.org/cta-array-elements/ccf/mdps"
Doc = "http://cta-array-elements.gitlab-pages.cta-observatory.org/ccf/MDPs/"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
namespaces = true
where = ["src"]
exclude = ["molecularprofiles._dev_version"]

[tool.setuptools_scm]
version_file = "src/molecularprofiles/_version.py"

[tool.setuptools.package-data]
molecularprofiles = ["*.conf"]
"molecularprofiles.utils" = ["*.conf"]
"molecularprofiles.utils.absorbing_molecules" = ["*.csv"]

[tool.setuptools.dynamic]
version = {attr = "molecularprofiles.__version__"}

[tool.pylint.main]
extension-pkg-whitelist = ["numpy", "astropy", "astropy.units", "astropy.units.cds", "pygrib"]
suggestion-mode = true

[tool.pylint.basic]
good-names = ["i", "j", "k", "x", "_", "P", "T", "RH", "CO2", "R", "H1", "H2"]
class-naming-style = "PascalCase"
class-const-naming-style = "UPPER_CASE"
argument-naming-style = "snake_case"
attr-naming-style = "snake_case"
function-naming-style = "snake_case"
inlinevar-naming-style = "any"
[tool.pylint.exceptions]
overgeneral-exceptions = ["builtins.BaseException", "builtins.Exception"]
[tool.pylint.format]
ignore-long-lines = "^\\s*(# )?<?https?://\\S+>?$"
max-line-length = 88
[tool.pylint.typecheck]
generated-members=["REQUEST", "acl_users", "aq_parent", "numpy.*", "np.*", "astropy.*", "pygrib.*"]
ignored-modules = ["numpy", "np", "astropy", "pygrib"]

[tool.coverage.run]
relative_files = true

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
  \.toml
  |\.sh
  |\.git
  |\.ini
  |\.rst
  |Dockerfile
  |Jenkinfile
)/
'''