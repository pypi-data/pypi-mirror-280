[build-system]
requires = ["hatchling>=1.10.0"]
build-backend = "hatchling.build"

[project]
name = "hbtools"
authors = [{ name = "Bagard Hoel" }]
description = "Package containing a few python utils functions."
readme = "README.md"
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Operating System :: OS Independent",
  "Intended Audience :: Developers",
]
license = { text = "MIT" }
dynamic = ["version"]
dependencies = ["numpy>=1.21", "typing_extensions; python_version < '3.11'"]
requires-python = ">=3.10"

[project.urls]
"Homepage" = "https://github.com/hoel-bagard/hbtools"
"Bug Tracker" = "https://github.com/hoel-bagard/hbtools/issues"

[project.optional-dependencies]
opencv = ["opencv-python>=4.7"]
opencv-headless = ["opencv-python-headless>=4.7"]
terminal = ["Pillow", "term_image"]
dev = [
  "pre-commit",
  "pip-tools",
  "ruff",
  "pyright",
  "opencv-stubs",
  "term_image",
]
build = ["hatch"]
test = ["pytest", "nox"]
flake8 = [
  "flake8",
  "flake8-bugbear",
  "flake8-comprehensions",
  "flake8-docstrings",
  "flake8-builtins",
  "flake8-quotes",
  "pep8-naming",
  "flake8-import-order",
  "flake8-noqa",
  "flake8-broken-line",
  "flake8-commas",
  "Flake8-pyproject",
]

[tool.hatch.version]
path = "src/hbtools/__init__.py"

[tool.hatch.build.targets.sdist]
exclude = ["/.github", "/.pytest_cache", "/build", "/dist", "/docs"]

[tool.hatch.build.targets.wheel]
packages = ["src/hbtools"]

[tool.hatch.envs.pypi.scripts]
# hatch run pypi:publish_test
publish_test = "hatch build --clean && hatch publish -r test"
publish = "hatch build --clean && hatch publish"

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib"]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "ANN101",  # Missing type annotation for `self` in method
  "COM812",  # Conflicts with formatter
  "D1",      # Do not require docstrings
  "D203",    # one-blank-line-before-class  (incompatible)
  "D213",    # multi-line-summary-second-line  (incompatible)
  "D407",    # Missing dashed underline after section ("Args", "Returns")
  "ERA001",  # Found commented-out code
  "ISC001",  # Conflicts with formatter
  "PLR2004", # Magic value used in comparison, consider replacing X with a constant variable
  "T201",    # `print` found
  "TRY",
]

[tool.ruff.lint.per-file-ignores]
"noxfile.py" = ["ANN001"]
"tests/*.py" = [
  "FBT001", # Boolean positional arg in function definition
  "INP001", # File `X` is part of an implicit namespace package. Add an `__init__.py`.
  "S101",   # Use of `assert` detected
]

[tool.ruff.lint.isort]
order-by-type = false

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pyright]
include = ["src/hbtools", "tests"]
exclude = [".venv", "venv", ".nox"]
venvPath = "."
venv = ".venv"
pythonVersion = "3.11"
pythonPlatform = "Linux"

strictListInference = true
strictDictionaryInference = true
strictSetInference = true
reportMissingModuleSource = false
reportMissingImports = true
reportMissingTypeStubs = false
reportUnusedImport = true
reportUnusedClass = "warning"
reportUnusedFunction = "warning"
reportUnusedVariable = "warning"
reportDuplicateImport = "warning"
reportUntypedNamedTuple = "warning"
reportUntypedFunctionDecorator = "warning"
reportUntypedClassDecorator = "warning"
reportMissingSuperCall = false
reportUnknownArgumentType = "warning"
reportUnknownLambdaType = "warning"
reportUnknownVariableType = "warning"
reportUnknownMemberType = false
reportMissingParameterType = "warning"
reportMissingTypeArgument = "warning"
reportCallInDefaultInitializer = false
reportUnnecessaryIsInstance = "warning"
reportUnnecessaryCast = "warning"
reportUnnecessaryComparison = "warning"
reportImplicitStringConcatenation = false
reportUnusedCallResult = false
reportUnusedExpression = "warning"
reportUnnecessaryTypeIgnoreComment = "warning"
reportMatchNotExhaustive = "warning"

[tool.flake8]
max-line-length = 120
docstring-convention = "google"
import-order-style = "smarkets"
inline-quotes = "double"
exclude = ["env", "venv", ".nox"]
ignore = ["A003", "C816", "D1", "E704", "NQA102"]

[tool.pylint.messages_control]
max-line-length = 120
disable = ["no-member", "import-outside-toplevel"]
