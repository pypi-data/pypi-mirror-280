'''Структуры данных'''

import enum


class Base(str, enum.Enum):
    '''Основание (закон) проведения закупки'''
    FZ44 = 'fz44'
    FZ223 = 'fz223'

    @classmethod
    def from_name(cls, name: str):
        '''Получить объект из наименования'''
        for source in list(cls):
            if source.name == name.upper():
                return source
        raise ValueError('Неизвестное значение основания')

    def __str__(self):
        return self.name.lower()


class SubsystemType(str, enum.Enum):
    '''Тип подсистемы для отбора документов'''
    # --- подсистема размещения извещений (без протоколов
    #     со сведениями об участниках)
    PRIZ = 'PRIZ'
    # --- подсистема размещения извещений (протоколы со сведениями
    #     об участниках)
    PRIZP = 'PRIZP'
    # --- подсистема заключения контрактов
    RPEC = 'RPEC'
    # --- реестр планов графиков с 2020 года
    RPGZ = 'RPGZ'
    # --- реестр контрактов
    RGK = 'RGK'
    # --- реестр независимой гарантий
    RBG = 'RBG'
    # --- Электронное актирование
    EA = 'EA'
    # --- Односторонний отказ
    UR = 'UR'
    # --- Реестр жалоб
    RJ = 'RJ'
    # --- Реестр плановых проверок
    RPP = 'RPP'
    # --- Реестр внеплановых проверок
    RVP = 'RVP'
    # --- Реестр результатов контроля
    RRK = 'RRK'
    # --- Реестр результатов аудита
    RRA = 'RRA'
    # --- Реестр недобросовестных поставщиков;
    RNP = 'RNP'
    # --- Реестр квалифицированных подрядных организаций;
    RKPO = 'RKPO'
    # --- Реестр извещений и протоколов 615
    PPRF615 = 'PPRF615'
    # --- Реестр договоров 615
    RD615 = 'RD615'
    # --- Личный кабинет органа контроля
    LKOK = 'LKOK'
    # --- Отчеты заказчика
    OZ = 'OZ'


class NsiKind(str, enum.Enum):
    '''Вид выгрузки.

    all - полная выгузка справочника
    inc - инкрементальная выгрузка
    '''
    ALL = 'all'
    INC = 'inc'
